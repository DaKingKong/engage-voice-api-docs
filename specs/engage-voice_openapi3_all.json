{
  "components": {
    "requestBodies": {
      "Gate": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Gate"
            }
          }
        },
        "description": "gate",
        "required": true
      },
      "GateDisposition": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/GateDisposition"
            }
          }
        },
        "description": "gateDisposition",
        "required": true
      },
      "GateGroup": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/GateGroup"
            }
          }
        },
        "description": "gateGroup",
        "required": true
      },
      "GateGroupSkill": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/GateGroupSkill"
            }
          }
        },
        "description": "skill",
        "required": true
      },
      "GateQueueDtmfEvent": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/GateQueueDtmfEvent"
            }
          }
        },
        "description": "postPayload",
        "required": true
      },
      "GateQueueEvent": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/GateQueueEvent"
            }
          }
        },
        "description": "queueEvent",
        "required": true
      },
      "GateScheduleOverride": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/GateScheduleOverride"
            }
          }
        },
        "description": "scheduleOverride",
        "required": true
      },
      "PhoneBookEntry": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/PhoneBookEntry"
            }
          }
        },
        "description": "entry",
        "required": true
      }
    },
    "schemas": {
      "AccessTokenUserDetails": {
        "properties": {
          "accessToken": {
            "type": "string"
          },
          "adminId": {
            "format": "int32",
            "type": "integer"
          },
          "adminUrl": {
            "type": "string"
          },
          "agentDetails": {
            "items": {
              "$ref": "#/components/schemas/AgentV2"
            },
            "type": "array"
          },
          "agentUrl": {
            "type": "string"
          },
          "iqUrl": {
            "type": "string"
          },
          "loginHashcode": {
            "type": "string"
          },
          "mainAccountId": {
            "type": "string"
          },
          "platformId": {
            "type": "string"
          },
          "port": {
            "format": "int32",
            "type": "integer"
          },
          "rcUser": {
            "$ref": "#/components/schemas/Contact"
          },
          "redirectUrl": {
            "type": "string"
          },
          "refreshToken": {
            "type": "string"
          },
          "ssoLogin": {
            "type": "boolean"
          },
          "tokenType": {
            "type": "string"
          }
        },
        "title": "AccessTokenUserDetails",
        "type": "object"
      },
      "Account": {
        "properties": {
          "accountId": {
            "type": "string"
          },
          "accountName": {
            "type": "string"
          },
          "archivedAccount": {
            "type": "boolean"
          },
          "audioRetentionDays": {
            "format": "int32",
            "type": "integer"
          },
          "concurrentLogins": {
            "format": "int32",
            "type": "integer"
          },
          "crmHost": {
            "type": "string"
          },
          "crmInstance": {
            "type": "string"
          },
          "crmPwd": {
            "type": "string"
          },
          "crmUid": {
            "type": "string"
          },
          "dataRetentionDays": {
            "format": "int32",
            "type": "integer"
          },
          "databaseShardId": {
            "type": "string"
          },
          "defaultCallerid": {
            "type": "string"
          },
          "defaultHold": {
            "type": "string"
          },
          "defaultIntellidialServerId": {
            "format": "int32",
            "type": "integer"
          },
          "defaultOutdialServerGroupId": {
            "format": "int32",
            "type": "integer"
          },
          "dncOrgId": {
            "type": "string"
          },
          "dncOrgIdConfirmed": {
            "type": "boolean"
          },
          "emailFromAddress": {
            "type": "string"
          },
          "enable247Dialing": {
            "type": "boolean"
          },
          "enableAgentRankRouting": {
            "type": "boolean"
          },
          "enableBlankCallerid": {
            "type": "boolean"
          },
          "enableCallEventTracking": {
            "type": "boolean"
          },
          "enableCellScrubbing": {
            "type": "boolean"
          },
          "enableCentralizedData": {
            "type": "boolean"
          },
          "enableChat": {
            "type": "boolean"
          },
          "enableCloudRouting": {
            "type": "boolean"
          },
          "enableCorporateDirectory": {
            "type": "boolean"
          },
          "enableCrmExport": {
            "type": "boolean"
          },
          "enableFifo": {
            "type": "boolean"
          },
          "enableFolderMode": {
            "type": "boolean"
          },
          "enableGoodData": {
            "type": "boolean"
          },
          "enableHciDialer": {
            "type": "boolean"
          },
          "enableInbound": {
            "type": "boolean"
          },
          "enableIntlOutbound": {
            "type": "boolean"
          },
          "enableListLoading": {
            "type": "boolean"
          },
          "enableMultiuser": {
            "type": "boolean"
          },
          "enableOutbound": {
            "type": "boolean"
          },
          "enableOutboundPredictive": {
            "type": "boolean"
          },
          "enableScheduledTasks": {
            "type": "boolean"
          },
          "enableSoftphones": {
            "type": "boolean"
          },
          "enableTaskMode": {
            "type": "boolean"
          },
          "enableTcpaSafeMachineDetect": {
            "type": "boolean"
          },
          "enableTracking": {
            "type": "boolean"
          },
          "enableVisualIvr": {
            "type": "boolean"
          },
          "enableVoiceBroadcast": {
            "type": "boolean"
          },
          "endDate": {
            "$ref": "#/components/schemas/DateTime"
          },
          "ftpHost": {
            "type": "string"
          },
          "ftpPwd": {
            "type": "string"
          },
          "ftpUid": {
            "type": "string"
          },
          "ivrAppsEnabled": {
            "type": "boolean"
          },
          "mainAccount": {
            "$ref": "#/components/schemas/MainAccount"
          },
          "mainAccountId": {
            "type": "string"
          },
          "mainAccountName": {
            "type": "string"
          },
          "maxBreakTime": {
            "format": "int32",
            "type": "integer"
          },
          "maxLunchTime": {
            "format": "int32",
            "type": "integer"
          },
          "maxOutPortsPerAgent": {
            "format": "int32",
            "type": "integer"
          },
          "minimumSec": {
            "format": "int32",
            "type": "integer"
          },
          "notificationEmail": {
            "type": "string"
          },
          "offHookHold": {
            "type": "string"
          },
          "offHookWhisper": {
            "type": "string"
          },
          "offHookWhisperGhost": {
            "type": "string"
          },
          "offhookCallerid": {
            "type": "string"
          },
          "outboundManualDefaultRingtime": {
            "format": "int32",
            "type": "integer"
          },
          "outboundPrepay": {
            "type": "boolean"
          },
          "overrideDispositions": {
            "format": "int32",
            "type": "integer"
          },
          "pciCompliance": {
            "type": "boolean"
          },
          "pciComplianceRequest": {
            "type": "boolean"
          },
          "phoneRecordingPin": {
            "format": "int32",
            "type": "integer"
          },
          "primaryTimezone": {
            "format": "int32",
            "type": "integer"
          },
          "rcAccountAccess": {
            "enum": [
              "DISABLED",
              "ENABLED",
              "REQUIRED"
            ],
            "type": "string"
          },
          "recordingAccessMode": {
            "enum": [
              "ANONYMOUS",
              "ACCOUNT",
              "RIGHTS_DOC",
              "DISABLED"
            ],
            "type": "string"
          },
          "recordingFilenameFormat": {
            "type": "string"
          },
          "recordingsDelivery": {
            "type": "string"
          },
          "rounding": {
            "format": "int32",
            "type": "integer"
          },
          "securityKey": {
            "type": "string"
          },
          "softphoneHost": {
            "type": "string"
          },
          "softphoneWsdl": {
            "type": "string"
          },
          "startDate": {
            "$ref": "#/components/schemas/DateTime"
          },
          "tcpaSafeMode": {
            "type": "boolean"
          },
          "usePowerBy": {
            "type": "boolean"
          },
          "weekOffset": {
            "format": "int32",
            "type": "integer"
          },
          "wfmType": {
            "enum": [
              "GENERIC",
              "GENERIC_UDP",
              "ASPECT",
              "AC2",
              "PIPKINS",
              "MONET",
              "NONE"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "AccountAuxState": {
        "properties": {
          "agentAuxState": {
            "type": "string"
          },
          "baseAgentState": {
            "$ref": "#/components/schemas/BaseAgentState"
          },
          "description": {
            "type": "string"
          },
          "isActive": {
            "type": "boolean"
          },
          "isAgentSelectable": {
            "type": "boolean"
          },
          "isRequired": {
            "type": "boolean"
          },
          "rank": {
            "format": "int32",
            "type": "integer"
          },
          "stateId": {
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "AccountView": {
        "properties": {
          "accountId": {
            "type": "string"
          },
          "accountName": {
            "type": "string"
          },
          "databaseShardId": {
            "type": "string"
          },
          "defaultIntellidialServerId": {
            "format": "int32",
            "type": "integer"
          },
          "defaultOutdialServerGroupId": {
            "format": "int32",
            "type": "integer"
          },
          "emailFromAddress": {
            "type": "string"
          },
          "enable247Dialing": {
            "type": "boolean"
          },
          "enableAgentRankRouting": {
            "type": "boolean"
          },
          "enableChat": {
            "type": "boolean"
          },
          "enableCloudRouting": {
            "type": "boolean"
          },
          "enableFifo": {
            "type": "boolean"
          },
          "enableGoodData": {
            "type": "boolean"
          },
          "enableHciDialer": {
            "type": "boolean"
          },
          "enableInbound": {
            "type": "boolean"
          },
          "enableMultiUser": {
            "type": "boolean"
          },
          "enableOutbound": {
            "type": "boolean"
          },
          "enableSoftphones": {
            "type": "boolean"
          },
          "enableTcpaSafeMachineDetect": {
            "type": "boolean"
          },
          "enableTracking": {
            "type": "boolean"
          },
          "enableVisualIvr": {
            "type": "boolean"
          },
          "enableVoiceBroadcast": {
            "type": "boolean"
          },
          "mainAccountId": {
            "type": "string"
          },
          "mainAccountName": {
            "type": "string"
          },
          "outboundPrepay": {
            "type": "boolean"
          },
          "tcpaSafeMode": {
            "type": "boolean"
          },
          "usePowerBy": {
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "ActiveCall": {
        "properties": {
          "accountId": {
            "type": "string"
          },
          "agentFirstName": {
            "type": "string"
          },
          "agentLastName": {
            "type": "string"
          },
          "ani": {
            "type": "string"
          },
          "archive": {
            "type": "boolean"
          },
          "callState": {
            "type": "string"
          },
          "dequeueTime": {
            "type": "string"
          },
          "dnis": {
            "type": "string"
          },
          "enqueueTime": {
            "type": "string"
          },
          "uii": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "ActiveCallListResponse": {
        "properties": {
          "accountId": {
            "type": "string"
          },
          "agentFirstName": {
            "type": "string"
          },
          "agentLastName": {
            "type": "string"
          },
          "ani": {
            "type": "string"
          },
          "archive": {
            "type": "boolean"
          },
          "callState": {
            "type": "string"
          },
          "dequeueTime": {
            "type": "string"
          },
          "dnis": {
            "type": "string"
          },
          "enqueueTime": {
            "type": "string"
          },
          "uii": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "ActiveState_boolean_": {
        "properties": {
          "isActive": {
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "Agent": {
        "properties": {
          "accountAccess": {
            "$ref": "#/components/schemas/Collection_AgentAccountAccess_"
          },
          "active": {
            "type": "boolean"
          },
          "agentAccountAccess": {
            "items": {
              "$ref": "#/components/schemas/AgentAccountAccess"
            },
            "type": "array"
          },
          "agentChatGroupAccess": {
            "items": {
              "$ref": "#/components/schemas/AgentChatGroupAccess"
            },
            "type": "array"
          },
          "agentChatQueueAccesses": {
            "$ref": "#/components/schemas/Collection_AgentChatQueueAccess_"
          },
          "agentDialGroupMembers": {
            "$ref": "#/components/schemas/Collection_AgentDialGroupMember_"
          },
          "agentGateAccess": {
            "$ref": "#/components/schemas/Collection_AgentGateAccess_"
          },
          "agentGateGroupAccess": {
            "items": {
              "$ref": "#/components/schemas/AgentGateGroupAccess"
            },
            "type": "array"
          },
          "agentGroup": {
            "$ref": "#/components/schemas/AgentGroup"
          },
          "agentId": {
            "format": "int32",
            "type": "integer"
          },
          "agentLoadBalance": {
            "$ref": "#/components/schemas/Collection_AgentLoadBalanceMember_"
          },
          "agentLoadBalanceMembers": {
            "$ref": "#/components/schemas/Collection_AgentLoadBalanceMember_"
          },
          "agentRank": {
            "format": "int32",
            "type": "integer"
          },
          "agentSkillProfiles": {
            "$ref": "#/components/schemas/Collection_AgentSkillProfile_"
          },
          "agentType": {
            "enum": [
              "AGENT",
              "SUPERVISOR",
              "MULTI_USER",
              "MULTI_SUPERVISOR"
            ],
            "type": "string"
          },
          "allowAgentReports": {
            "type": "boolean"
          },
          "allowAgentStats": {
            "type": "boolean"
          },
          "allowAutoAnswer": {
            "type": "boolean"
          },
          "allowBlended": {
            "type": "boolean"
          },
          "allowCallControl": {
            "type": "boolean"
          },
          "allowCampStats": {
            "type": "boolean"
          },
          "allowChat": {
            "type": "boolean"
          },
          "allowChatStats": {
            "type": "boolean"
          },
          "allowChatVoiceConcurrent": {
            "type": "boolean"
          },
          "allowCrossGateRequeue": {
            "type": "boolean"
          },
          "allowDirectAgentTransfer": {
            "enum": [
              "DIRECT_TRANSFER_DISABLED",
              "ALLOW_DIRECT_TRANSFER_TO_SAME_GROUP",
              "ALLOW_DIRECT_TRANSFER_TO_ANY_GROUP"
            ],
            "type": "string"
          },
          "allowEndcallforeveryone": {
            "type": "boolean"
          },
          "allowExternalChat": {
            "type": "boolean"
          },
          "allowFromIpAddresses": {
            "type": "string"
          },
          "allowGateStats": {
            "type": "boolean"
          },
          "allowHangup": {
            "type": "boolean"
          },
          "allowHistoricalDialing": {
            "type": "boolean"
          },
          "allowHold": {
            "type": "boolean"
          },
          "allowInbound": {
            "type": "boolean"
          },
          "allowInboundIntlTransfer": {
            "type": "boolean"
          },
          "allowLeadInserts": {
            "type": "boolean"
          },
          "allowLoginControl": {
            "type": "boolean"
          },
          "allowLoginUpdates": {
            "type": "boolean"
          },
          "allowManualCalls": {
            "type": "boolean"
          },
          "allowManualIntlCalls": {
            "type": "boolean"
          },
          "allowManualIntlTransfer": {
            "type": "boolean"
          },
          "allowManualOutboundGates": {
            "type": "boolean"
          },
          "allowManualPass": {
            "type": "boolean"
          },
          "allowOffHook": {
            "type": "boolean"
          },
          "allowOutbound": {
            "type": "boolean"
          },
          "allowRequeue": {
            "type": "boolean"
          },
          "allowSelfAgentStats": {
            "type": "boolean"
          },
          "allowTransfer": {
            "type": "boolean"
          },
          "altDefaultLoginDest": {
            "type": "string"
          },
          "chatQueueAssignments": {
            "items": {
              "format": "int32",
              "type": "integer"
            },
            "type": "array"
          },
          "createdOn": {
            "$ref": "#/components/schemas/DateTime"
          },
          "defaultAutoAnswerOn": {
            "type": "boolean"
          },
          "defaultLoginDest": {
            "type": "string"
          },
          "dialGroupAssignments": {
            "items": {
              "format": "int32",
              "type": "integer"
            },
            "type": "array"
          },
          "directAgentExtension": {
            "type": "string"
          },
          "disableSupervisorMonitoring": {
            "type": "boolean"
          },
          "email": {
            "type": "string"
          },
          "enableSoftphone": {
            "type": "boolean"
          },
          "externalAgentId": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "gateAssignments": {
            "items": {
              "format": "int32",
              "type": "integer"
            },
            "type": "array"
          },
          "gatesControlAgentVisibility": {
            "type": "boolean"
          },
          "ghostRnaAction": {
            "type": "string"
          },
          "groupId": {
            "format": "int32",
            "type": "integer"
          },
          "initLoginBaseState": {
            "type": "string"
          },
          "initLoginBaseStateId": {
            "format": "int32",
            "type": "integer"
          },
          "isActive": {
            "type": "boolean"
          },
          "lastLoginDate": {
            "$ref": "#/components/schemas/DateTime"
          },
          "lastName": {
            "type": "string"
          },
          "loadBalanceEnabled": {
            "type": "boolean"
          },
          "location": {
            "type": "string"
          },
          "manualOutboundDefaultCallerId": {
            "type": "string"
          },
          "manualOutboundDefaultGate": {
            "$ref": "#/components/schemas/Gate"
          },
          "maxChats": {
            "format": "int32",
            "type": "integer"
          },
          "multiAccountAgent": {
            "type": "boolean"
          },
          "parentAgentId": {
            "format": "int32",
            "type": "integer"
          },
          "password": {
            "type": "string"
          },
          "permissions": {
            "items": {
              "enum": [
                "CREATE",
                "READ",
                "UPDATE",
                "DELETE",
                "REPORT"
              ],
              "type": "string"
            },
            "type": "array"
          },
          "phoneLoginDialGroup": {
            "$ref": "#/components/schemas/DialGroup"
          },
          "phoneLoginPin": {
            "type": "string"
          },
          "rcUserId": {
            "format": "int64",
            "type": "integer"
          },
          "showLeadHistory": {
            "type": "boolean"
          },
          "sipSafeUsername": {
            "type": "string"
          },
          "softphoneId": {
            "format": "int32",
            "type": "integer"
          },
          "team": {
            "type": "string"
          },
          "transientAgent": {
            "type": "boolean"
          },
          "transientDelete": {
            "type": "boolean"
          },
          "transientDeleteDate": {
            "$ref": "#/components/schemas/DateTime"
          },
          "userManagedByRC": {
            "type": "boolean"
          },
          "username": {
            "type": "string"
          },
          "whereSupervisee": {
            "items": {
              "$ref": "#/components/schemas/AgentSupervisor"
            },
            "type": "array"
          },
          "whereSupervisor": {
            "$ref": "#/components/schemas/Collection_AgentSupervisor_"
          }
        },
        "type": "object"
      },
      "AgentAccountAccess": {
        "properties": {
          "account": {
            "$ref": "#/components/schemas/Account"
          },
          "accountId": {
            "type": "string"
          },
          "accountName": {
            "type": "string"
          },
          "agent": {
            "$ref": "#/components/schemas/Agent"
          },
          "agentId": {
            "format": "int32",
            "type": "integer"
          },
          "name": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "AgentChatGroupAccess": {
        "properties": {
          "agentId": {
            "format": "int32",
            "type": "integer"
          },
          "chatGroupId": {
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "AgentChatQueueAccess": {
        "properties": {
          "agentId": {
            "format": "int32",
            "type": "integer"
          },
          "chatQueue": {
            "$ref": "#/components/schemas/ChatQueue"
          },
          "chatQueueId": {
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "AgentDialGroupMember": {
        "properties": {
          "agentId": {
            "format": "int32",
            "type": "integer"
          },
          "dialGroupId": {
            "format": "int32",
            "type": "integer"
          },
          "hciClicker": {
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "AgentGateAccess": {
        "properties": {
          "agentId": {
            "format": "int32",
            "type": "integer"
          },
          "agentRank": {
            "format": "int32",
            "type": "integer"
          },
          "defaultDestOverride": {
            "type": "string"
          },
          "gateId": {
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "AgentGateGroupAccess": {
        "properties": {
          "agentId": {
            "format": "int32",
            "type": "integer"
          },
          "gateGroupId": {
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "AgentGroup": {
        "properties": {
          "account": {
            "$ref": "#/components/schemas/Account"
          },
          "agentGroupId": {
            "format": "int32",
            "type": "integer"
          },
          "agents": {
            "$ref": "#/components/schemas/Collection_Agent_"
          },
          "groupName": {
            "type": "string"
          },
          "isDefault": {
            "type": "boolean"
          },
          "permissions": {
            "items": {
              "enum": [
                "CREATE",
                "READ",
                "UPDATE",
                "DELETE",
                "REPORT"
              ],
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "AgentLoadBalanceMember": {
        "properties": {
          "masterAgentId": {
            "format": "int32",
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "slaveAccountId": {
            "type": "string"
          },
          "slaveAgentId": {
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "AgentSkillProfile": {
        "properties": {
          "chatGroupSkills": {
            "items": {
              "$ref": "#/components/schemas/ChatGroupSkill"
            },
            "type": "array"
          },
          "createdOn": {
            "$ref": "#/components/schemas/DateTime"
          },
          "default": {
            "type": "boolean"
          },
          "gateGroupSkills": {
            "items": {
              "$ref": "#/components/schemas/GateGroupSkill"
            },
            "type": "array"
          },
          "groupSkills": {
            "items": {
              "$ref": "#/components/schemas/GateGroupSkill"
            },
            "type": "array"
          },
          "isDefault": {
            "type": "boolean"
          },
          "profileDesc": {
            "type": "string"
          },
          "profileId": {
            "format": "int32",
            "type": "integer"
          },
          "profileName": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "AgentSupervisor": {
        "properties": {
          "agentId": {
            "format": "int32",
            "type": "integer"
          },
          "supervisorId": {
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "AgentV2": {
        "properties": {
          "accountId": {
            "type": "string"
          },
          "accountName": {
            "type": "string"
          },
          "agentGroupId": {
            "format": "int32",
            "type": "integer"
          },
          "agentId": {
            "format": "int32",
            "type": "integer"
          },
          "agentRank": {
            "format": "int32",
            "type": "integer"
          },
          "agentType": {
            "type": "string"
          },
          "allowLoginControl": {
            "type": "boolean"
          },
          "allowLoginUpdates": {
            "type": "boolean"
          },
          "altDefaultLoginDest": {
            "type": "string"
          },
          "directAgentExtension": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "enableSoftphone": {
            "type": "boolean"
          },
          "externalAgentId": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "ghostRnaAction": {
            "type": "string"
          },
          "initLoginBaseState": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "location": {
            "type": "string"
          },
          "manualOutboundDefaultCallerId": {
            "type": "string"
          },
          "maxChats": {
            "format": "int32",
            "type": "integer"
          },
          "password": {
            "type": "string"
          },
          "phoneLoginPin": {
            "type": "string"
          },
          "rcUserId": {
            "format": "int64",
            "type": "integer"
          },
          "team": {
            "type": "string"
          },
          "username": {
            "type": "string"
          }
        },
        "title": "AgentV2",
        "type": "object"
      },
      "ApplicationContext": {
        "properties": {
          "applicationName": {
            "type": "string"
          },
          "autowireCapableBeanFactory": {
            "$ref": "#/components/schemas/AutowireCapableBeanFactory"
          },
          "beanDefinitionCount": {
            "format": "int32",
            "type": "integer"
          },
          "beanDefinitionNames": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "classLoader": {
            "$ref": "#/components/schemas/ClassLoader"
          },
          "displayName": {
            "type": "string"
          },
          "environment": {
            "$ref": "#/components/schemas/Environment"
          },
          "id": {
            "type": "string"
          },
          "parent": {
            "$ref": "#/components/schemas/ApplicationContext"
          },
          "parentBeanFactory": {
            "$ref": "#/components/schemas/BeanFactory"
          },
          "startupDate": {
            "format": "int64",
            "type": "integer"
          }
        },
        "title": "ApplicationContext",
        "type": "object"
      },
      "AutowireCapableBeanFactory": {
        "title": "AutowireCapableBeanFactory",
        "type": "object"
      },
      "BaseAgentState": {
        "properties": {
          "colKey": {
            "type": "string"
          },
          "colLabel": {
            "type": "string"
          },
          "id": {
            "format": "int32",
            "type": "integer"
          },
          "isCore": {
            "type": "boolean"
          },
          "isRequired": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "BeanFactory": {
        "title": "BeanFactory",
        "type": "object"
      },
      "Blob": {
        "properties": {
          "binaryStream": {
            "format": "int64",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "CallerIdBucket": {
        "properties": {
          "accountId": {
            "type": "string"
          },
          "active": {
            "type": "boolean"
          },
          "bucketId": {
            "format": "int32",
            "type": "integer"
          },
          "bucketName": {
            "type": "string"
          },
          "bwOrderId": {
            "type": "string"
          },
          "callerIdBucketNumbers": {
            "items": {
              "$ref": "#/components/schemas/CallerIdBucketNumber"
            },
            "type": "array"
          },
          "callerIdName": {
            "type": "string"
          },
          "createDate": {
            "$ref": "#/components/schemas/DateTime"
          },
          "excludedStates": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "forwardingDid": {
            "type": "string"
          },
          "isActive": {
            "type": "boolean"
          },
          "orderStatus": {
            "enum": [
              "PENDING",
              "COMPLETE",
              "FAILED",
              "DISCONNECT"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "CallerIdBucketNumber": {
        "properties": {
          "city": {
            "type": "string"
          },
          "lat": {
            "format": "double",
            "type": "number"
          },
          "lon": {
            "format": "double",
            "type": "number"
          },
          "numberId": {
            "format": "int32",
            "type": "integer"
          },
          "state": {
            "type": "string"
          },
          "tnNumber": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "Campaign": {
        "properties": {
          "abandonMsg": {
            "type": "string"
          },
          "afterCallBaseState": {
            "type": "string"
          },
          "afterCallState": {
            "$ref": "#/components/schemas/AccountAuxState"
          },
          "agentConnectSoapService": {
            "$ref": "#/components/schemas/RemoteHttpService"
          },
          "agentPopMessage": {
            "type": "string"
          },
          "agentTermSoapService": {
            "$ref": "#/components/schemas/RemoteHttpService"
          },
          "allowLeadInserts": {
            "format": "byte",
            "type": "string"
          },
          "allowLeadUpdates": {
            "format": "byte",
            "type": "string"
          },
          "appUrl": {
            "type": "string"
          },
          "aux1Label": {
            "type": "string"
          },
          "aux2Label": {
            "type": "string"
          },
          "aux3Label": {
            "type": "string"
          },
          "aux4Label": {
            "type": "string"
          },
          "aux5Label": {
            "type": "string"
          },
          "billingCode": {
            "type": "string"
          },
          "callerId": {
            "type": "string"
          },
          "callerIdBucket": {
            "$ref": "#/components/schemas/CallerIdBucket"
          },
          "campaignDesc": {
            "type": "string"
          },
          "campaignDispositions": {
            "$ref": "#/components/schemas/Collection_CampaignDisposition_"
          },
          "campaignFilterStates": {
            "$ref": "#/components/schemas/Collection_CampaignFilterStates_"
          },
          "campaignFilterTimezones": {
            "$ref": "#/components/schemas/Collection_CampaignFilterTimezones_"
          },
          "campaignId": {
            "format": "int32",
            "type": "integer"
          },
          "campaignName": {
            "type": "string"
          },
          "campaignPriority": {
            "format": "int32",
            "type": "integer"
          },
          "campaignRequeueShortcuts": {
            "$ref": "#/components/schemas/Collection_RequeueShortcut_"
          },
          "campaignResultDest": {
            "$ref": "#/components/schemas/ResultFileDestination"
          },
          "campaignUnlimitedFieldGroup": {
            "$ref": "#/components/schemas/CampaignUnlimitedFieldGroup"
          },
          "campaignWhitelistTagMembers": {
            "$ref": "#/components/schemas/Collection_WhitelistTagMembers_"
          },
          "countryId": {
            "type": "string"
          },
          "customDialZoneGroup": {
            "$ref": "#/components/schemas/CustomDialZoneGroups"
          },
          "dialGroup": {
            "$ref": "#/components/schemas/DialGroup"
          },
          "dialLoadedOrder": {
            "format": "int32",
            "type": "integer"
          },
          "dispositionTimeout": {
            "format": "int32",
            "type": "integer"
          },
          "dncScrubOption": {
            "enum": [
              "DO_NOT_SCRUB",
              "INTERNAL_AND_NATIONAL",
              "INTERNAL_ONLY",
              "CELLULAR_AND_INTERNAL",
              "CELLULAR_ONLY"
            ],
            "type": "string"
          },
          "enableGlobalPhoneBook": {
            "type": "boolean"
          },
          "endCallMsg": {
            "type": "string"
          },
          "endDate": {
            "$ref": "#/components/schemas/DateTime"
          },
          "exportFlag": {
            "type": "boolean"
          },
          "filterEnabled": {
            "format": "byte",
            "type": "string"
          },
          "filterType": {
            "type": "string"
          },
          "friSched": {
            "type": "string"
          },
          "genericKeyValuePairs": {
            "type": "string"
          },
          "groupId": {
            "format": "int32",
            "type": "integer"
          },
          "hangupOnDisposition": {
            "format": "int32",
            "type": "integer"
          },
          "isActive": {
            "format": "int32",
            "type": "integer"
          },
          "lastPassDts": {
            "$ref": "#/components/schemas/Timestamp"
          },
          "liveAnswerMsg": {
            "type": "string"
          },
          "machAnswerMsg": {
            "type": "string"
          },
          "machineDetect": {
            "type": "boolean"
          },
          "maxDailyPasses": {
            "format": "int32",
            "type": "integer"
          },
          "maxDailyPassesInclude": {
            "type": "string"
          },
          "maxDialLimit": {
            "format": "int32",
            "type": "integer"
          },
          "maxPasses": {
            "format": "int32",
            "type": "integer"
          },
          "maxPassesExclude": {
            "type": "string"
          },
          "maxRingTime": {
            "format": "int32",
            "type": "integer"
          },
          "maxRingTimeTransfer": {
            "format": "int32",
            "type": "integer"
          },
          "minPredictiveCallsHistory": {
            "format": "int32",
            "type": "integer"
          },
          "monSched": {
            "type": "string"
          },
          "onHoldMsg": {
            "type": "string"
          },
          "passDelayMin": {
            "format": "int32",
            "type": "integer"
          },
          "pauseRecordingSec": {
            "format": "int32",
            "type": "integer"
          },
          "permissions": {
            "items": {
              "enum": [
                "CREATE",
                "READ",
                "UPDATE",
                "DELETE",
                "REPORT"
              ],
              "type": "string"
            },
            "type": "array"
          },
          "postCallSoapService": {
            "$ref": "#/components/schemas/RemoteHttpService"
          },
          "postDispSoapService": {
            "$ref": "#/components/schemas/RemoteHttpService"
          },
          "quotaGroup": {
            "$ref": "#/components/schemas/QuotaGroup"
          },
          "realtimeDncUrl": {
            "type": "string"
          },
          "recordCall": {
            "format": "int32",
            "type": "integer"
          },
          "recordingInConference": {
            "type": "boolean"
          },
          "requeueType": {
            "enum": [
              "ADVANCED",
              "RESTRICTED"
            ],
            "type": "string"
          },
          "rescrubInterval": {
            "format": "int32",
            "type": "integer"
          },
          "satSched": {
            "type": "string"
          },
          "script": {
            "$ref": "#/components/schemas/Script"
          },
          "scrubDisconnectNoanswer": {
            "format": "byte",
            "type": "string"
          },
          "seedAbandonRate": {
            "format": "double",
            "type": "number"
          },
          "seedSuccessRate": {
            "format": "double",
            "type": "number"
          },
          "showLeadInfo": {
            "format": "int32",
            "type": "integer"
          },
          "showLeadPasses": {
            "type": "boolean"
          },
          "showListName": {
            "type": "boolean"
          },
          "startDate": {
            "$ref": "#/components/schemas/DateTime"
          },
          "stopRecordingOnTransfer": {
            "type": "boolean"
          },
          "sunSched": {
            "type": "string"
          },
          "survey": {
            "$ref": "#/components/schemas/Survey"
          },
          "surveyPopType": {
            "type": "string"
          },
          "targetAbandonRate": {
            "format": "double",
            "type": "number"
          },
          "thuSched": {
            "type": "string"
          },
          "trackSpeedToLead": {
            "format": "byte",
            "type": "string"
          },
          "transferCallerId": {
            "type": "string"
          },
          "transferTermSoapService": {
            "$ref": "#/components/schemas/RemoteHttpService"
          },
          "tueSched": {
            "type": "string"
          },
          "useGlobalWhitelist": {
            "type": "boolean"
          },
          "wedSched": {
            "type": "string"
          },
          "whisperMsg": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "CampaignDisposition": {
        "properties": {
          "campaign": {
            "$ref": "#/components/schemas/Campaign"
          },
          "contactForwarding": {
            "format": "byte",
            "type": "string"
          },
          "createCopy": {
            "type": "boolean"
          },
          "destCampaign": {
            "$ref": "#/components/schemas/Campaign"
          },
          "dispSoapService": {
            "$ref": "#/components/schemas/RemoteHttpService"
          },
          "disposition": {
            "type": "string"
          },
          "dispositionId": {
            "format": "int32",
            "type": "integer"
          },
          "dncTagLabel": {
            "type": "string"
          },
          "doNotCall": {
            "type": "boolean"
          },
          "dtmfMapping": {
            "type": "string"
          },
          "emailDestinations": {
            "type": "string"
          },
          "emailTemplate": {
            "$ref": "#/components/schemas/EmailTemplate"
          },
          "excludeAbandon": {
            "type": "boolean"
          },
          "isComplete": {
            "type": "boolean"
          },
          "isContact": {
            "type": "boolean"
          },
          "isDefault": {
            "type": "boolean"
          },
          "isDisabled": {
            "type": "boolean"
          },
          "isRequeued": {
            "format": "int32",
            "type": "integer"
          },
          "isSuccess": {
            "type": "boolean"
          },
          "mergeOriginal": {
            "type": "boolean"
          },
          "rank": {
            "format": "int32",
            "type": "integer"
          },
          "requeueDelay": {
            "format": "int32",
            "type": "integer"
          },
          "requireNote": {
            "type": "boolean"
          },
          "saveSurvey": {
            "type": "boolean"
          },
          "setAgentFlag": {
            "type": "boolean"
          },
          "termMessage": {
            "type": "string"
          },
          "timeout": {
            "format": "int32",
            "type": "integer"
          },
          "xfer": {
            "format": "byte",
            "type": "string"
          },
          "xferDest": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "CampaignFilterStates": {
        "properties": {
          "campaign": {
            "$ref": "#/components/schemas/Campaign"
          },
          "campaignId": {
            "format": "int32",
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "state": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "CampaignFilterTimezones": {
        "properties": {
          "campaign": {
            "$ref": "#/components/schemas/Campaign"
          },
          "campaignId": {
            "format": "int32",
            "type": "integer"
          },
          "timezone": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "CampaignLead": {
        "properties": {
          "address1": {
            "type": "string"
          },
          "address2": {
            "type": "string"
          },
          "auxData1": {
            "type": "string"
          },
          "auxData2": {
            "type": "string"
          },
          "auxData3": {
            "type": "string"
          },
          "auxData4": {
            "type": "string"
          },
          "auxData5": {
            "type": "string"
          },
          "auxExternalUrl": {
            "type": "string"
          },
          "auxGreeting": {
            "type": "string"
          },
          "auxPhone": {
            "type": "string"
          },
          "callerId": {
            "type": "string"
          },
          "campaign": {
            "$ref": "#/components/schemas/Campaign"
          },
          "campaignRedials": {
            "items": {
              "$ref": "#/components/schemas/CampaignRedial"
            },
            "type": "array"
          },
          "city": {
            "type": "string"
          },
          "dupeKeyOverride": {
            "format": "int64",
            "type": "integer"
          },
          "email": {
            "type": "string"
          },
          "extendedLeadData": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object"
          },
          "externId": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "gateKeeper": {
            "type": "string"
          },
          "id": {
            "format": "int32",
            "type": "integer"
          },
          "lastName": {
            "type": "string"
          },
          "lastPassDisposition": {
            "enum": [
              "ANSWER",
              "NOANSWER",
              "BUSY",
              "MACHINE",
              "INTERCEPT",
              "DISCONNECT",
              "ABANDON",
              "SPAWN_FAIL",
              "CONGESTION",
              "MANUAL_PASS",
              "INBOUND_CALLBACK",
              "APP_DNC",
              "APP_REQUEUE",
              "APP_REQUEUE_COMPLETE",
              "APP_REQUEUE_ABANDON",
              "INBOUND_ABANDON"
            ],
            "type": "string"
          },
          "lastPassDts": {
            "$ref": "#/components/schemas/DateTime"
          },
          "leadId": {
            "format": "int32",
            "type": "integer"
          },
          "leadPasses": {
            "format": "int32",
            "type": "integer"
          },
          "leadPhone": {
            "type": "string"
          },
          "leadPriority": {
            "format": "int32",
            "type": "integer"
          },
          "leadState": {
            "enum": [
              "ACTIVE",
              "AGENT-CALLBACK",
              "CALLBACK-CANCELLED",
              "CALLBACK",
              "CANCELLED",
              "COMPLETE",
              "DISCONNECTED",
              "DO-NOT-CALL",
              "INTERCEPT",
              "MAX-DIAL-LIMIT",
              "PAUSED",
              "PENDING-CALLBACK",
              "PENDING-ERR",
              "PENDING-HCI",
              "PENDING",
              "READY",
              "TRANSITIONED",
              "WHITELIST"
            ],
            "type": "string"
          },
          "leadTimezone": {
            "type": "string"
          },
          "liveAnswerMessage": {
            "type": "string"
          },
          "loadedDts": {
            "$ref": "#/components/schemas/DateTime"
          },
          "machAnswerMessage": {
            "type": "string"
          },
          "maxPasses": {
            "format": "int32",
            "type": "integer"
          },
          "midName": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "nextDialTime": {
            "$ref": "#/components/schemas/DateTime"
          },
          "quotaTargetIds": {
            "items": {
              "format": "int32",
              "type": "integer"
            },
            "type": "array"
          },
          "quotaTargets": {
            "$ref": "#/components/schemas/QuotaTarget"
          },
          "sortCol": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "stateDts": {
            "$ref": "#/components/schemas/DateTime"
          },
          "suffix": {
            "type": "string"
          },
          "suppressed": {
            "type": "boolean"
          },
          "title": {
            "type": "string"
          },
          "zip": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "CampaignLeadSearchCriteria": {
        "properties": {
          "address1": {
            "type": "string"
          },
          "address2": {
            "type": "string"
          },
          "agentDispositions": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "agentId": {
            "format": "int32",
            "type": "integer"
          },
          "auxData1": {
            "type": "string"
          },
          "auxData2": {
            "type": "string"
          },
          "auxData3": {
            "type": "string"
          },
          "auxData4": {
            "type": "string"
          },
          "auxData5": {
            "type": "string"
          },
          "callerId": {
            "type": "string"
          },
          "campaignIds": {
            "items": {
              "format": "int32",
              "type": "integer"
            },
            "type": "array"
          },
          "city": {
            "type": "string"
          },
          "emailAddress": {
            "type": "string"
          },
          "externIds": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "lastPassTimeCriteria": {
            "$ref": "#/components/schemas/DateTimeComparableSearchField"
          },
          "leadIds": {
            "items": {
              "format": "int32",
              "type": "integer"
            },
            "type": "array"
          },
          "leadPassesCriteria": {
            "$ref": "#/components/schemas/ComparableSearchField"
          },
          "leadPhoneNum": {
            "type": "string"
          },
          "leadPhoneNumbers": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "leadStates": {
            "items": {
              "enum": [
                "ACTIVE",
                "AGENT-CALLBACK",
                "CALLBACK-CANCELLED",
                "CALLBACK",
                "CANCELLED",
                "COMPLETE",
                "DISCONNECTED",
                "DO-NOT-CALL",
                "INTERCEPT",
                "MAX-DIAL-LIMIT",
                "PAUSED",
                "PENDING-CALLBACK",
                "PENDING-ERR",
                "PENDING-HCI",
                "PENDING",
                "READY",
                "TRANSITIONED",
                "WHITELIST"
              ],
              "type": "string"
            },
            "type": "array"
          },
          "leadTimezones": {
            "items": {
              "$ref": "#/components/schemas/Timezone"
            },
            "type": "array"
          },
          "listIds": {
            "items": {
              "format": "int32",
              "type": "integer"
            },
            "type": "array"
          },
          "loadedDtsEnd": {
            "$ref": "#/components/schemas/DateTime"
          },
          "loadedDtsStart": {
            "$ref": "#/components/schemas/DateTime"
          },
          "nextDialTimeCriteria": {
            "$ref": "#/components/schemas/DateTimeComparableSearchField"
          },
          "orphanedLeadsOnly": {
            "type": "boolean"
          },
          "pendingAgentId": {
            "format": "int32",
            "type": "integer"
          },
          "physicalStates": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "suppressed": {
            "enum": [
              "ONLY_SUPPRESSED",
              "ONLY_UNSUPPRESSED",
              "ALL"
            ],
            "type": "string"
          },
          "systemDispositions": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "zip": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "CampaignLeadSearchResultsView": {
        "properties": {
          "address1": {
            "type": "string"
          },
          "address2": {
            "type": "string"
          },
          "agentDispostion": {
            "type": "string"
          },
          "auxData1": {
            "type": "string"
          },
          "auxData2": {
            "type": "string"
          },
          "auxData3": {
            "type": "string"
          },
          "auxData4": {
            "type": "string"
          },
          "auxData5": {
            "type": "string"
          },
          "auxExternalUrl": {
            "type": "string"
          },
          "auxGreeting": {
            "type": "string"
          },
          "auxPhone": {
            "type": "string"
          },
          "callerId": {
            "type": "string"
          },
          "campaignId": {
            "format": "int32",
            "type": "integer"
          },
          "campaignLead": {
            "$ref": "#/components/schemas/CampaignLead"
          },
          "campaignName": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "dialGroupId": {
            "format": "int32",
            "type": "integer"
          },
          "dupeKeyOverride": {
            "format": "int64",
            "type": "integer"
          },
          "email": {
            "type": "string"
          },
          "externId": {
            "type": "string"
          },
          "extraData": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "gateKeeper": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "lastPassAgentName": {
            "type": "string"
          },
          "lastPassDate": {
            "$ref": "#/components/schemas/DateTime"
          },
          "lastPassDispo": {
            "type": "string"
          },
          "lastPassDisposition": {
            "type": "string"
          },
          "lastPassDts": {
            "$ref": "#/components/schemas/DateTime"
          },
          "leadId": {
            "format": "int32",
            "type": "integer"
          },
          "leadPasses": {
            "format": "int32",
            "type": "integer"
          },
          "leadPhone": {
            "type": "string"
          },
          "leadState": {
            "type": "string"
          },
          "leadTimezone": {
            "type": "string"
          },
          "listDesc": {
            "type": "string"
          },
          "listId": {
            "format": "int32",
            "type": "integer"
          },
          "liveAnswerMessage": {
            "type": "string"
          },
          "loadedDts": {
            "$ref": "#/components/schemas/DateTime"
          },
          "machAnswerMessage": {
            "type": "string"
          },
          "maxPasses": {
            "format": "int32",
            "type": "integer"
          },
          "midName": {
            "type": "string"
          },
          "nextDialTime": {
            "$ref": "#/components/schemas/DateTime"
          },
          "pendingAgentName": {
            "type": "string"
          },
          "sortCol": {
            "type": "string"
          },
          "speedToLeadAgentConn": {
            "format": "int32",
            "type": "integer"
          },
          "speedToLeadFirstPass": {
            "format": "int32",
            "type": "integer"
          },
          "state": {
            "type": "string"
          },
          "stateDts": {
            "$ref": "#/components/schemas/DateTime"
          },
          "suffix": {
            "type": "string"
          },
          "suppressed": {
            "type": "boolean"
          },
          "title": {
            "type": "string"
          },
          "uploadDate": {
            "$ref": "#/components/schemas/DateTime"
          },
          "uploadedBy": {
            "type": "string"
          },
          "zip": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "CampaignPass": {
        "properties": {
          "agent": {
            "$ref": "#/components/schemas/Agent"
          },
          "agentDisposition": {
            "type": "string"
          },
          "agentNotes": {
            "type": "string"
          },
          "callStart": {
            "$ref": "#/components/schemas/DateTime"
          },
          "campaignRedials": {
            "items": {
              "$ref": "#/components/schemas/CampaignRedial"
            },
            "type": "array"
          },
          "dialDuration": {
            "format": "int32",
            "type": "integer"
          },
          "dialType": {
            "type": "boolean"
          },
          "duration": {
            "format": "int32",
            "type": "integer"
          },
          "export": {
            "type": "boolean"
          },
          "exportFlag": {
            "type": "boolean"
          },
          "leadPhone": {
            "type": "string"
          },
          "passDate": {
            "$ref": "#/components/schemas/DateTime"
          },
          "passDisposition": {
            "enum": [
              "ANSWER",
              "NOANSWER",
              "BUSY",
              "MACHINE",
              "INTERCEPT",
              "DISCONNECT",
              "ABANDON",
              "SPAWN_FAIL",
              "CONGESTION",
              "MANUAL_PASS",
              "INBOUND_CALLBACK",
              "APP_DNC",
              "APP_REQUEUE",
              "APP_REQUEUE_COMPLETE",
              "APP_REQUEUE_ABANDON",
              "INBOUND_ABANDON"
            ],
            "type": "string"
          },
          "passNumber": {
            "format": "int32",
            "type": "integer"
          },
          "passUii": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "CampaignRedial": {
        "properties": {
          "agentId": {
            "format": "int32",
            "type": "integer"
          },
          "callBackDate": {
            "$ref": "#/components/schemas/DateTime"
          },
          "callBackPhone": {
            "type": "string"
          },
          "campaignLead": {
            "$ref": "#/components/schemas/CampaignLead"
          },
          "campaignPass": {
            "$ref": "#/components/schemas/CampaignPass"
          },
          "id": {
            "format": "int32",
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "redialId": {
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "CampaignUnlimitedFieldGroup": {
        "properties": {
          "campaigns": {
            "items": {
              "$ref": "#/components/schemas/Campaign"
            },
            "type": "array"
          },
          "extraDataMappings": {
            "type": "string"
          },
          "groupName": {
            "type": "string"
          },
          "unlimitedFieldGroupId": {
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "ChatGroup": {
        "properties": {
          "billingKey": {
            "type": "string"
          },
          "chatGroupId": {
            "format": "int32",
            "type": "integer"
          },
          "chatGroupSkills": {
            "items": {
              "$ref": "#/components/schemas/ChatGroupSkill"
            },
            "type": "array"
          },
          "chatGroups": {
            "items": {
              "$ref": "#/components/schemas/ChatQueue"
            },
            "type": "array"
          },
          "chatQueues": {
            "items": {
              "$ref": "#/components/schemas/ChatQueue"
            },
            "type": "array"
          },
          "createdOn": {
            "$ref": "#/components/schemas/DateTime"
          },
          "groupName": {
            "type": "string"
          },
          "permissions": {
            "items": {
              "enum": [
                "CREATE",
                "READ",
                "UPDATE",
                "DELETE",
                "REPORT"
              ],
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ChatGroupSkill": {
        "properties": {
          "active": {
            "type": "boolean"
          },
          "agentSkillProfiles": {
            "$ref": "#/components/schemas/Collection_AgentSkillProfile_"
          },
          "chatRequeueShortcuts": {
            "items": {
              "$ref": "#/components/schemas/ChatRequeueShortcut"
            },
            "type": "array"
          },
          "createdOn": {
            "$ref": "#/components/schemas/DateTime"
          },
          "permissions": {
            "items": {
              "enum": [
                "CREATE",
                "READ",
                "UPDATE",
                "DELETE",
                "REPORT"
              ],
              "type": "string"
            },
            "type": "array"
          },
          "skillDesc": {
            "type": "string"
          },
          "skillId": {
            "format": "int32",
            "type": "integer"
          },
          "skillName": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "ChatPriorityGroup": {
        "properties": {
          "chatPriorityGroupId": {
            "format": "int32",
            "type": "integer"
          },
          "chatQueues": {
            "items": {
              "$ref": "#/components/schemas/ChatQueue"
            },
            "type": "array"
          },
          "priorityGroupName": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "ChatQueue": {
        "properties": {
          "account": {
            "$ref": "#/components/schemas/Account"
          },
          "accountId": {
            "type": "string"
          },
          "active": {
            "type": "boolean"
          },
          "agentConnectHttpService": {
            "$ref": "#/components/schemas/RemoteHttpService"
          },
          "agentConnectMsg": {
            "type": "string"
          },
          "agentFrom": {
            "type": "string"
          },
          "agentMaxAcceptTime": {
            "format": "int32",
            "type": "integer"
          },
          "agentTermHttpService": {
            "$ref": "#/components/schemas/RemoteHttpService"
          },
          "agentWrapTime": {
            "format": "int32",
            "type": "integer"
          },
          "appUrl": {
            "type": "string"
          },
          "callbackCampaign": {
            "$ref": "#/components/schemas/Campaign"
          },
          "chatGroup": {
            "$ref": "#/components/schemas/ChatGroup"
          },
          "chatPriorityGroup": {
            "$ref": "#/components/schemas/ChatPriorityGroup"
          },
          "chatQueueDescription": {
            "type": "string"
          },
          "chatQueueId": {
            "format": "int32",
            "type": "integer"
          },
          "chatQueueName": {
            "type": "string"
          },
          "chatQueueOpen": {
            "type": "boolean"
          },
          "clientFrom": {
            "type": "string"
          },
          "companyLogo": {
            "$ref": "#/components/schemas/Blob"
          },
          "createdOn": {
            "$ref": "#/components/schemas/DateTime"
          },
          "dequeueHttpService": {
            "$ref": "#/components/schemas/RemoteHttpService"
          },
          "dispTimeout": {
            "format": "int32",
            "type": "integer"
          },
          "friSched": {
            "type": "string"
          },
          "gateQueueAnips": {
            "items": {
              "$ref": "#/components/schemas/ChatQueueAnip"
            },
            "type": "array"
          },
          "groupId": {
            "format": "int32",
            "type": "integer"
          },
          "idleTimeout": {
            "format": "int32",
            "type": "integer"
          },
          "isActive": {
            "type": "boolean"
          },
          "longChatTime": {
            "format": "int32",
            "type": "integer"
          },
          "maxQueueEvent": {
            "type": "string"
          },
          "maxQueueLimit": {
            "format": "int32",
            "type": "integer"
          },
          "monSched": {
            "type": "string"
          },
          "newChatHttpService": {
            "$ref": "#/components/schemas/RemoteHttpService"
          },
          "noAgentEvent": {
            "type": "string"
          },
          "observeDst": {
            "type": "boolean"
          },
          "permissions": {
            "items": {
              "enum": [
                "CREATE",
                "READ",
                "UPDATE",
                "DELETE",
                "REPORT"
              ],
              "type": "string"
            },
            "type": "array"
          },
          "postChatHttpService": {
            "$ref": "#/components/schemas/RemoteHttpService"
          },
          "postDispHttpService": {
            "$ref": "#/components/schemas/RemoteHttpService"
          },
          "queuePriority": {
            "format": "int32",
            "type": "integer"
          },
          "requeueShortcutAccess": {
            "items": {
              "$ref": "#/components/schemas/ChatRequeueShortcutGroupChatQueueAccess"
            },
            "type": "array"
          },
          "requeueType": {
            "type": "string"
          },
          "requireCaptcha": {
            "type": "boolean"
          },
          "satSched": {
            "type": "string"
          },
          "script": {
            "$ref": "#/components/schemas/Script"
          },
          "shortChatTime": {
            "format": "int32",
            "type": "integer"
          },
          "slaTime": {
            "format": "int32",
            "type": "integer"
          },
          "smsQueueClosedEvent": {
            "type": "string"
          },
          "specialIpEvent": {
            "type": "string"
          },
          "sunSched": {
            "type": "string"
          },
          "surveyId": {
            "format": "int32",
            "type": "integer"
          },
          "surveyPopType": {
            "type": "string"
          },
          "throttleCalls": {
            "format": "int32",
            "type": "integer"
          },
          "throttleDays": {
            "format": "int32",
            "type": "integer"
          },
          "throttleIpEvent": {
            "type": "string"
          },
          "thuSched": {
            "type": "string"
          },
          "tueSched": {
            "type": "string"
          },
          "wedSched": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "ChatQueueAnip": {
        "properties": {
          "anip": {
            "type": "string"
          },
          "chatQueueId": {
            "format": "int32",
            "type": "integer"
          },
          "dateAdded": {
            "$ref": "#/components/schemas/DateTime"
          },
          "recordType": {
            "type": "string"
          },
          "type": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "ChatRequeueShortcut": {
        "properties": {
          "chatGroupSkill": {
            "$ref": "#/components/schemas/ChatGroupSkill"
          },
          "chatRequeueShortcutId": {
            "format": "int32",
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "rank": {
            "format": "int32",
            "type": "integer"
          },
          "requeueGroup": {
            "$ref": "#/components/schemas/ChatGroup"
          },
          "requeueQueue": {
            "$ref": "#/components/schemas/ChatQueue"
          }
        },
        "type": "object"
      },
      "ChatRequeueShortcutGroup": {
        "properties": {
          "chatRequeueShortcutGroupId": {
            "format": "int32",
            "type": "integer"
          },
          "name": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "ChatRequeueShortcutGroupChatQueueAccess": {
        "properties": {
          "chatQueue": {
            "$ref": "#/components/schemas/ChatQueue"
          },
          "chatQueueId": {
            "format": "int32",
            "type": "integer"
          },
          "chatRequeueShortcutGroup": {
            "$ref": "#/components/schemas/ChatRequeueShortcutGroup"
          },
          "chatRequeueShortcutGroupId": {
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "Chronology": {
        "properties": {
          "zone": {
            "$ref": "#/components/schemas/DateTimeZone"
          }
        },
        "type": "object"
      },
      "ClassLoader": {
        "properties": {
          "parent": {
            "$ref": "#/components/schemas/ClassLoader"
          }
        },
        "title": "ClassLoader",
        "type": "object"
      },
      "CollectionAgent": {
        "type": "object"
      },
      "Collection_AgentAccountAccess_": {
        "type": "object"
      },
      "Collection_AgentChatQueueAccess_": {
        "type": "object"
      },
      "Collection_AgentDialGroupMember_": {
        "type": "object"
      },
      "Collection_AgentGateAccess_": {
        "type": "object"
      },
      "Collection_AgentLoadBalanceMember_": {
        "type": "object"
      },
      "Collection_AgentSkillProfile_": {
        "type": "object"
      },
      "Collection_AgentSupervisor_": {
        "type": "object"
      },
      "Collection_Agent_": {
        "type": "object"
      },
      "Collection_CampaignDisposition_": {
        "type": "object"
      },
      "Collection_CampaignFilterStates_": {
        "type": "object"
      },
      "Collection_CampaignFilterTimezones_": {
        "type": "object"
      },
      "Collection_Campaign_": {
        "type": "object"
      },
      "Collection_CustomDialZone_": {
        "type": "object"
      },
      "Collection_GateSkinny_": {
        "type": "object"
      },
      "Collection_QuotaTarget_": {
        "type": "object"
      },
      "Collection_RequeueShortcut_": {
        "type": "object"
      },
      "Collection_WhitelistTagMembers_": {
        "type": "object"
      },
      "ComparableSearchField": {
        "properties": {
          "operator": {
            "enum": [
              "GREATER_THAN",
              "LESS_THAN",
              "EQUALS"
            ],
            "type": "string"
          },
          "value": {
            "type": "object"
          }
        },
        "type": "object"
      },
      "Contact": {
        "properties": {
          "businessPhone": {
            "type": "string"
          },
          "company": {
            "type": "string"
          },
          "department": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "emailAsLoginName": {
            "type": "boolean"
          },
          "firstName": {
            "type": "string"
          },
          "jobTitle": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "mobilePhone": {
            "type": "string"
          }
        },
        "title": "Contact",
        "type": "object"
      },
      "Country": {
        "properties": {
          "countryCode": {
            "type": "string"
          },
          "countryId": {
            "description": "Country code i ISO 3166-1 alpha-3 format",
            "type": "string"
          },
          "countryName": {
            "type": "string"
          },
          "maxAniLength": {
            "format": "int32",
            "type": "integer"
          },
          "maxUtcOffset": {
            "format": "int32",
            "type": "integer"
          },
          "minAniLength": {
            "format": "int32",
            "type": "integer"
          },
          "minUtcOffset": {
            "format": "int32",
            "type": "integer"
          }
        },
        "required": [
          "countryCode"
        ],
        "type": "object"
      },
      "CustomDialZone": {
        "properties": {
          "fridaySchedule": {
            "type": "string"
          },
          "mondaySchedule": {
            "type": "string"
          },
          "saturdaySchedule": {
            "type": "string"
          },
          "sundaySchedule": {
            "type": "string"
          },
          "thursdaySchedule": {
            "type": "string"
          },
          "tuesdaySchedule": {
            "type": "string"
          },
          "wednesdaySchedule": {
            "type": "string"
          },
          "zoneDesc": {
            "type": "string"
          },
          "zoneGroup": {
            "$ref": "#/components/schemas/CustomDialZoneGroups"
          },
          "zoneGroups": {
            "$ref": "#/components/schemas/CustomDialZoneGroups"
          },
          "zoneId": {
            "format": "int32",
            "type": "integer"
          },
          "zoneKey": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "CustomDialZoneGroups": {
        "properties": {
          "accountId": {
            "type": "string"
          },
          "baseTimezone": {
            "type": "string"
          },
          "customDialZones": {
            "$ref": "#/components/schemas/Collection_CustomDialZone_"
          },
          "zoneGroupId": {
            "format": "int32",
            "type": "integer"
          },
          "zoneGroupName": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "DateTime": {
        "properties": {
          "afterNow": {
            "type": "boolean"
          },
          "beforeNow": {
            "type": "boolean"
          },
          "centuryOfEra": {
            "format": "int32",
            "type": "integer"
          },
          "chronology": {
            "$ref": "#/components/schemas/Chronology"
          },
          "dayOfMonth": {
            "format": "int32",
            "type": "integer"
          },
          "dayOfWeek": {
            "format": "int32",
            "type": "integer"
          },
          "dayOfYear": {
            "format": "int32",
            "type": "integer"
          },
          "equalNow": {
            "type": "boolean"
          },
          "era": {
            "format": "int32",
            "type": "integer"
          },
          "hourOfDay": {
            "format": "int32",
            "type": "integer"
          },
          "millis": {
            "format": "int64",
            "type": "integer"
          },
          "millisOfDay": {
            "format": "int32",
            "type": "integer"
          },
          "millisOfSecond": {
            "format": "int32",
            "type": "integer"
          },
          "minuteOfDay": {
            "format": "int32",
            "type": "integer"
          },
          "minuteOfHour": {
            "format": "int32",
            "type": "integer"
          },
          "monthOfYear": {
            "format": "int32",
            "type": "integer"
          },
          "secondOfDay": {
            "format": "int32",
            "type": "integer"
          },
          "secondOfMinute": {
            "format": "int32",
            "type": "integer"
          },
          "weekOfWeekyear": {
            "format": "int32",
            "type": "integer"
          },
          "weekyear": {
            "format": "int32",
            "type": "integer"
          },
          "year": {
            "format": "int32",
            "type": "integer"
          },
          "yearOfCentury": {
            "format": "int32",
            "type": "integer"
          },
          "yearOfEra": {
            "format": "int32",
            "type": "integer"
          },
          "zone": {
            "$ref": "#/components/schemas/DateTimeZone"
          }
        },
        "type": "object"
      },
      "DateTimeComparableSearchField": {
        "properties": {
          "operator": {
            "enum": [
              "GREATER_THAN",
              "LESS_THAN",
              "EQUALS"
            ],
            "type": "string"
          },
          "value": {
            "$ref": "#/components/schemas/DateTime"
          }
        },
        "type": "object"
      },
      "DateTimeField": {
        "properties": {
          "durationField": {
            "$ref": "#/components/schemas/DurationField"
          },
          "leapDurationField": {
            "$ref": "#/components/schemas/DurationField"
          },
          "lenient": {
            "type": "boolean"
          },
          "maximumValue": {
            "format": "int32",
            "type": "integer"
          },
          "minimumValue": {
            "format": "int32",
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "rangeDurationField": {
            "$ref": "#/components/schemas/DurationField"
          },
          "supported": {
            "type": "boolean"
          },
          "type": {
            "$ref": "#/components/schemas/DateTimeFieldType"
          }
        },
        "type": "object"
      },
      "DateTimeFieldType": {
        "properties": {
          "durationType": {
            "$ref": "#/components/schemas/DurationFieldType"
          },
          "name": {
            "type": "string"
          },
          "rangeDurationType": {
            "$ref": "#/components/schemas/DurationFieldType"
          }
        },
        "type": "object"
      },
      "DateTimeZone": {
        "properties": {
          "fixed": {
            "type": "boolean"
          },
          "id": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "DestinationParams": {
        "properties": {
          "isCompress": {
            "type": "boolean"
          },
          "titleDateTimeFormat": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "DialGroup": {
        "properties": {
          "agentDialGroupMembers": {
            "items": {
              "$ref": "#/components/schemas/AgentDialGroupMember"
            },
            "type": "array"
          },
          "agentsReady": {
            "format": "int32",
            "type": "integer"
          },
          "allowLeadSearch": {
            "type": "string"
          },
          "allowPreviewLeadFilters": {
            "type": "boolean"
          },
          "billingKey": {
            "type": "string"
          },
          "campaigns": {
            "items": {
              "$ref": "#/components/schemas/Campaign"
            },
            "type": "array"
          },
          "dialGroupDesc": {
            "type": "string"
          },
          "dialGroupId": {
            "format": "int32",
            "type": "integer"
          },
          "dialGroupName": {
            "type": "string"
          },
          "dialMode": {
            "enum": [
              "PREVIEW",
              "CLICK_TO_TALK",
              "PREDICTIVE",
              "POWER",
              "TCPA_SAFE_MODE"
            ],
            "type": "string"
          },
          "enableAbsolutePriority": {
            "type": "boolean"
          },
          "enableAgentFilter": {
            "type": "boolean"
          },
          "enableCallbacksAfterMaxDailyPass": {
            "type": "boolean"
          },
          "enableCallbacksAfterMaxpass": {
            "type": "boolean"
          },
          "enableListPriority": {
            "type": "boolean"
          },
          "groupId": {
            "format": "int32",
            "type": "integer"
          },
          "hciEnabled": {
            "enum": [
              "DISABLED",
              "HCI_FETCH",
              "HCI_PACING"
            ],
            "type": "string"
          },
          "isActive": {
            "type": "boolean"
          },
          "maxLeadsReturned": {
            "format": "int32",
            "type": "integer"
          },
          "maxPorts": {
            "format": "int32",
            "type": "integer"
          },
          "minPredictiveAgents": {
            "format": "int32",
            "type": "integer"
          },
          "outdialServerGroupId": {
            "format": "int32",
            "type": "integer"
          },
          "permissions": {
            "items": {
              "enum": [
                "CREATE",
                "READ",
                "UPDATE",
                "DELETE",
                "REPORT"
              ],
              "type": "string"
            },
            "type": "array"
          },
          "progressiveCallDelay": {
            "format": "int32",
            "type": "integer"
          },
          "progressiveEnabled": {
            "type": "boolean"
          },
          "realTimeAgentData": {
            "type": "boolean"
          },
          "requireFetchedLeadsCalled": {
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "DurationField": {
        "properties": {
          "name": {
            "type": "string"
          },
          "precise": {
            "type": "boolean"
          },
          "supported": {
            "type": "boolean"
          },
          "type": {
            "$ref": "#/components/schemas/DurationFieldType"
          },
          "unitMillis": {
            "format": "int64",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "DurationFieldType": {
        "properties": {
          "name": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "EmailTemplate": {
        "properties": {
          "accountId": {
            "type": "string"
          },
          "allowBccChange": {
            "type": "boolean"
          },
          "allowBodyChange": {
            "type": "boolean"
          },
          "allowCcChange": {
            "type": "boolean"
          },
          "allowFromChange": {
            "type": "boolean"
          },
          "allowSubjectChange": {
            "type": "boolean"
          },
          "allowToChange": {
            "type": "boolean"
          },
          "emailBcc": {
            "type": "string"
          },
          "emailCc": {
            "type": "string"
          },
          "emailFrom": {
            "type": "string"
          },
          "emailRte": {
            "type": "string"
          },
          "emailSubject": {
            "type": "string"
          },
          "emailTemplateId": {
            "format": "int32",
            "type": "integer"
          },
          "emailTo": {
            "type": "string"
          },
          "sendFormat": {
            "type": "string"
          },
          "templateName": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "Environment": {
        "properties": {
          "activeProfiles": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "defaultProfiles": {
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "title": "Environment",
        "type": "object"
      },
      "Error": {
        "properties": {
          "details": {
            "type": "string"
          },
          "generalMessage": {
            "type": "string"
          },
          "requestUri": {
            "type": "string"
          },
          "timestamp": {
            "format": "int64",
            "type": "integer"
          }
        }
      },
      "ExtendedLeadData": {
        "properties": {
          "important": {
            "type": "string"
          },
          "interested": {
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "Gate": {
        "properties": {
          "abandonCampaign": {
            "$ref": "#/components/schemas/Campaign"
          },
          "acceptTime": {
            "format": "byte",
            "type": "string"
          },
          "afterCallBaseState": {
            "type": "string"
          },
          "afterCallState": {
            "$ref": "#/components/schemas/AccountAuxState"
          },
          "agentConnSoapService": {
            "$ref": "#/components/schemas/RemoteHttpService"
          },
          "agentGateAccess": {
            "items": {
              "$ref": "#/components/schemas/AgentGateAccess"
            },
            "type": "array"
          },
          "agentPopMessage": {
            "type": "string"
          },
          "agentTermSoapService": {
            "$ref": "#/components/schemas/RemoteHttpService"
          },
          "appUrl": {
            "type": "string"
          },
          "backupAppUrl": {
            "type": "string"
          },
          "billingCode": {
            "type": "string"
          },
          "blockedAniMessage": {
            "type": "string"
          },
          "callbackCampaign": {
            "$ref": "#/components/schemas/Campaign"
          },
          "createdOn": {
            "$ref": "#/components/schemas/DateTime"
          },
          "dequeueDelay": {
            "format": "int32",
            "type": "integer"
          },
          "dequeueSoapService": {
            "$ref": "#/components/schemas/RemoteHttpService"
          },
          "dispositionTimeout": {
            "format": "int32",
            "type": "integer"
          },
          "enableGlobalPhoneBook": {
            "type": "boolean"
          },
          "enableIvrTokens": {
            "type": "boolean"
          },
          "endCallMessage": {
            "type": "string"
          },
          "fifoDisabled": {
            "type": "boolean"
          },
          "friSched": {
            "type": "string"
          },
          "gateClosedEvent": {
            "type": "string"
          },
          "gateDesc": {
            "type": "string"
          },
          "gateGroup": {
            "$ref": "#/components/schemas/GateGroup"
          },
          "gateId": {
            "format": "int32",
            "type": "integer"
          },
          "gateName": {
            "type": "string"
          },
          "gateOpen": {
            "type": "boolean"
          },
          "gatePriority": {
            "format": "int32",
            "type": "integer"
          },
          "gatePriorityGroup": {
            "$ref": "#/components/schemas/GatePriorityGroup"
          },
          "gateQueueEvents": {
            "items": {
              "$ref": "#/components/schemas/GateQueueEvent"
            },
            "type": "array"
          },
          "hangupOnDisposition": {
            "type": "boolean"
          },
          "isActive": {
            "type": "boolean"
          },
          "longCallTime": {
            "format": "int32",
            "type": "integer"
          },
          "manualCallerId": {
            "type": "string"
          },
          "maxQueueEvent": {
            "type": "string"
          },
          "maxQueueLimit": {
            "format": "int32",
            "type": "integer"
          },
          "monSched": {
            "type": "string"
          },
          "noAgentEvent": {
            "type": "string"
          },
          "observeDst": {
            "type": "boolean"
          },
          "onHoldMessage": {
            "type": "string"
          },
          "outboundCallerId": {
            "type": "string"
          },
          "pauseRecordingSec": {
            "format": "int32",
            "type": "integer"
          },
          "permissions": {
            "items": {
              "enum": [
                "CREATE",
                "READ",
                "UPDATE",
                "DELETE",
                "REPORT"
              ],
              "type": "string"
            },
            "type": "array"
          },
          "postCallSoapService": {
            "$ref": "#/components/schemas/RemoteHttpService"
          },
          "postDispSoapService": {
            "$ref": "#/components/schemas/RemoteHttpService"
          },
          "recordCall": {
            "format": "int32",
            "type": "integer"
          },
          "recordingInConference": {
            "type": "boolean"
          },
          "requeueType": {
            "enum": [
              "ADVANCED",
              "RESTRICTED"
            ],
            "type": "string"
          },
          "resultFileDestination": {
            "$ref": "#/components/schemas/ResultFileDestination"
          },
          "revMatch": {
            "type": "boolean"
          },
          "satSched": {
            "type": "string"
          },
          "script": {
            "$ref": "#/components/schemas/Script"
          },
          "shortAbandonTime": {
            "format": "int32",
            "type": "integer"
          },
          "shortCallTime": {
            "format": "int32",
            "type": "integer"
          },
          "slaTime": {
            "format": "int32",
            "type": "integer"
          },
          "specialAniEvent": {
            "type": "string"
          },
          "stopRecordingOnTransfer": {
            "type": "boolean"
          },
          "sunSched": {
            "type": "string"
          },
          "survey": {
            "$ref": "#/components/schemas/Survey"
          },
          "surveyPopType": {
            "type": "string"
          },
          "syncQueueWait": {
            "format": "int32",
            "type": "integer"
          },
          "throttleCalls": {
            "format": "int32",
            "type": "integer"
          },
          "throttleDays": {
            "format": "int32",
            "type": "integer"
          },
          "throttlingAniEvent": {
            "type": "string"
          },
          "thuSched": {
            "type": "string"
          },
          "transferCallerId": {
            "type": "string"
          },
          "transferTermSoapService": {
            "$ref": "#/components/schemas/RemoteHttpService"
          },
          "ttAccept": {
            "type": "boolean"
          },
          "tueSched": {
            "type": "string"
          },
          "wedSched": {
            "type": "string"
          },
          "whisperMessage": {
            "type": "string"
          },
          "wrapTime": {
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "GateDisposition": {
        "properties": {
          "destCampaign": {
            "$ref": "#/components/schemas/Campaign"
          },
          "dispSoapService": {
            "$ref": "#/components/schemas/RemoteHttpService"
          },
          "disposition": {
            "type": "string"
          },
          "dncTagLabel": {
            "type": "string"
          },
          "doNotCall": {
            "type": "boolean"
          },
          "dtmfMapping": {
            "type": "string"
          },
          "emailDestinations": {
            "type": "string"
          },
          "emailTemplate": {
            "$ref": "#/components/schemas/EmailTemplate"
          },
          "gateDispositionId": {
            "format": "int32",
            "type": "integer"
          },
          "isComplete": {
            "type": "boolean"
          },
          "isContact": {
            "type": "boolean"
          },
          "isDefault": {
            "type": "boolean"
          },
          "isDisabled": {
            "type": "boolean"
          },
          "isRequeued": {
            "format": "int32",
            "type": "integer"
          },
          "isSuccess": {
            "type": "boolean"
          },
          "rank": {
            "format": "int32",
            "type": "integer"
          },
          "requeueDelay": {
            "format": "int32",
            "type": "integer"
          },
          "requireNote": {
            "type": "boolean"
          },
          "saveSurvey": {
            "type": "boolean"
          },
          "setAgentFlag": {
            "type": "boolean"
          },
          "timeout": {
            "format": "int32",
            "type": "integer"
          },
          "xfer": {
            "format": "byte",
            "type": "string"
          },
          "xferDest": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "GateGroup": {
        "properties": {
          "billingKey": {
            "type": "string"
          },
          "createdOn": {
            "$ref": "#/components/schemas/DateTime"
          },
          "endDate": {
            "$ref": "#/components/schemas/DateTime"
          },
          "gateGroupId": {
            "format": "int32",
            "type": "integer"
          },
          "gates": {
            "items": {
              "$ref": "#/components/schemas/Gate"
            },
            "type": "array"
          },
          "groupName": {
            "type": "string"
          },
          "groupSkills": {
            "items": {
              "$ref": "#/components/schemas/GateGroupSkill"
            },
            "type": "array"
          },
          "permissions": {
            "items": {
              "enum": [
                "CREATE",
                "READ",
                "UPDATE",
                "DELETE",
                "REPORT"
              ],
              "type": "string"
            },
            "type": "array"
          },
          "startDate": {
            "$ref": "#/components/schemas/DateTime"
          }
        },
        "type": "object"
      },
      "GateGroupSkill": {
        "properties": {
          "active": {
            "type": "boolean"
          },
          "agentSkillProfiles": {
            "$ref": "#/components/schemas/Collection_AgentSkillProfile_"
          },
          "createdOn": {
            "$ref": "#/components/schemas/DateTime"
          },
          "requeueShortcut": {
            "items": {
              "$ref": "#/components/schemas/RequeueShortcut"
            },
            "type": "array"
          },
          "skillDesc": {
            "type": "string"
          },
          "skillId": {
            "format": "int32",
            "type": "integer"
          },
          "skillName": {
            "type": "string"
          },
          "whisperAudio": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "GateGroupSkinny": {
        "properties": {
          "accountId": {
            "type": "string"
          },
          "gateGroupId": {
            "format": "int32",
            "type": "integer"
          },
          "gates": {
            "$ref": "#/components/schemas/Collection_GateSkinny_"
          },
          "groupName": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "GatePriorityGroup": {
        "properties": {
          "gatePriorityGroupId": {
            "format": "int32",
            "type": "integer"
          },
          "gatePriorityGroupName": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "GateQueueDtmfEvent": {
        "properties": {
          "dtmf": {
            "type": "string"
          },
          "dtmfEvent": {
            "type": "string"
          },
          "dtmfEventId": {
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "GateQueueEvent": {
        "properties": {
          "enableDtmf": {
            "format": "byte",
            "type": "string"
          },
          "eventDuration": {
            "format": "int32",
            "type": "integer"
          },
          "eventId": {
            "format": "int32",
            "type": "integer"
          },
          "eventRank": {
            "format": "int32",
            "type": "integer"
          },
          "gate": {
            "$ref": "#/components/schemas/Gate"
          },
          "queueEvent": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "GateScheduleOverride": {
        "properties": {
          "overrideClosedEvent": {
            "type": "string"
          },
          "overrideDate": {
            "$ref": "#/components/schemas/DateTime"
          },
          "overrideLabel": {
            "type": "string"
          },
          "overrideSched": {
            "type": "string"
          },
          "scheduleOverrideId": {
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "GateSkinny": {
        "properties": {
          "gateGroupId": {
            "format": "int32",
            "type": "integer"
          },
          "gateId": {
            "format": "int32",
            "type": "integer"
          },
          "gateName": {
            "type": "string"
          },
          "isActive": {
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "GateSpecialAni": {
        "properties": {
          "ani": {
            "type": "string"
          },
          "dateAdded": {
            "$ref": "#/components/schemas/DateTime"
          },
          "type": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "GatesLoggedInAgentsView": {
        "properties": {
          "agentGroupId": {
            "format": "int32",
            "type": "integer"
          },
          "agentId": {
            "format": "int32",
            "type": "integer"
          },
          "firstName": {
            "type": "string"
          },
          "groupName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "username": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "Generic": {
        "properties": {
          "description": {
            "type": "string"
          },
          "id": {
            "format": "int64",
            "type": "integer"
          }
        }
      },
      "InputStream": {
        "type": "object"
      },
      "Lead": {
        "properties": {
          "address1": {
            "type": "string"
          },
          "address2": {
            "type": "string"
          },
          "auxData1": {
            "type": "string"
          },
          "auxData2": {
            "type": "string"
          },
          "auxData3": {
            "type": "string"
          },
          "auxData4": {
            "type": "string"
          },
          "auxData5": {
            "type": "string"
          },
          "auxPhone": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "extendedLeadData": {
            "$ref": "#/components/schemas/ExtendedLeadData"
          },
          "externId": {
            "format": "int64",
            "type": "integer"
          },
          "firstName": {
            "type": "string"
          },
          "gateKeeper": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "leadPhone": {
            "description": "multiple values can be submitted with a pipe delimiter between phone numbers",
            "type": "string"
          },
          "midName": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "suffix": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "zip": {
            "type": "string"
          }
        },
        "required": [
          "externId"
        ],
        "type": "object"
      },
      "LeadActionParams": {
        "properties": {
          "paramMap": {
            "type": "object"
          }
        },
        "type": "object"
      },
      "LeadActionResult": {
        "properties": {
          "dialerRefreshed": {
            "type": "boolean"
          },
          "errorMessage": {
            "type": "string"
          },
          "leadActionType": {
            "type": "string"
          },
          "leadDeleteCount": {
            "format": "int32",
            "type": "integer"
          },
          "leadUpdateCount": {
            "format": "int32",
            "type": "integer"
          },
          "redialDeleteCount": {
            "format": "int32",
            "type": "integer"
          },
          "success": {
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "LeadListPagePreview": {
        "properties": {
          "pageName": {
            "type": "string"
          },
          "pageNumber": {
            "format": "int32",
            "type": "integer"
          },
          "rowData": {
            "items": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "LeadListPreviewResponse": {
        "properties": {
          "mappingColumns": {
            "items": {
              "enum": [
                "LEAD_PHONE",
                "EXTERN_ID",
                "STATE",
                "LEAD_TIMEZONE",
                "PENDING_AGENT_ID",
                "TITLE",
                "FIRST_NAME",
                "MID_NAME",
                "LAST_NAME",
                "SUFFIX",
                "EMAIL",
                "ADDRESS1",
                "ADDRESS2",
                "CITY",
                "ZIP",
                "GATE_KEEPER",
                "AUX_DATA1",
                "AUX_DATA2",
                "AUX_DATA3",
                "AUX_DATA4",
                "AUX_DATA5",
                "AUX_PHONE",
                "AUX_EXTERNAL_URL",
                "AUX_GREETING",
                "LIVE_ANSWER_MESSAGE",
                "MACH_ANSWER_MESSAGE",
                "CALLER_ID",
                "LEAD_PRIORITY"
              ],
              "type": "string"
            },
            "type": "array"
          },
          "pagePreviews": {
            "items": {
              "$ref": "#/components/schemas/LeadListPagePreview"
            },
            "type": "array"
          },
          "transactionId": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "LeadListProcessingRequest": {
        "properties": {
          "description": {
            "type": "string"
          },
          "dialPriority": {
            "enum": [
              "IMMEDIATE",
              "NORMAL"
            ],
            "type": "string"
          },
          "dncTags": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "duplicateHandling": {
            "enum": [
              "RETAIN_ALL",
              "REMOVE_ALL_EXISTING",
              "REMOVE_FROM_LIST"
            ],
            "type": "string"
          },
          "extendedLeadDataMappings": {
            "additionalProperties": {
              "format": "int32",
              "type": "integer"
            },
            "type": "object"
          },
          "fileContainsHeaders": {
            "type": "boolean"
          },
          "fileType": {
            "enum": [
              "EXCEL",
              "PIPE",
              "COMMA",
              "TAB"
            ],
            "type": "string"
          },
          "listState": {
            "enum": [
              "ACTIVE",
              "PAUSED",
              "PENDING_DNC",
              "LOADING",
              "DELETED",
              "READY",
              "CALLBACKS",
              "CALLBACKS_AGENT",
              "DUPLICATES_NOT_MERGED",
              "DUPLICATES_NOT_MOVED"
            ],
            "type": "string"
          },
          "pageColumnMappings": {
            "additionalProperties": {
              "format": "int32",
              "type": "integer"
            },
            "type": "object"
          },
          "pageNumber": {
            "format": "int32",
            "type": "integer"
          },
          "quoteChar": {
            "type": "string"
          },
          "timeZoneOption": {
            "enum": [
              "NPA_NXX",
              "ZIPCODE",
              "EXPLICIT",
              "NOT_APPLICABLE"
            ],
            "type": "string"
          },
          "transactionId": {
            "type": "string"
          },
          "uploadLeads": {
            "items": {
              "$ref": "#/components/schemas/CampaignLead"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "LeadListProcessingResult": {
        "properties": {
          "deletedCount": {
            "format": "int32",
            "type": "integer"
          },
          "dncReturnedCount": {
            "format": "int32",
            "type": "integer"
          },
          "dncUploadCount": {
            "format": "int32",
            "type": "integer"
          },
          "hasDeletedLeads": {
            "type": "boolean"
          },
          "internalDncCount": {
            "format": "int32",
            "type": "integer"
          },
          "leadsAccepted": {
            "format": "int32",
            "type": "integer"
          },
          "leadsConverted": {
            "format": "int32",
            "type": "integer"
          },
          "leadsInserted": {
            "format": "int32",
            "type": "integer"
          },
          "leadsSupplied": {
            "format": "int32",
            "type": "integer"
          },
          "listState": {
            "enum": [
              "ACTIVE",
              "PAUSED",
              "PENDING_DNC",
              "LOADING",
              "DELETED",
              "READY",
              "CALLBACKS",
              "CALLBACKS_AGENT",
              "DUPLICATES_NOT_MERGED",
              "DUPLICATES_NOT_MOVED"
            ],
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "processingResult": {
            "type": "string"
          },
          "processingStatus": {
            "enum": [
              "NO_LEADS_PASSED_VALIDATION",
              "DNC_ACCOUNT_SETTINGS",
              "DNC_UPLOAD_FAILED",
              "DEFAULT_NOT_A_FAILURE",
              "DNC_GREATER_ONE_DAY",
              "GENERAL_FAILURE"
            ],
            "type": "string"
          },
          "quotaCount": {
            "format": "int32",
            "type": "integer"
          },
          "timeZoneOption": {
            "enum": [
              "NPA_NXX",
              "ZIPCODE",
              "EXPLICIT",
              "NOT_APPLICABLE"
            ],
            "type": "string"
          },
          "uploadFileName": {
            "type": "string"
          },
          "whitelistCount": {
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "LeadManagerRequest": {
        "properties": {
          "campaignLeadSearchCriteria": {
            "$ref": "#/components/schemas/CampaignLeadSearchCriteria"
          },
          "leadActionParams": {
            "$ref": "#/components/schemas/LeadActionParams"
          }
        },
        "type": "object"
      },
      "LocalTime": {
        "properties": {
          "chronology": {
            "$ref": "#/components/schemas/Chronology"
          },
          "fieldTypes": {
            "items": {
              "$ref": "#/components/schemas/DateTimeFieldType"
            },
            "type": "array"
          },
          "fields": {
            "items": {
              "$ref": "#/components/schemas/DateTimeField"
            },
            "type": "array"
          },
          "hourOfDay": {
            "format": "int32",
            "type": "integer"
          },
          "millisOfDay": {
            "format": "int32",
            "type": "integer"
          },
          "millisOfSecond": {
            "format": "int32",
            "type": "integer"
          },
          "minuteOfHour": {
            "format": "int32",
            "type": "integer"
          },
          "secondOfMinute": {
            "format": "int32",
            "type": "integer"
          },
          "values": {
            "items": {
              "format": "int32",
              "type": "integer"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "MainAccount": {
        "properties": {
          "dataRetentionDays": {
            "format": "int32",
            "type": "integer"
          },
          "isActive": {
            "format": "int32",
            "type": "integer"
          },
          "mainAccountId": {
            "type": "string"
          },
          "mainAccountName": {
            "type": "string"
          },
          "rcAccountId": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "PhoneBookEntry": {
        "properties": {
          "accountId": {
            "type": "string"
          },
          "countryId": {
            "type": "string"
          },
          "dateCreated": {
            "$ref": "#/components/schemas/DateTime"
          },
          "destName": {
            "type": "string"
          },
          "destination": {
            "type": "string"
          },
          "entryId": {
            "format": "int32",
            "type": "integer"
          },
          "notes": {
            "type": "string"
          },
          "type": {
            "enum": [
              "GATE",
              "GLOBAL",
              "CAMPAIGN"
            ],
            "type": "string"
          },
          "typeId": {
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "QuotaGroup": {
        "properties": {
          "active": {
            "type": "boolean"
          },
          "campaigns": {
            "$ref": "#/components/schemas/Collection_Campaign_"
          },
          "isActive": {
            "type": "boolean"
          },
          "quotaGroupId": {
            "format": "int32",
            "type": "integer"
          },
          "quotaGroupName": {
            "type": "string"
          },
          "quotaTargets": {
            "$ref": "#/components/schemas/Collection_QuotaTarget_"
          }
        },
        "type": "object"
      },
      "QuotaTarget": {
        "properties": {
          "clientMetadata": {
            "type": "string"
          },
          "criteriaJs": {
            "type": "string"
          },
          "currentCount": {
            "format": "int32",
            "type": "integer"
          },
          "quotaGroup": {
            "$ref": "#/components/schemas/QuotaGroup"
          },
          "quotaMetOn": {
            "$ref": "#/components/schemas/DateTime"
          },
          "quotaTargetId": {
            "format": "int32",
            "type": "integer"
          },
          "targetCount": {
            "format": "int32",
            "type": "integer"
          },
          "targetName": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "RedirectView": {
        "properties": {
          "applicationContext": {
            "$ref": "#/components/schemas/ApplicationContext"
          },
          "attributesMap": {
            "type": "object"
          },
          "beanName": {
            "type": "string"
          },
          "contentType": {
            "type": "string"
          },
          "exposePathVariables": {
            "type": "boolean"
          },
          "hosts": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "propagateQueryProperties": {
            "type": "boolean"
          },
          "redirectView": {
            "type": "boolean"
          },
          "requestContextAttribute": {
            "type": "string"
          },
          "staticAttributes": {
            "type": "object"
          },
          "url": {
            "type": "string"
          }
        },
        "title": "RedirectView",
        "type": "object"
      },
      "RemoteHttpService": {
        "properties": {
          "accountId": {
            "type": "string"
          },
          "enableMappings": {
            "type": "boolean"
          },
          "httpPassword": {
            "type": "string"
          },
          "httpServiceConfig": {
            "type": "string"
          },
          "httpUsername": {
            "type": "string"
          },
          "isDebug": {
            "type": "boolean"
          },
          "isEnabled": {
            "type": "boolean"
          },
          "permissions": {
            "items": {
              "enum": [
                "CREATE",
                "READ",
                "UPDATE",
                "DELETE",
                "REPORT"
              ],
              "type": "string"
            },
            "type": "array"
          },
          "returntype": {
            "type": "string"
          },
          "sendAllSurveyData": {
            "type": "boolean"
          },
          "serviceDescription": {
            "type": "string"
          },
          "serviceId": {
            "format": "int32",
            "type": "integer"
          },
          "serviceType": {
            "enum": [
              "SOAP",
              "HTTP_POST",
              "HTTP_GET",
              "HTTP"
            ],
            "type": "string"
          },
          "soapAction": {
            "type": "string"
          },
          "soapEndpoint": {
            "type": "string"
          },
          "soapOperationname": {
            "type": "string"
          },
          "soapPortname": {
            "type": "string"
          },
          "soapServicename": {
            "type": "string"
          },
          "targetNamespace": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "ReportCriteria": {
        "properties": {
          "accountId": {
            "type": "string"
          },
          "criteriaType": {
            "enum": [
              "DIALER_RESULT_DOWNLOAD_CRITERIA",
              "GLOBAL_CALL_TYPE_CRITERIA",
              "IVR_DETAIL_CRITERIA",
              "TFN_DID_MANAGER_CRITERIA",
              "ALL_CALLS_CRITERIA",
              "CASPER_CRITERIA"
            ],
            "type": "string"
          },
          "databaseTimezone": {
            "type": "string"
          },
          "endDate": {
            "$ref": "#/components/schemas/DateTime"
          },
          "endDateRange": {
            "$ref": "#/components/schemas/TimeRange"
          },
          "scheduleTimezoneName": {
            "type": "string"
          },
          "startDate": {
            "$ref": "#/components/schemas/DateTime"
          },
          "startDateRange": {
            "$ref": "#/components/schemas/TimeRange"
          },
          "timezoneName": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "ReportParams": {
        "properties": {
          "accountId": {
            "type": "string"
          },
          "compressReport": {
            "type": "boolean"
          },
          "delimiter": {
            "enum": [
              "PIPE",
              "COMMA",
              "TAB",
              "EXCEL",
              "HTML"
            ],
            "type": "string"
          },
          "destination": {
            "$ref": "#/components/schemas/DestinationParams"
          },
          "maxRows": {
            "format": "int32",
            "type": "integer"
          },
          "reportCriteria": {
            "$ref": "#/components/schemas/ReportCriteria"
          },
          "reportName": {
            "type": "string"
          },
          "reportType": {
            "enum": [
              "DIALER_RESULT_DOWNLOAD",
              "GLOBAL_CALL_TYPE_EXCEL",
              "GLOBAL_CALL_TYPE_DELIMITED",
              "ALL_CALLS",
              "IVR_DETAIL",
              "TFN_DID_MANAGER_SUPERUSER_EXCEL",
              "TFN_DID_MANAGER_EXCEL",
              "TFN_DID_MANAGER_DELIMITED",
              "CASPER_REPORT"
            ],
            "type": "string"
          },
          "requestUser": {
            "$ref": "#/components/schemas/User"
          },
          "schedule": {
            "$ref": "#/components/schemas/Schedule"
          },
          "scheduledReport": {
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "RequeueShortcut": {
        "properties": {
          "campaign": {
            "$ref": "#/components/schemas/Campaign"
          },
          "gate": {
            "$ref": "#/components/schemas/Gate"
          },
          "groupSkill": {
            "$ref": "#/components/schemas/GateGroupSkill"
          },
          "name": {
            "type": "string"
          },
          "rank": {
            "format": "int32",
            "type": "integer"
          },
          "requeueGate": {
            "$ref": "#/components/schemas/Gate"
          },
          "requeueGateGroup": {
            "$ref": "#/components/schemas/GateGroup"
          },
          "requeueShortcutId": {
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "ResponseEntity": {
        "properties": {
          "body": {
            "type": "object"
          },
          "statusCode": {
            "enum": [
              "100",
              "101",
              "102",
              "103",
              "200",
              "201",
              "202",
              "203",
              "204",
              "205",
              "206",
              "207",
              "208",
              "226",
              "300",
              "301",
              "302",
              "302",
              "303",
              "304",
              "305",
              "307",
              "308",
              "400",
              "401",
              "402",
              "403",
              "404",
              "405",
              "406",
              "407",
              "408",
              "409",
              "410",
              "411",
              "412",
              "413",
              "413",
              "414",
              "414",
              "415",
              "416",
              "417",
              "418",
              "419",
              "420",
              "421",
              "422",
              "423",
              "424",
              "426",
              "428",
              "429",
              "431",
              "500",
              "501",
              "502",
              "503",
              "504",
              "505",
              "506",
              "507",
              "508",
              "509",
              "510",
              "511"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "ResultFileDestination": {
        "properties": {
          "aggregateOutput": {
            "format": "byte",
            "type": "string"
          },
          "destType": {
            "type": "string"
          },
          "destinationId": {
            "format": "int32",
            "type": "integer"
          },
          "destinationName": {
            "type": "string"
          },
          "emailDest": {
            "type": "string"
          },
          "ftpDir": {
            "type": "string"
          },
          "ftpPwd": {
            "type": "string"
          },
          "ftpServer": {
            "type": "string"
          },
          "ftpUid": {
            "type": "string"
          },
          "passive": {
            "format": "byte",
            "type": "string"
          },
          "sendEmptyFiles": {
            "format": "byte",
            "type": "string"
          },
          "sftp": {
            "format": "byte",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Role": {
        "properties": {
          "description": {
            "type": "string"
          },
          "roleType": {
            "enum": [
              "SUPER_USER",
              "USER",
              "MANAGE_USERS",
              "MANAGE_RIGHTS",
              "ACCESS_SIBLINGS",
              "ACCESS_AUDIT_LOG",
              "ACCESS_GOODDATA_ADMIN",
              "ACCESS_GOODDATA_EDITOR",
              "ACCESS_GOODDATA_EXPLORER",
              "ACCESS_GOODDATA_VIEWER",
              "ACCESS_GOODDATA_EMBEDDED_EXPLORER",
              "ACCESS_GOODDATA_EMBEDDED_DASHBOARD",
              "ASSUME_USERS",
              "REPORT_ADMINISTRATIVE_USER",
              "NO_ACCESS"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "Schedule": {
        "properties": {
          "dayOfTheMonth": {
            "format": "int32",
            "type": "integer"
          },
          "daysOfWeek": {
            "items": {
              "enum": [
                "SUNDAY",
                "MONDAY",
                "TUESDAY",
                "WEDNESDAY",
                "THURSDAY",
                "FRIDAY",
                "SATURDAY"
              ],
              "type": "string"
            },
            "type": "array"
          },
          "endDate": {
            "$ref": "#/components/schemas/DateTime"
          },
          "endTime": {
            "$ref": "#/components/schemas/LocalTime"
          },
          "interval": {
            "format": "int32",
            "type": "integer"
          },
          "month": {
            "enum": [
              "JANUARY",
              "FEBRUARY",
              "MARCH",
              "APRIL",
              "MAY",
              "JUNE",
              "JULY",
              "AUGUST",
              "SEPTEMBER",
              "OCTOBER",
              "NOVEMBER",
              "DECEMBER"
            ],
            "type": "string"
          },
          "repeatOption": {
            "enum": [
              "SINGLE",
              "MINUTE",
              "HOURLY",
              "DAILY",
              "WEEKLY",
              "MONTHLY",
              "CALENDAR",
              "YEARLY"
            ],
            "type": "string"
          },
          "scheduleTimezoneName": {
            "type": "string"
          },
          "startDate": {
            "$ref": "#/components/schemas/DateTime"
          },
          "startTime": {
            "$ref": "#/components/schemas/LocalTime"
          },
          "versionNum": {
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "Script": {
        "properties": {
          "account": {
            "$ref": "#/components/schemas/Account"
          },
          "created": {
            "$ref": "#/components/schemas/DateTime"
          },
          "description": {
            "type": "string"
          },
          "groupId": {
            "format": "int32",
            "type": "integer"
          },
          "isActive": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "permissions": {
            "items": {
              "enum": [
                "CREATE",
                "READ",
                "UPDATE",
                "DELETE",
                "REPORT"
              ],
              "type": "string"
            },
            "type": "array"
          },
          "scriptGroup": {
            "$ref": "#/components/schemas/ScriptGroup"
          },
          "scriptId": {
            "format": "int32",
            "type": "integer"
          },
          "updated": {
            "$ref": "#/components/schemas/DateTime"
          }
        },
        "type": "object"
      },
      "ScriptGroup": {
        "properties": {
          "account": {
            "$ref": "#/components/schemas/Account"
          },
          "groupId": {
            "format": "int32",
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "permissions": {
            "items": {
              "enum": [
                "CREATE",
                "READ",
                "UPDATE",
                "DELETE",
                "REPORT"
              ],
              "type": "string"
            },
            "type": "array"
          },
          "scripts": {
            "items": {
              "$ref": "#/components/schemas/Script"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "SuppressedType": {
        "properties": {
          "name": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "Survey": {
        "properties": {
          "accountId": {
            "type": "string"
          },
          "active": {
            "format": "byte",
            "type": "string"
          },
          "enableTokens": {
            "format": "int32",
            "type": "integer"
          },
          "exportFlag": {
            "format": "byte",
            "type": "string"
          },
          "headingCss": {
            "type": "string"
          },
          "lastModified": {
            "$ref": "#/components/schemas/Timestamp"
          },
          "name": {
            "type": "string"
          },
          "submitText": {
            "type": "string"
          },
          "surveyDesc": {
            "type": "string"
          },
          "surveyId": {
            "format": "int32",
            "type": "integer"
          },
          "surveyName": {
            "type": "string"
          },
          "tableCss": {
            "type": "string"
          },
          "textCss": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "TimeRange": {
        "properties": {
          "rangeType": {
            "enum": [
              "MINUTE",
              "HOUR",
              "DAY",
              "WEEK",
              "MONTH",
              "YEAR",
              "NOW"
            ],
            "type": "string"
          },
          "rangeValue": {
            "format": "int32",
            "type": "integer"
          },
          "rangeValueValid": {
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "Timestamp": {
        "properties": {
          "date": {
            "format": "int32",
            "type": "integer"
          },
          "day": {
            "format": "int32",
            "type": "integer"
          },
          "hours": {
            "format": "int32",
            "type": "integer"
          },
          "minutes": {
            "format": "int32",
            "type": "integer"
          },
          "month": {
            "format": "int32",
            "type": "integer"
          },
          "nanos": {
            "format": "int32",
            "type": "integer"
          },
          "seconds": {
            "format": "int32",
            "type": "integer"
          },
          "time": {
            "format": "int64",
            "type": "integer"
          },
          "timezoneOffset": {
            "format": "int32",
            "type": "integer"
          },
          "year": {
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "Timezone": {
        "properties": {
          "description": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "UploadLeadsRequest": {
        "properties": {
          "description": {
            "type": "string"
          },
          "dialPriority": {
            "description": "Setting this to `IMMEDIATE` allows you to insert a lead to the top of the dialer cache for immediate dialing if you want a normal insert then do not add this parameter.",
            "enum": [
              "IMMEDIATE",
              "NORMAL"
            ],
            "type": "string"
          },
          "duplicateHandling": {
            "enum": [
              "RETAIN_ALL",
              "REMOVE_ALL_EXISTING",
              "REMOVE_FROM_LIST"
            ],
            "type": "string"
          },
          "listState": {
            "enum": [
              "ACTIVE"
            ],
            "type": "string"
          },
          "timeZoneOption": {
            "enum": [
              "NPA_NXX",
              "ZIPCODE",
              "EXPLICIT"
            ],
            "type": "string"
          },
          "uploadLeads": {
            "items": {
              "$ref": "#/components/schemas/CampaignLead"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "UploadLeadsResponse": {
        "properties": {
          "deletedCount": {
            "format": "int32",
            "type": "integer"
          },
          "dncReturnedCount": {
            "format": "int32",
            "type": "integer"
          },
          "dncUploadCount": {
            "format": "int32",
            "type": "integer"
          },
          "hasDeletedLeads": {
            "type": "boolean"
          },
          "internalDncCount": {
            "format": "int32",
            "type": "integer"
          },
          "leadsAccepted": {
            "format": "int32",
            "type": "integer"
          },
          "leadsConverted": {
            "format": "int32",
            "type": "integer"
          },
          "leadsInserted": {
            "format": "int32",
            "type": "integer"
          },
          "leadsSupplied": {
            "format": "int32",
            "type": "integer"
          },
          "listState": {
            "type": "string"
          },
          "message": {
            "description": "Values can be `Your uploaded lead list has successfully completed processing` or `Your uploaded lead list file processing has failed`",
            "type": "string"
          },
          "processingResult": {
            "description": "Values can be `OK` or `Failed`",
            "type": "string"
          },
          "processingStatus": {
            "description": "Values can be `DEFAULT_NOT_A_FAILURE` or `GENERAL_FAILURE`",
            "type": "string"
          },
          "quotaCount": {
            "format": "int32",
            "type": "integer"
          },
          "timeZoneOption": {
            "type": "string"
          },
          "uploadFileName": {
            "type": "string"
          },
          "whitelistCount": {
            "format": "int32",
            "type": "integer"
          }
        },
        "required": [
          "message",
          "leadsSupplied",
          "leadsConverted",
          "leadsAccepted",
          "leadsInserted",
          "internalDncCount",
          "dncUploadCount",
          "dncReturnedCount",
          "whitelistCount",
          "uploadFileName",
          "deletedCount",
          "quotaCount",
          "listState",
          "timeZoneOption",
          "hasDeletedLeads",
          "processingResult",
          "processingStatus"
        ],
        "type": "object"
      },
      "User": {
        "properties": {
          "children": {
            "items": {
              "$ref": "#/components/schemas/User"
            },
            "type": "array"
          },
          "creationDate": {
            "$ref": "#/components/schemas/DateTime"
          },
          "enabled": {
            "type": "boolean"
          },
          "firstName": {
            "type": "string"
          },
          "fullName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "parentPath": {
            "type": "string"
          },
          "phoneNumber": {
            "type": "string"
          },
          "roles": {
            "items": {
              "$ref": "#/components/schemas/Role"
            },
            "type": "array"
          },
          "rootUser": {
            "type": "boolean"
          },
          "userId": {
            "format": "int32",
            "type": "integer"
          },
          "userName": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "UserLoginView": {
        "properties": {
          "accounts": {
            "items": {
              "$ref": "#/components/schemas/AccountView"
            },
            "type": "array"
          },
          "authToken": {
            "type": "string"
          },
          "user": {
            "$ref": "#/components/schemas/User"
          }
        },
        "type": "object"
      },
      "WhitelistTag": {
        "properties": {
          "accountId": {
            "type": "string"
          },
          "addedBy": {
            "type": "string"
          },
          "addedDts": {
            "$ref": "#/components/schemas/DateTime"
          },
          "tag": {
            "type": "string"
          },
          "whitelistTagId": {
            "format": "int32",
            "type": "integer"
          },
          "wlTagId": {
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "WhitelistTagMembers": {
        "properties": {
          "campaign": {
            "$ref": "#/components/schemas/Campaign"
          },
          "campaignId": {
            "format": "int32",
            "type": "integer"
          },
          "whitelistTag": {
            "$ref": "#/components/schemas/WhitelistTag"
          },
          "wlTagId": {
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      }
    },
    "securitySchemes": {
      "ApiKeyAuth": {
        "in": "header",
        "name": "X-Auth-Token",
        "type": "apiKey"
      },
      "BearerAuth": {
        "scheme": "bearer",
        "type": "http"
      }
    }
  },
  "info": {
    "description": "",
    "termsOfService": "https://developers.ringcentral.com",
    "title": "RingCentral Engage Voice API",
    "version": "1.0"
  },
  "openapi": "3.0.0",
  "paths": {
    "/engage/api/auth/login": {
      "get": {
        "deprecated": false,
        "operationId": "getAccessTokenUserDetails",
        "parameters": [
          {
            "description": "Authorization",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessTokenUserDetails"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [],
        "summary": "Retrieves User Information based on a pre-defined Engage Access Token",
        "tags": [
          "Authentication"
        ],
        "x-doc-level": "Internal"
      }
    },
    "/engage/api/auth/login/admin": {
      "post": {
        "deprecated": false,
        "operationId": "loginAdmin",
        "parameters": [
          {
            "description": "password",
            "in": "query",
            "name": "password",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "platformId",
            "in": "query",
            "name": "platformId",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "username",
            "in": "query",
            "name": "username",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessTokenUserDetails"
                }
              }
            },
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [],
        "summary": "Logs in an Admin user",
        "tags": [
          "Authentication"
        ],
        "x-doc-level": "Internal"
      }
    },
    "/engage/api/auth/login/agent": {
      "post": {
        "deprecated": false,
        "operationId": "loginAgent",
        "parameters": [
          {
            "description": "password",
            "in": "query",
            "name": "password",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "platformId",
            "in": "query",
            "name": "platformId",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "username",
            "in": "query",
            "name": "username",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessTokenUserDetails"
                }
              }
            },
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [],
        "summary": "Logs in an Agent user",
        "tags": [
          "Authentication"
        ],
        "x-doc-level": "Internal"
      }
    },
    "/engage/api/auth/login/agent/hashcode": {
      "post": {
        "deprecated": false,
        "operationId": "authenticateAgentLoginByHashcodeAndAgentId",
        "parameters": [
          {
            "description": "agentId",
            "in": "query",
            "name": "agentId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "loginHashcode",
            "in": "query",
            "name": "loginHashcode",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "platformId",
            "in": "query",
            "name": "platformId",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "rcAccountId",
            "in": "query",
            "name": "rcAccountId",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessTokenUserDetails"
                }
              }
            },
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [],
        "summary": "Validate agent login and get new refresh token based on the agent loginHashcode",
        "tags": [
          "Authentication"
        ],
        "x-doc-level": "Internal"
      }
    },
    "/engage/api/auth/login/code": {
      "post": {
        "deprecated": false,
        "operationId": "loginWithEngageAuthCode",
        "parameters": [
          {
            "description": "code",
            "in": "query",
            "name": "code",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessTokenUserDetails"
                }
              }
            },
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [],
        "summary": "Log in a user via a one-time use Engage AuthCode",
        "tags": [
          "Authentication"
        ],
        "x-doc-level": "Internal"
      }
    },
    "/engage/api/auth/login/rc/accesstoken": {
      "post": {
        "deprecated": false,
        "operationId": "loginWithRcAccessToken",
        "parameters": [
          {
            "description": "rcAccessToken",
            "in": "query",
            "name": "rcAccessToken",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "allowEmptyValue": false,
            "description": "'Bearer' for OAuth 2.0 bearer token",
            "in": "query",
            "name": "rcTokenType",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessTokenUserDetails"
                }
              }
            },
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "BearerAuth": []
          },
          {
            "BearerAuth": []
          }
        ],
        "summary": "Logs in an RC user via their access token issued by the RC API server",
        "tags": [
          "RingCentral Auth"
        ],
        "x-doc-level": "Public"
      }
    },
    "/engage/api/auth/login/tenfold/accesstoken": {
      "post": {
        "deprecated": false,
        "operationId": "loginWithTenfoldAccessToken",
        "parameters": [
          {
            "description": "token",
            "in": "query",
            "name": "token",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessTokenUserDetails"
                }
              }
            },
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [],
        "summary": "Logs in an RC Tenfold user via their access token issued by the RC API server",
        "tags": [
          "Authentication"
        ],
        "x-doc-level": "Internal"
      }
    },
    "/engage/api/auth/logout/{refreshToken}": {
      "delete": {
        "deprecated": false,
        "operationId": "logoutEngageAuthUser",
        "parameters": [
          {
            "description": "refreshToken",
            "in": "path",
            "name": "refreshToken",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [],
        "summary": "Logs out a user and deletes the platform cookie from the user's client",
        "tags": [
          "Authentication"
        ],
        "x-doc-level": "Internal"
      }
    },
    "/engage/api/auth/password/internal/requestreset": {
      "post": {
        "deprecated": false,
        "operationId": "internalRequestPasswordReset",
        "parameters": [
          {
            "description": "internalJwt",
            "in": "query",
            "name": "internalJwt",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [],
        "summary": "Get password reset url",
        "tags": [
          "Password Reset"
        ],
        "x-doc-level": "Internal"
      }
    },
    "/engage/api/auth/password/requestreset": {
      "post": {
        "deprecated": false,
        "operationId": "requestPasswordReset",
        "parameters": [
          {
            "description": "platformId",
            "in": "query",
            "name": "platformId",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "username",
            "in": "query",
            "name": "username",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [],
        "summary": "Get password reset url for a specified platform",
        "tags": [
          "Password Reset"
        ],
        "x-doc-level": "Internal"
      }
    },
    "/engage/api/auth/token/claims": {
      "get": {
        "deprecated": false,
        "operationId": "getClaimsForAccessToken",
        "parameters": [
          {
            "description": "Bearer Token",
            "in": "header",
            "name": "Authorization",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [],
        "summary": "Get Claims for Access Token",
        "tags": [
          "Token"
        ],
        "x-doc-level": "Internal"
      }
    },
    "/engage/api/auth/token/digitaljwt": {
      "get": {
        "deprecated": false,
        "operationId": "getDigitalJwt",
        "parameters": [
          {
            "description": "Bearer Token",
            "in": "header",
            "name": "Authorization",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [],
        "summary": "Get Digital SSO JWT based on the RC Account Id",
        "tags": [
          "Token"
        ],
        "x-doc-level": "Internal"
      }
    },
    "/engage/api/auth/token/refresh": {
      "post": {
        "deprecated": false,
        "operationId": "refreshAccessToken",
        "parameters": [
          {
            "description": "X-Auth-Token",
            "in": "query",
            "name": "X-Auth-Token",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "refresh_token",
            "in": "query",
            "name": "refresh_token",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessTokenUserDetails"
                }
              }
            },
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [],
        "summary": "Get Refresh Access Token",
        "tags": [
          "Token"
        ],
        "x-doc-level": "Internal"
      }
    },
    "/engage/api/auth/token/validate": {
      "get": {
        "deprecated": false,
        "operationId": "verifyAccessToken",
        "parameters": [
          {
            "description": "Bearer Token",
            "in": "header",
            "name": "Authorization",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [],
        "summary": "Validate Access Token",
        "tags": [
          "Token"
        ],
        "x-doc-level": "Internal"
      }
    },
    "/engage/oauthcallback": {
      "get": {
        "deprecated": false,
        "operationId": "defaultOAuthCallback",
        "parameters": [
          {
            "description": "code",
            "in": "query",
            "name": "code",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "state",
            "in": "query",
            "name": "state",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RedirectView"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [],
        "summary": "Get SSO Callback",
        "tags": [
          "OAuth"
        ],
        "x-doc-level": "Internal"
      }
    },
    "/engage/oauthredirect": {
      "get": {
        "deprecated": false,
        "operationId": "loadSsoLogin",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [],
        "summary": "Prepare page that will redirect user to SSO login",
        "tags": [
          "OAuth"
        ],
        "x-doc-level": "Internal"
      }
    },
    "/engage/password/reset/{platformId}/{passwordResetToken}": {
      "get": {
        "deprecated": false,
        "operationId": "resetPasswordCallback",
        "parameters": [
          {
            "description": "passwordResetToken",
            "in": "path",
            "name": "passwordResetToken",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "platformId",
            "in": "path",
            "name": "platformId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RedirectView"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [],
        "summary": "Get Redirect to Reset Password",
        "tags": [
          "Password Reset"
        ],
        "x-doc-level": "Internal"
      }
    },
    "/voice/api/accounts/{accountId}/activeCalls/createManualAgentCall": {
      "post": {
        "description": "Permissions: READ on Account (Permission Override)",
        "operationId": "createManualAgentCall",
        "parameters": [
          {
            "description": "accountId",
            "in": "path",
            "name": "accountId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "username",
            "in": "query",
            "name": "username",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "destination",
            "in": "query",
            "name": "destination",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "ringDuration",
            "in": "query",
            "name": "ringDuration",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "callerId",
            "in": "query",
            "name": "callerId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "BearerAuth": []
          },
          {
            "BearerAuth": []
          }
        ],
        "summary": "Creates a manual agent call",
        "tags": [
          "Active Calls"
        ],
        "x-doc-level": "Public"
      }
    },
    "/voice/api/accounts/{accountId}/activeCalls/list": {
      "get": {
        "description": "Permissions: READ on Account",
        "operationId": "getProductActiveCallsListRequest",
        "parameters": [
          {
            "description": "accountId",
            "in": "path",
            "name": "accountId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "product",
            "in": "query",
            "name": "product",
            "required": true,
            "schema": {
              "enum": [
                "ACCOUNT",
                "ACD",
                "AGENT",
                "CHAT_QUEUE",
                "OUTBOUND",
                "VISUAL_IVR",
                "CLOUD_PROFILE",
                "CLOUD_DESTINATION",
                "TRAC_NUMBER",
                "HTTP_SERVICES",
                "SCRIPTING",
                "TN_MANAGER",
                "SURVEY",
                "DNIS",
                "TEAMS",
                "KNOWLEDGE_BASE",
                "UTILITIES"
              ],
              "type": "string"
            }
          },
          {
            "description": "productId",
            "in": "query",
            "name": "productId",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "page",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "maxRows",
            "in": "query",
            "name": "maxRows",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ActiveCallListResponse"
                  },
                  "type": "array"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "BearerAuth": []
          },
          {
            "BearerAuth": []
          }
        ],
        "summary": "Returns a listing of current active calls for a given product on an account",
        "tags": [
          "Active Calls"
        ],
        "x-doc-level": "Public"
      }
    },
    "/voice/api/accounts/{accountId}/activeCalls/{uii}/addSessionToCall": {
      "post": {
        "description": "Permissions: READ on Agent (Permission Override)",
        "operationId": "addSessionToCall",
        "parameters": [
          {
            "description": "accountId",
            "in": "path",
            "name": "accountId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "uii",
            "in": "path",
            "name": "uii",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "destination",
            "in": "query",
            "name": "destination",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "sessionType",
            "in": "query",
            "name": "sessionType",
            "required": true,
            "schema": {
              "enum": [
                "MONITOR",
                "BARGEIN",
                "COACHING"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          },
          {
            "BearerAuth": []
          }
        ],
        "summary": "Provides support for adding sessions to an active call.",
        "tags": [
          "Active Calls"
        ],
        "x-doc-level": "Public"
      }
    },
    "/voice/api/accounts/{accountId}/activeCalls/{uii}/dispositionCall": {
      "post": {
        "description": "Permissions: READ on Account (Permission Override)",
        "operationId": "dispositionCall",
        "parameters": [
          {
            "description": "accountId",
            "in": "path",
            "name": "accountId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "uii",
            "in": "path",
            "name": "uii",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "disposition",
            "in": "query",
            "name": "disposition",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "callback",
            "in": "query",
            "name": "callback",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "callBackDTS",
            "in": "query",
            "name": "callBackDTS",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "notes",
            "in": "query",
            "name": "notes",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "BearerAuth": []
          },
          {
            "BearerAuth": []
          }
        ],
        "summary": "Sets the call disposition for either INBOUND or OUTBOUND calls and releases the agent from PD state",
        "tags": [
          "Active Calls"
        ],
        "x-doc-level": "Public"
      }
    },
    "/voice/api/accounts/{accountId}/activeCalls/{uii}/hangupCall": {
      "post": {
        "description": "Permissions: READ on Account (Permission Override)",
        "operationId": "hangupCall",
        "parameters": [
          {
            "description": "accountId",
            "in": "path",
            "name": "accountId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "uii",
            "in": "path",
            "name": "uii",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "BearerAuth": []
          },
          {
            "BearerAuth": []
          }
        ],
        "summary": "Terminates an active call",
        "tags": [
          "Active Calls"
        ],
        "x-doc-level": "Public"
      }
    },
    "/voice/api/accounts/{accountId}/activeCalls/{uii}/hangupSession": {
      "post": {
        "description": "Permissions: READ on Account (Permission Override)",
        "operationId": "hangupSession",
        "parameters": [
          {
            "description": "accountId",
            "in": "path",
            "name": "accountId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "uii",
            "in": "path",
            "name": "uii",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "phone",
            "in": "query",
            "name": "phone",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "BearerAuth": []
          },
          {
            "BearerAuth": []
          }
        ],
        "summary": "Terminates an active session",
        "tags": [
          "Active Calls"
        ],
        "x-doc-level": "Public"
      }
    },
    "/voice/api/accounts/{accountId}/activeCalls/{uii}/toggleCallRecording": {
      "post": {
        "description": "Permissions: READ on Account (Permission Override)",
        "operationId": "toggleCallRecording",
        "parameters": [
          {
            "description": "accountId",
            "in": "path",
            "name": "accountId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "uii",
            "in": "path",
            "name": "uii",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "record",
            "in": "query",
            "name": "record",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "BearerAuth": []
          },
          {
            "BearerAuth": []
          }
        ],
        "summary": "Provides support for toggling call recording on/off for an active call",
        "tags": [
          "Active Calls"
        ],
        "x-doc-level": "Public"
      }
    },
    "/voice/api/v1/admin/accounts/{accountId}/agentGroups": {
      "get": {
        "description": "Permissions: READ on Account, Post Filtered Results",
        "operationId": "getAgentGroupList",
        "parameters": [
          {
            "description": "accountId",
            "in": "path",
            "name": "accountId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "page",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "maxRows",
            "in": "query",
            "name": "maxRows",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "includePermissions",
            "in": "query",
            "name": "includePermissions",
            "required": false,
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/AgentGroup"
                  },
                  "type": "array"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "BearerAuth": []
          },
          {
            "BearerAuth": []
          }
        ],
        "summary": "Returns a listing of agent groups for an account",
        "tags": [
          "Agent Groups"
        ],
        "x-doc-level": "Public"
      },
      "post": {
        "description": "Permissions: CREATE on Account",
        "operationId": "createAgentGroup",
        "parameters": [
          {
            "description": "accountId",
            "in": "path",
            "name": "accountId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AgentGroup"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgentGroup"
                }
              }
            },
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "BearerAuth": []
          },
          {
            "BearerAuth": []
          }
        ],
        "summary": "Creates a single new agent group for an account",
        "tags": [
          "Agent Groups"
        ],
        "x-doc-level": "Public"
      }
    },
    "/voice/api/v1/admin/accounts/{accountId}/agentGroups/{agentGroupId}": {
      "delete": {
        "description": "Permissions: DELETE on Agent Group",
        "operationId": "deleteAgentGroup",
        "parameters": [
          {
            "description": "accountId",
            "in": "path",
            "name": "accountId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "agentGroupId",
            "in": "path",
            "name": "agentGroupId",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "BearerAuth": []
          },
          {
            "BearerAuth": []
          }
        ],
        "summary": "Deletes an agent group for an account",
        "tags": [
          "Agent Groups"
        ],
        "x-doc-level": "Public"
      },
      "get": {
        "description": "Permissions: READ on Gate Group",
        "operationId": "getAgentGroup",
        "parameters": [
          {
            "description": "accountId",
            "in": "path",
            "name": "accountId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "agentGroupId",
            "in": "path",
            "name": "agentGroupId",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "includePermissions",
            "in": "query",
            "name": "includePermissions",
            "required": false,
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgentGroup"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "BearerAuth": []
          },
          {
            "BearerAuth": []
          }
        ],
        "summary": "Returns a listing of agent groups for an account",
        "tags": [
          "Agent Groups"
        ],
        "x-doc-level": "Public"
      },
      "put": {
        "description": "Permissions: UPDATE on Agent Group",
        "operationId": "updateAgentGroup",
        "parameters": [
          {
            "description": "accountId",
            "in": "path",
            "name": "accountId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "agentGroupId",
            "in": "path",
            "name": "agentGroupId",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AgentGroup"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgentGroup"
                }
              }
            },
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "BearerAuth": []
          },
          {
            "BearerAuth": []
          }
        ],
        "summary": "Updates an agent group for an account",
        "tags": [
          "Agent Groups"
        ],
        "x-doc-level": "Public"
      }
    },
    "/voice/api/v1/admin/accounts/{accountId}/agentGroups/{agentGroupId}/agents": {
      "get": {
        "description": "Permissions: READ on Agent Group, Post Filtered Results",
        "operationId": "getAgentList",
        "parameters": [
          {
            "description": "accountId",
            "in": "path",
            "name": "accountId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "agentGroupId",
            "in": "path",
            "name": "agentGroupId",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/AgentGroup"
                  },
                  "type": "array"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "BearerAuth": []
          },
          {
            "BearerAuth": []
          }
        ],
        "summary": "Returns a listing of agents for an agent group",
        "tags": [
          "Agents"
        ],
        "x-doc-level": "Public"
      },
      "post": {
        "description": "Permissions: CREATE on Agent Group",
        "operationId": "createAgent",
        "parameters": [
          {
            "description": "accountId",
            "in": "path",
            "name": "accountId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "agentGroupId",
            "in": "path",
            "name": "agentGroupId",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Agent"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/Agent"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "BearerAuth": []
          },
          {
            "BearerAuth": []
          }
        ],
        "summary": "Creates a single agent for an agent group",
        "tags": [
          "Agents"
        ],
        "x-doc-level": "Public"
      },
      "put": {
        "description": "Permissions: UPDATE on Agent Group",
        "operationId": "updateAgents",
        "parameters": [
          {
            "description": "accountId",
            "in": "path",
            "name": "accountId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "agentGroupId",
            "in": "path",
            "name": "agentGroupId",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Agent"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/Agent"
                  },
                  "type": "array"
                }
              }
            },
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "BearerAuth": []
          },
          {
            "BearerAuth": []
          }
        ],
        "summary": "Updates a listing of agents for an agent group",
        "tags": [
          "Agents"
        ],
        "x-doc-level": "Public"
      }
    },
    "/voice/api/v1/admin/accounts/{accountId}/agentGroups/{agentGroupId}/agents/{agentId}": {
      "delete": {
        "description": "Permissions: DELETE on Agent",
        "operationId": "deleteAgent",
        "parameters": [
          {
            "description": "accountId",
            "in": "path",
            "name": "accountId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "agentGroupId",
            "in": "path",
            "name": "agentGroupId",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "agentId",
            "in": "path",
            "name": "agentId",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "BearerAuth": []
          },
          {
            "BearerAuth": []
          }
        ],
        "summary": "Deletes an agent for an agent group",
        "tags": [
          "Agents"
        ],
        "x-doc-level": "Public"
      },
      "get": {
        "description": "Permissions: READ on Agent",
        "operationId": "getAgent",
        "parameters": [
          {
            "description": "accountId",
            "in": "path",
            "name": "accountId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "agentGroupId",
            "in": "path",
            "name": "agentGroupId",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "agentId",
            "in": "path",
            "name": "agentId",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/Agent"
                  },
                  "type": "array"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "BearerAuth": []
          },
          {
            "BearerAuth": []
          }
        ],
        "summary": "Returns a single agent for an agent group",
        "tags": [
          "Agents"
        ],
        "x-doc-level": "Public"
      },
      "put": {
        "description": "Permissions: UPDATE on Agent",
        "operationId": "updateAgent",
        "parameters": [
          {
            "description": "accountId",
            "in": "path",
            "name": "accountId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "agentGroupId",
            "in": "path",
            "name": "agentGroupId",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "agentId",
            "in": "path",
            "name": "agentId",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Agent"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/Agent"
                  },
                  "type": "array"
                }
              }
            },
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "BearerAuth": []
          },
          {
            "BearerAuth": []
          }
        ],
        "summary": "Updates a single agent for an agent group",
        "tags": [
          "Agents"
        ],
        "x-doc-level": "Public"
      }
    },
    "/voice/api/v1/admin/accounts/{accountId}/agentGroups/{agentGroupId}/gateGroups/{gateGroupId}/gates/{gateId}": {
      "get": {
        "description": "Permissions: READ on Account, READ on requested Gate",
        "operationId": "getLoggedInAgentsByAgentGroupPerQueue",
        "parameters": [
          {
            "description": "accountId",
            "in": "path",
            "name": "accountId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "agentGroupId",
            "in": "path",
            "name": "agentGroupId",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "gateGroupId",
            "in": "path",
            "name": "gateGroupId",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "gateId",
            "in": "path",
            "name": "gateId",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "format": "int32",
                  "type": "integer"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "BearerAuth": []
          },
          {
            "BearerAuth": []
          }
        ],
        "summary": "Returns the count of agents in an agentGroup logged into a Queue ",
        "tags": [
          "Agent Access"
        ],
        "x-doc-level": "Public"
      }
    },
    "/voice/api/v1/admin/accounts/{accountId}/campaignLeads/actions": {
      "put": {
        "description": "Permissions: READ on Account (Permission Override), UPDATE on Campaign",
        "operationId": "performLeadAction",
        "parameters": [
          {
            "description": "accountId",
            "in": "path",
            "name": "accountId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "leadAction",
            "in": "query",
            "name": "leadAction",
            "required": true,
            "schema": {
              "enum": [
                "RESET_LEADS",
                "CANCEL_LEADS",
                "DELETE_LEADS",
                "PAUSE_LEADS",
                "DIALER_REFRESH",
                "READY_LEADS",
                "MANUAL_LEADS",
                "EMAIL_LEADS",
                "CALLBACK_LEADS",
                "MOVE_TO_CAMPAIGN",
                "AGENT_RESERVATION",
                "SUPPRESS_LEADS",
                "UNSUPPRESS_LEADS"
              ],
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LeadManagerRequest"
              }
            }
          },
          "description": "leadManagerActionRequest",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LeadActionResult"
                }
              }
            },
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "BearerAuth": []
          },
          {
            "BearerAuth": []
          }
        ],
        "summary": "Performs a lead action against the matching campaign leads found for the given the search criteria",
        "tags": [
          "Campaigns"
        ],
        "x-doc-level": "Public"
      }
    },
    "/voice/api/v1/admin/accounts/{accountId}/campaignLeads/leadSearch": {
      "post": {
        "description": "Permissions: READ on Account (Permission Override)",
        "operationId": "searchForCampaignLeads",
        "parameters": [
          {
            "description": "accountId",
            "in": "path",
            "name": "accountId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "count",
            "in": "query",
            "name": "count",
            "required": false,
            "schema": {
              "default": false,
              "type": "boolean"
            }
          },
          {
            "description": "page",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "maxRows",
            "in": "query",
            "name": "maxRows",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CampaignLeadSearchCriteria"
              }
            }
          },
          "description": "searchRequest",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "BearerAuth": []
          },
          {
            "BearerAuth": []
          }
        ],
        "summary": "Allows searching of campaign leads for a single campaign",
        "tags": [
          "Leads"
        ],
        "x-doc-level": "Public"
      }
    },
    "/voice/api/v1/admin/accounts/{accountId}/campaignLeads/leadSearchByPhoneList": {
      "post": {
        "description": "Permissions: READ on Account (Permission Override)",
        "operationId": "uploadSearchCriteriaForCampaignLeads",
        "parameters": [
          {
            "description": "accountId",
            "in": "path",
            "name": "accountId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "page",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "maxRows",
            "in": "query",
            "name": "maxRows",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {}
            }
          },
          "description": "leadPhoneNumbersFile",
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/CampaignLeadSearchResultsView"
                  },
                  "type": "array"
                }
              }
            },
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "BearerAuth": []
          },
          {
            "BearerAuth": []
          }
        ],
        "summary": "Allows searching of campaign leads for a single campaign",
        "tags": [
          "Campaigns"
        ],
        "x-doc-level": "Public"
      }
    },
    "/voice/api/v1/admin/accounts/{accountId}/campaignLeads/leadStates": {
      "get": {
        "description": "Permissions: READ on Account",
        "operationId": "getLeadStates",
        "parameters": [
          {
            "description": "accountId",
            "in": "path",
            "name": "accountId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "text/plain": {
                "schema": {
                  "items": {
                    "enum": [
                      "ACTIVE",
                      "AGENT-CALLBACK",
                      "CALLBACK-CANCELLED",
                      "CALLBACK",
                      "CANCELLED",
                      "COMPLETE",
                      "DISCONNECTED",
                      "DO-NOT-CALL",
                      "INTERCEPT",
                      "MAX-DIAL-LIMIT",
                      "PAUSED",
                      "PENDING-CALLBACK",
                      "PENDING-ERR",
                      "PENDING-HCI",
                      "PENDING",
                      "READY",
                      "TRANSITIONED",
                      "WHITELIST"
                    ],
                    "type": "string"
                  },
                  "type": "array"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "BearerAuth": []
          },
          {
            "BearerAuth": []
          }
        ],
        "summary": "Returns a listing of all lead states for an account",
        "tags": [
          "Leads"
        ],
        "x-doc-level": "Public"
      }
    },
    "/voice/api/v1/admin/accounts/{accountId}/campaignLeads/systemDispositions": {
      "get": {
        "description": "Permissions: READ on Account",
        "operationId": "getSystemDispositions",
        "parameters": [
          {
            "description": "accountId",
            "in": "path",
            "name": "accountId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "text/plain": {
                "schema": {
                  "items": {
                    "enum": [
                      "ANSWER",
                      "NOANSWER",
                      "BUSY",
                      "MACHINE",
                      "INTERCEPT",
                      "DISCONNECT",
                      "ABANDON",
                      "SPAWN_FAIL",
                      "CONGESTION",
                      "MANUAL_PASS",
                      "INBOUND_CALLBACK",
                      "APP_DNC",
                      "APP_REQUEUE",
                      "APP_REQUEUE_COMPLETE",
                      "APP_REQUEUE_ABANDON",
                      "INBOUND_ABANDON"
                    ],
                    "type": "string"
                  },
                  "type": "array"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "BearerAuth": []
          },
          {
            "BearerAuth": []
          }
        ],
        "summary": "Returns a listing of all system dispositions for an account",
        "tags": [
          "Leads"
        ],
        "x-doc-level": "Public"
      }
    },
    "/voice/api/v1/admin/accounts/{accountId}/campaignLeads/{leadId}": {
      "patch": {
        "description": "Allows updating of a campaign lead, only updating those fields passed in\n\nPermissions: READ on Account (Permission Override), UPDATE on Campaign",
        "operationId": "patchCampaignLead",
        "parameters": [
          {
            "in": "path",
            "name": "accountId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "leadId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "campaignId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "listId",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "timezoneOption",
            "required": false,
            "schema": {
              "enum": [
                "NPA_NXX",
                "ZIPCODE",
                "EXPLICIT",
                "NOT_APPLICABLE"
              ],
              "type": "string"
            }
          },
          {
            "description": "`RETAIN_ALL`: Retain all records, `REMOVE_ALL_EXISTING`: Remove duplicates from all existing lists, `REMOVE_FROM_LIST`: Remove duplicates from this list",
            "in": "query",
            "name": "duplicateHandling",
            "required": false,
            "schema": {
              "default": "RETAIN_ALL",
              "enum": [
                "RETAIN_ALL",
                "REMOVE_ALL_EXISTING",
                "REMOVE_FROM_LIST"
              ],
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CampaignLead"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CampaignLead"
                }
              }
            },
            "description": "Success"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Patch Campaign Lead",
        "tags": [
          "Leads"
        ],
        "x-doc-level": "Public"
      },
      "put": {
        "description": "Permissions: READ on Account (Permission Override), UPDATE on Campaign",
        "operationId": "updateCampaignLead",
        "parameters": [
          {
            "description": "accountId",
            "in": "path",
            "name": "accountId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "leadId",
            "in": "path",
            "name": "leadId",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "campaignId",
            "in": "query",
            "name": "campaignId",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "listId",
            "in": "query",
            "name": "listId",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "timezoneOption",
            "in": "query",
            "name": "timezoneOption",
            "required": false,
            "schema": {
              "enum": [
                "NPA_NXX",
                "ZIPCODE",
                "EXPLICIT",
                "NOT_APPLICABLE"
              ],
              "type": "string"
            }
          },
          {
            "description": "duplicateHandling",
            "in": "query",
            "name": "duplicateHandling",
            "required": false,
            "schema": {
              "default": "RETAIN_ALL",
              "enum": [
                "RETAIN_ALL",
                "REMOVE_ALL_EXISTING",
                "REMOVE_FROM_LIST"
              ],
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CampaignLead"
              }
            }
          },
          "description": "campaignLead",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CampaignLead"
                }
              }
            },
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "BearerAuth": []
          },
          {
            "BearerAuth": []
          }
        ],
        "summary": "Allows updating of a campaign lead",
        "tags": [
          "Leads"
        ],
        "x-doc-level": "Public"
      }
    },
    "/voice/api/v1/admin/accounts/{accountId}/campaigns/{campaignId}/leadLoader/direct": {
      "post": {
        "description": "Permissions: Update on Campaign (Permission Override)",
        "operationId": "loadDirectLeads",
        "parameters": [
          {
            "description": "accountId",
            "in": "path",
            "name": "accountId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "campaignId",
            "in": "path",
            "name": "campaignId",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LeadListProcessingRequest"
              }
            }
          },
          "description": "request",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LeadListProcessingResult"
                }
              }
            },
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "BearerAuth": []
          },
          {
            "BearerAuth": []
          }
        ],
        "summary": "Uploads a single lead or list of leads to a new or existing list",
        "tags": [
          "Leads"
        ],
        "x-doc-level": "Public"
      }
    },
    "/voice/api/v1/admin/accounts/{accountId}/campaigns/{campaignId}/leadLoader/preview": {
      "post": {
        "description": "Permissions: UPDATE on Campaign (Permission Override)",
        "operationId": "previewLeadList",
        "parameters": [
          {
            "description": "accountId",
            "in": "path",
            "name": "accountId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "campaignId",
            "in": "path",
            "name": "campaignId",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "fileType",
            "in": "query",
            "name": "fileType",
            "required": true,
            "schema": {
              "enum": [
                "EXCEL",
                "PIPE",
                "COMMA",
                "TAB"
              ],
              "type": "string"
            }
          },
          {
            "description": "quoteCharacter",
            "in": "query",
            "name": "quoteCharacter",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "format": "binary",
                "type": "string"
              }
            }
          },
          "description": "file",
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LeadListPreviewResponse"
                }
              }
            },
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "BearerAuth": []
          },
          {
            "BearerAuth": []
          }
        ],
        "summary": "Upload new leads to a new or existing list",
        "tags": [
          "Outbound"
        ],
        "x-doc-level": "Public"
      }
    },
    "/voice/api/v1/admin/accounts/{accountId}/campaigns/{campaignId}/leadLoader/process": {
      "post": {
        "description": "Permissions: UPDATE on Campaign (Permission Override)",
        "operationId": "loadList",
        "parameters": [
          {
            "description": "accountId",
            "in": "path",
            "name": "accountId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "campaignId",
            "in": "path",
            "name": "campaignId",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LeadListProcessingRequest"
              }
            }
          },
          "description": "request",
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "202": {
            "description": "Accepted"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "BearerAuth": []
          },
          {
            "BearerAuth": []
          }
        ],
        "summary": "Upload new leads to a new or existing list",
        "tags": [
          "Outbound"
        ],
        "x-doc-level": "Public"
      }
    },
    "/voice/api/v1/admin/accounts/{accountId}/countries/available": {
      "get": {
        "description": "Get a list of available countries",
        "operationId": "getAvailableCountries",
        "parameters": [
          {
            "in": "path",
            "name": "accountId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/Country"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Success"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Get Available Countries",
        "tags": [
          "Countries"
        ],
        "x-doc-level": "Public"
      }
    },
    "/voice/api/v1/admin/accounts/{accountId}/dialGroups": {
      "get": {
        "description": "Permissions: READ on Account, Post Filtered Results",
        "operationId": "getDialGroupListByAccount",
        "parameters": [
          {
            "description": "accountId",
            "in": "path",
            "name": "accountId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "page",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "maxRows",
            "in": "query",
            "name": "maxRows",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/DialGroup"
                  },
                  "type": "array"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "BearerAuth": []
          },
          {
            "BearerAuth": []
          }
        ],
        "summary": "Returns a listing of dial groups for an account",
        "tags": [
          "Dial Groups"
        ],
        "x-doc-level": "Public"
      },
      "post": {
        "description": "Permissions: CREATE on Account",
        "operationId": "createDialGroup",
        "parameters": [
          {
            "description": "accountId",
            "in": "path",
            "name": "accountId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DialGroup"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DialGroup"
                }
              }
            },
            "description": "CREATED"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "BearerAuth": []
          },
          {
            "BearerAuth": []
          }
        ],
        "summary": "Creates a dial group for an account",
        "tags": [
          "Dial Groups"
        ],
        "x-doc-level": "Public"
      }
    },
    "/voice/api/v1/admin/accounts/{accountId}/dialGroups/withChildren": {
      "get": {
        "description": "Permissions: READ on Account, Post Filtered Results for Dial Groups and Campaigns",
        "operationId": "getDialGroupListWithChildren",
        "parameters": [
          {
            "description": "accountId",
            "in": "path",
            "name": "accountId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "includePermissions",
            "in": "query",
            "name": "includePermissions",
            "required": false,
            "schema": {
              "default": "false",
              "type": "boolean"
            }
          },
          {
            "description": "page",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "maxRows",
            "in": "query",
            "name": "maxRows",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/DialGroup"
                  },
                  "type": "array"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "BearerAuth": []
          },
          {
            "BearerAuth": []
          }
        ],
        "summary": "Returns a listing of dial groups with associated campaigns for an account",
        "tags": [
          "Dial Groups"
        ],
        "x-doc-level": "Public"
      }
    },
    "/voice/api/v1/admin/accounts/{accountId}/dialGroups/{dialGroupId}": {
      "delete": {
        "description": "Permissions: DELETE on Account",
        "operationId": "deleteDialGroup",
        "parameters": [
          {
            "description": "accountId",
            "in": "path",
            "name": "accountId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "dialGroupId",
            "in": "path",
            "name": "dialGroupId",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "BearerAuth": []
          },
          {
            "BearerAuth": []
          }
        ],
        "summary": "Deletes a dial group for an account",
        "tags": [
          "Dial Groups"
        ],
        "x-doc-level": "Public"
      },
      "get": {
        "description": "Permissions: READ on Dial Group",
        "operationId": "getDialGroup",
        "parameters": [
          {
            "description": "dialGroupId",
            "in": "path",
            "name": "dialGroupId",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "accountId",
            "in": "path",
            "name": "accountId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DialGroup"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "BearerAuth": []
          },
          {
            "BearerAuth": []
          }
        ],
        "summary": "Returns a dial group for an account",
        "tags": [
          "Dial Groups"
        ],
        "x-doc-level": "Public"
      },
      "put": {
        "description": "Permissions: UPDATE on Dial Group",
        "operationId": "updateDialGroup",
        "parameters": [
          {
            "description": "accountId",
            "in": "path",
            "name": "accountId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "dialGroupId",
            "in": "path",
            "name": "dialGroupId",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DialGroup"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DialGroup"
                }
              }
            },
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "BearerAuth": []
          },
          {
            "BearerAuth": []
          }
        ],
        "summary": "Updates a dial group for an account",
        "tags": [
          "Dial Groups"
        ],
        "x-doc-level": "Public"
      }
    },
    "/voice/api/v1/admin/accounts/{accountId}/dialGroups/{dialGroupId}/assignAgents": {
      "put": {
        "description": "Permissions: UPDATE on Dial Group and READ on Agent",
        "operationId": "assignAgentsToDialGroups",
        "parameters": [
          {
            "description": "accountId",
            "in": "path",
            "name": "accountId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "dialGroupId",
            "in": "path",
            "name": "dialGroupId",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DialGroup"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Agent"
                }
              }
            },
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "BearerAuth": []
          },
          {
            "BearerAuth": []
          }
        ],
        "summary": "Assigns a listing of agents to a dial group",
        "tags": [
          "Dial Groups"
        ],
        "x-doc-level": "Public"
      }
    },
    "/voice/api/v1/admin/accounts/{accountId}/dialGroups/{dialGroupId}/assignedAgents": {
      "get": {
        "description": "Permissions: READ on Dial Group",
        "operationId": "getAgentsFromDialGroup",
        "parameters": [
          {
            "description": "accountId",
            "in": "path",
            "name": "accountId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "dialGroupId",
            "in": "path",
            "name": "dialGroupId",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "page",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "maxRows",
            "in": "query",
            "name": "maxRows",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/Agent"
                  },
                  "type": "array"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "BearerAuth": []
          },
          {
            "BearerAuth": []
          }
        ],
        "summary": "Returns a listing of all agents assigned to a dial group",
        "tags": [
          "Dial Groups"
        ],
        "x-doc-level": "Public"
      }
    },
    "/voice/api/v1/admin/accounts/{accountId}/dialGroups/{dialGroupId}/campaigns": {
      "get": {
        "description": "Permissions: READ on Dial Group, Post Filtered Results",
        "operationId": "getCampaignList",
        "parameters": [
          {
            "description": "accountId",
            "in": "path",
            "name": "accountId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "dialGroupId",
            "in": "path",
            "name": "dialGroupId",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "page",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "maxRows",
            "in": "query",
            "name": "maxRows",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/Campaign"
                  },
                  "type": "array"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "BearerAuth": []
          },
          {
            "BearerAuth": []
          }
        ],
        "summary": "Returns a listing of campaigns for a dial group",
        "tags": [
          "Campaigns"
        ],
        "x-doc-level": "Public"
      },
      "post": {
        "description": "Permissions: UPDATE on Dial Group (Permission Override)",
        "operationId": "createCampaign",
        "parameters": [
          {
            "description": "accountId",
            "in": "path",
            "name": "accountId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "dialGroupId",
            "in": "path",
            "name": "dialGroupId",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Campaign"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Campaign"
                }
              }
            },
            "description": "CREATED"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "BearerAuth": []
          },
          {
            "BearerAuth": []
          }
        ],
        "summary": "Returns a campaign for a dial group",
        "tags": [
          "Campaigns"
        ],
        "x-doc-level": "Public"
      }
    },
    "/voice/api/v1/admin/accounts/{accountId}/dialGroups/{dialGroupId}/campaigns/{campaignId}": {
      "delete": {
        "description": "Permissions: DELETE on Campaign",
        "operationId": "deleteCampaign",
        "parameters": [
          {
            "description": "accountId",
            "in": "path",
            "name": "accountId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "dialGroupId",
            "in": "path",
            "name": "dialGroupId",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "campaignId",
            "in": "path",
            "name": "campaignId",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "BearerAuth": []
          },
          {
            "BearerAuth": []
          }
        ],
        "summary": "Deletes a campaign for a dial group",
        "tags": [
          "Campaigns"
        ],
        "x-doc-level": "Public"
      },
      "get": {
        "description": "Permissions: READ on Campaign",
        "operationId": "getCampaign",
        "parameters": [
          {
            "description": "accountId",
            "in": "path",
            "name": "accountId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "dialGroupId",
            "in": "path",
            "name": "dialGroupId",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "campaignId",
            "in": "path",
            "name": "campaignId",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Campaign"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "BearerAuth": []
          },
          {
            "BearerAuth": []
          }
        ],
        "summary": "Returns a campaign for a dial group",
        "tags": [
          "Campaigns"
        ],
        "x-doc-level": "Public"
      },
      "put": {
        "description": "Permissions: UPDATE on Campaign",
        "operationId": "updateCampaign",
        "parameters": [
          {
            "description": "accountId",
            "in": "path",
            "name": "accountId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "dialGroupId",
            "in": "path",
            "name": "dialGroupId",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "campaignId",
            "in": "path",
            "name": "campaignId",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Campaign"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Campaign"
                }
              }
            },
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "BearerAuth": []
          },
          {
            "BearerAuth": []
          }
        ],
        "summary": "Updates a campaign for a dial group",
        "tags": [
          "Campaigns"
        ],
        "x-doc-level": "Public"
      }
    },
    "/voice/api/v1/admin/accounts/{accountId}/dialGroups/{dialGroupId}/campaigns/{campaignId}/clearCache": {
      "post": {
        "description": "lears the cache for a campaign\n\nPermissions: READ on Campaign (Permission Override)",
        "operationId": "clearCampaignCache",
        "parameters": [
          {
            "in": "path",
            "name": "accountId",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "dialGroupId",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "campaignId",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          },
          "description": "An `application/json` Content-Type header is required. Submit an empty body to trigger the header.",
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Clear Campaign Cache",
        "tags": [
          "Campaigns"
        ],
        "x-doc-level": "Public"
      }
    },
    "/voice/api/v1/admin/accounts/{accountId}/gateGroups": {
      "get": {
        "description": "Permissions: READ on Account, Post Filtered Results",
        "operationId": "getGateGroupList",
        "parameters": [
          {
            "description": "accountId",
            "in": "path",
            "name": "accountId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "page",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "maxRows",
            "in": "query",
            "name": "maxRows",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/GateGroup"
                  },
                  "type": "array"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "BearerAuth": []
          },
          {
            "BearerAuth": []
          }
        ],
        "summary": "Returns a listing of queue groups (AKA gate groups) for an account",
        "tags": [
          "Queue Groups"
        ],
        "x-doc-level": "Public"
      },
      "post": {
        "description": "Permissions: CREATE on Account",
        "operationId": "createGateGroup",
        "parameters": [
          {
            "description": "accountId",
            "in": "path",
            "name": "accountId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/GateGroup"
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GateGroup"
                }
              }
            },
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "BearerAuth": []
          },
          {
            "BearerAuth": []
          }
        ],
        "summary": "Create a single queue group (AKA gate group) for an account",
        "tags": [
          "Queue Groups"
        ],
        "x-doc-level": "Public"
      }
    },
    "/voice/api/v1/admin/accounts/{accountId}/gateGroups/withChildren": {
      "get": {
        "description": "Permissions: READ on Account, Post Filtered Results",
        "operationId": "getGateGroupListWithChildren",
        "parameters": [
          {
            "description": "accountId",
            "in": "path",
            "name": "accountId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "includePermissions",
            "in": "query",
            "name": "includePermissions",
            "required": false,
            "schema": {
              "default": false,
              "type": "boolean"
            }
          },
          {
            "description": "page",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "maxRows",
            "in": "query",
            "name": "maxRows",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/GateGroup"
                  },
                  "type": "array"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "BearerAuth": []
          },
          {
            "BearerAuth": []
          }
        ],
        "summary": "Returns a listing of queue groups (AKA gate groups) with related data for an account",
        "tags": [
          "Queue Groups"
        ],
        "x-doc-level": "Public"
      }
    },
    "/voice/api/v1/admin/accounts/{accountId}/gateGroups/withChildren/additionalData": {
      "get": {
        "description": "Permissions: READ on Account, Post Filtered Results",
        "operationId": "getGateGroupListWithChildrenAdditionalData",
        "parameters": [
          {
            "description": "accountId",
            "in": "path",
            "name": "accountId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "page",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "maxRows",
            "in": "query",
            "name": "maxRows",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/GateGroup"
                  },
                  "type": "array"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "BearerAuth": []
          },
          {
            "BearerAuth": []
          }
        ],
        "summary": "Returns a listing of queue groups (AKA gate groups) with related and additional data for an account",
        "tags": [
          "Queue Groups"
        ],
        "x-doc-level": "Public"
      }
    },
    "/voice/api/v1/admin/accounts/{accountId}/gateGroups/{gateGroupId}": {
      "delete": {
        "deprecated": true,
        "description": "Permissions: DELETE on Gate Group",
        "operationId": "deleteGateGroup",
        "parameters": [
          {
            "description": "accountId",
            "in": "path",
            "name": "accountId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "gateGroupId",
            "in": "path",
            "name": "gateGroupId",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "boolean"
                }
              }
            },
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "BearerAuth": []
          },
          {
            "BearerAuth": []
          }
        ],
        "summary": "Deletes a single queue group (AKA gate group)",
        "tags": [
          "Queue Groups"
        ],
        "x-doc-level": "Public"
      },
      "get": {
        "description": "Permissions: READ on Gate Group",
        "operationId": "getGateGroup",
        "parameters": [
          {
            "description": "accountId",
            "in": "path",
            "name": "accountId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "gateGroupId",
            "in": "path",
            "name": "gateGroupId",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GateGroup"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "BearerAuth": []
          },
          {
            "BearerAuth": []
          }
        ],
        "summary": "Returns a single queue group (AKA gate group) for an account",
        "tags": [
          "Queue Groups"
        ],
        "x-doc-level": "Public"
      },
      "put": {
        "description": "Permissions: UPDATE on Gate Group",
        "operationId": "updateGateGroup",
        "parameters": [
          {
            "description": "accountId",
            "in": "path",
            "name": "accountId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "gateGroupId",
            "in": "path",
            "name": "gateGroupId",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/GateGroup"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GateGroup"
                }
              }
            },
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "BearerAuth": []
          },
          {
            "BearerAuth": []
          }
        ],
        "summary": "Updates a single queue group (AKA gate group) for an account",
        "tags": [
          "Queue Groups"
        ],
        "x-doc-level": "Public"
      }
    },
    "/voice/api/v1/admin/accounts/{accountId}/gateGroups/{gateGroupId}/gates": {
      "get": {
        "description": "Permissions: READ on Gate Group, Post Filtered Results",
        "operationId": "getGateList",
        "parameters": [
          {
            "description": "accountId",
            "in": "path",
            "name": "accountId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "gateGroupId",
            "in": "path",
            "name": "gateGroupId",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "page",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "maxRows",
            "in": "query",
            "name": "maxRows",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/Gate"
                  },
                  "type": "array"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "BearerAuth": []
          },
          {
            "BearerAuth": []
          }
        ],
        "summary": "Returns a listing of all queues (AKA gates) for a queue group",
        "tags": [
          "Queues"
        ],
        "x-doc-level": "Public"
      },
      "post": {
        "description": "Permissions: CREATE on Gate Group",
        "operationId": "createGate",
        "parameters": [
          {
            "description": "accountId",
            "in": "path",
            "name": "accountId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "gateGroupId",
            "in": "path",
            "name": "gateGroupId",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Gate"
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Gate"
                }
              }
            },
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "BearerAuth": []
          },
          {
            "BearerAuth": []
          }
        ],
        "summary": "Creates a new queue (AKA gate) for a queue group",
        "tags": [
          "Queues"
        ],
        "x-doc-level": "Public"
      }
    },
    "/voice/api/v1/admin/accounts/{accountId}/gateGroups/{gateGroupId}/gates/{gateId}": {
      "delete": {
        "deprecated": true,
        "description": "Permissions: DELETE on Gate",
        "operationId": "deleteGate",
        "parameters": [
          {
            "description": "accountId",
            "in": "path",
            "name": "accountId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "gateGroupId",
            "in": "path",
            "name": "gateGroupId",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "gateId",
            "in": "path",
            "name": "gateId",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "boolean"
                }
              }
            },
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "BearerAuth": []
          },
          {
            "BearerAuth": []
          }
        ],
        "summary": "Deletes a queue (AKA gate) for a queue group",
        "tags": [
          "Queues"
        ],
        "x-doc-level": "Public"
      },
      "get": {
        "description": "Permissions: READ on Gate",
        "operationId": "getGate",
        "parameters": [
          {
            "description": "accountId",
            "in": "path",
            "name": "accountId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "gateGroupId",
            "in": "path",
            "name": "gateGroupId",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "gateId",
            "in": "path",
            "name": "gateId",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Gate"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "BearerAuth": []
          },
          {
            "BearerAuth": []
          }
        ],
        "summary": "Returns a single queue (AKA gate) for a queue group",
        "tags": [
          "Queues"
        ],
        "x-doc-level": "Public"
      },
      "put": {
        "description": "Permissions: UPDATE on Gate",
        "operationId": "updateGate",
        "parameters": [
          {
            "description": "accountId",
            "in": "path",
            "name": "accountId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "gateGroupId",
            "in": "path",
            "name": "gateGroupId",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "gateId",
            "in": "path",
            "name": "gateId",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Gate"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Gate"
                }
              }
            },
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "BearerAuth": []
          },
          {
            "BearerAuth": []
          }
        ],
        "summary": "Updates a queue (AKA gate) for a queue group",
        "tags": [
          "Queues"
        ],
        "x-doc-level": "Public"
      }
    },
    "/voice/api/v1/admin/accounts/{accountId}/gateGroups/{gateGroupId}/gates/{gateId}/assignAgents": {
      "put": {
        "description": "Permissions: UPDATE on Gate and READ on Agents",
        "operationId": "assignAgentsToGate",
        "parameters": [
          {
            "description": "accountId",
            "in": "path",
            "name": "accountId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "gateGroupId",
            "in": "path",
            "name": "gateGroupId",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "gateId",
            "in": "path",
            "name": "gateId",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "items": {
                  "$ref": "#/components/schemas/AgentGateAccess"
                },
                "type": "array"
              }
            }
          },
          "description": "agentAccessRequests",
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/Agent"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "BearerAuth": []
          },
          {
            "BearerAuth": []
          }
        ],
        "summary": "Assigns a listing of agents to a queue (AKA gate)",
        "tags": [
          "Agents"
        ],
        "x-doc-level": "Public"
      }
    },
    "/voice/api/v1/admin/accounts/{accountId}/gateGroups/{gateGroupId}/gates/{gateId}/assignGateToPriorityGroup": {
      "put": {
        "description": "Permissions: UPDATE on Gate",
        "operationId": "assignGateToPriorityGroup",
        "parameters": [
          {
            "description": "accountId",
            "in": "path",
            "name": "accountId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "gateGroupId",
            "in": "path",
            "name": "gateGroupId",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "gateId",
            "in": "path",
            "name": "gateId",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "priorityGroupId",
            "in": "query",
            "name": "priorityGroupId",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "priorityGroupRank",
            "in": "query",
            "name": "priorityGroupRank",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Gate"
                }
              }
            },
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "BearerAuth": []
          },
          {
            "BearerAuth": []
          }
        ],
        "summary": "Assigns a queue (AKA gate) to a queue priority group for an account",
        "tags": [
          "Queues"
        ],
        "x-doc-level": "Public"
      }
    },
    "/voice/api/v1/admin/accounts/{accountId}/gateGroups/{gateGroupId}/gates/{gateId}/assignedAgents": {
      "get": {
        "description": "Permissions: READ on Gate",
        "operationId": "getAssignedAgentsForGate",
        "parameters": [
          {
            "description": "accountId",
            "in": "path",
            "name": "accountId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "gateGroupId",
            "in": "path",
            "name": "gateGroupId",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "gateId",
            "in": "path",
            "name": "gateId",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "page",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "maxRows",
            "in": "query",
            "name": "maxRows",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/Agent"
                  },
                  "type": "array"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "BearerAuth": []
          },
          {
            "BearerAuth": []
          }
        ],
        "summary": "Returns a listing of assigned agents for a queue (AKA gate) ",
        "tags": [
          "Agents"
        ],
        "x-doc-level": "Public"
      }
    },
    "/voice/api/v1/admin/accounts/{accountId}/gateGroups/{gateGroupId}/gates/{gateId}/clone": {
      "post": {
        "description": "Permissions: READ on cloned Gate and CREATE on new Gate Group (Permission Override",
        "operationId": "cloneGate",
        "parameters": [
          {
            "description": "accountId",
            "in": "path",
            "name": "accountId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "gateGroupId",
            "in": "path",
            "name": "gateGroupId",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "gateId",
            "in": "path",
            "name": "gateId",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "newGateGroupId",
            "in": "query",
            "name": "newGateGroupId",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "newGateName",
            "in": "query",
            "name": "newGateName",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Gate"
                }
              }
            },
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "BearerAuth": []
          },
          {
            "BearerAuth": []
          }
        ],
        "summary": "Creates a clone of a queue (AKA gate) for a queue group",
        "tags": [
          "Queues"
        ],
        "x-doc-level": "Public"
      }
    },
    "/voice/api/v1/admin/accounts/{accountId}/gateGroups/{gateGroupId}/gates/{gateId}/dispositions": {
      "get": {
        "description": "Permissions: READ on Gate, Post Filtered Results",
        "operationId": "getGateDispositionList",
        "parameters": [
          {
            "description": "accountId",
            "in": "path",
            "name": "accountId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "gateGroupId",
            "in": "path",
            "name": "gateGroupId",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "gateId",
            "in": "path",
            "name": "gateId",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/GateDisposition"
                  },
                  "type": "array"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "BearerAuth": []
          },
          {
            "BearerAuth": []
          }
        ],
        "summary": "Returns a listing of dispositions for a queue (AKA gate)",
        "tags": [
          "Queue Dispositions"
        ],
        "x-doc-level": "Public"
      },
      "post": {
        "description": "Permissions: UPDATE on Gate",
        "operationId": "createGateDisposition",
        "parameters": [
          {
            "description": "accountId",
            "in": "path",
            "name": "accountId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "gateGroupId",
            "in": "path",
            "name": "gateGroupId",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "gateId",
            "in": "path",
            "name": "gateId",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/GateDisposition"
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GateDisposition"
                }
              }
            },
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "BearerAuth": []
          },
          {
            "BearerAuth": []
          }
        ],
        "summary": "Creates a disposition for a queue (AKA gate)",
        "tags": [
          "Queue Dispositions"
        ],
        "x-doc-level": "Public"
      },
      "put": {
        "description": "Permissions: UPDATE on Gate",
        "operationId": "saveGateDispositionList",
        "parameters": [
          {
            "description": "accountId",
            "in": "path",
            "name": "accountId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "gateGroupId",
            "in": "path",
            "name": "gateGroupId",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "gateId",
            "in": "path",
            "name": "gateId",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "items": {
                  "$ref": "#/components/schemas/GateDisposition"
                },
                "type": "array"
              }
            }
          },
          "description": "gateDispositions",
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/GateDisposition"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "BearerAuth": []
          },
          {
            "BearerAuth": []
          }
        ],
        "summary": "Saves a list of dispositions for a queue (AKA gate)",
        "tags": [
          "Queue Dispositions"
        ],
        "x-doc-level": "Public"
      }
    },
    "/voice/api/v1/admin/accounts/{accountId}/gateGroups/{gateGroupId}/gates/{gateId}/dispositions/{gateDispositionId}": {
      "delete": {
        "description": "Permissions: UPDATE on Gate",
        "operationId": "deleteGateDisposition",
        "parameters": [
          {
            "description": "accountId",
            "in": "path",
            "name": "accountId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "gateGroupId",
            "in": "path",
            "name": "gateGroupId",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "gateId",
            "in": "path",
            "name": "gateId",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "gateDispositionId",
            "in": "path",
            "name": "gateDispositionId",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "boolean"
                }
              }
            },
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "BearerAuth": []
          },
          {
            "BearerAuth": []
          }
        ],
        "summary": "Deletes a disposition for a queue (AKA gate)",
        "tags": [
          "Queue Dispositions"
        ],
        "x-doc-level": "Public"
      },
      "get": {
        "description": "Permissions: READ on Gate",
        "operationId": "getGateDisposition",
        "parameters": [
          {
            "description": "accountId",
            "in": "path",
            "name": "accountId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "gateGroupId",
            "in": "path",
            "name": "gateGroupId",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "gateId",
            "in": "path",
            "name": "gateId",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "gateDispositionId",
            "in": "path",
            "name": "gateDispositionId",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GateDisposition"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "BearerAuth": []
          },
          {
            "BearerAuth": []
          }
        ],
        "summary": "Returns a single disposition for a queue (AKA gate)",
        "tags": [
          "Queue Dispositions"
        ],
        "x-doc-level": "Public"
      },
      "put": {
        "description": "Permissions: UPDATE on Gate",
        "operationId": "updateGateDisposition",
        "parameters": [
          {
            "description": "accountId",
            "in": "path",
            "name": "accountId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "gateGroupId",
            "in": "path",
            "name": "gateGroupId",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "gateId",
            "in": "path",
            "name": "gateId",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "gateDispositionId",
            "in": "path",
            "name": "gateDispositionId",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/GateDisposition"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GateDisposition"
                }
              }
            },
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "BearerAuth": []
          },
          {
            "BearerAuth": []
          }
        ],
        "summary": "Updates a single disposition for a queue (AKA gate)",
        "tags": [
          "Queue Dispositions"
        ],
        "x-doc-level": "Public"
      }
    },
    "/voice/api/v1/admin/accounts/{accountId}/gateGroups/{gateGroupId}/gates/{gateId}/gateAgentAccessLogin": {
      "get": {
        "description": "Permissions: READ on Account and Read on Agent, Post Filtered Results",
        "operationId": "getGatesAgentsLoggedInto",
        "parameters": [
          {
            "description": "accountId",
            "in": "path",
            "name": "accountId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "gateId",
            "in": "path",
            "name": "gateId",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/GatesLoggedInAgentsView"
                  },
                  "type": "array"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "BearerAuth": []
          },
          {
            "BearerAuth": []
          }
        ],
        "summary": "Returns a listing of all agents that have access to the queue (AKA gate) - this includes data to indicate if an agent is currently logged into the queue",
        "tags": [
          "Agent Access"
        ],
        "x-doc-level": "Public"
      }
    },
    "/voice/api/v1/admin/accounts/{accountId}/gateGroups/{gateGroupId}/gates/{gateId}/gateQueueEvents": {
      "get": {
        "description": "Permissions: READ on Gate",
        "operationId": "getGateQueueEventList",
        "parameters": [
          {
            "description": "accountId",
            "in": "path",
            "name": "accountId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "gateGroupId",
            "in": "path",
            "name": "gateGroupId",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "gateId",
            "in": "path",
            "name": "gateId",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/GateQueueEvent"
                  },
                  "type": "array"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "BearerAuth": []
          },
          {
            "BearerAuth": []
          }
        ],
        "summary": "Returns a listing of gate queue events for a queue",
        "tags": [
          "Queue Events"
        ],
        "x-doc-level": "Public"
      },
      "post": {
        "deprecated": true,
        "operationId": "createGateQueueEvent",
        "parameters": [
          {
            "description": "accountId",
            "in": "path",
            "name": "accountId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "gateGroupId",
            "in": "path",
            "name": "gateGroupId",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "gateId",
            "in": "path",
            "name": "gateId",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/GateQueueEvent"
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GateQueueEvent"
                }
              }
            },
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "BearerAuth": []
          },
          {
            "BearerAuth": []
          }
        ],
        "summary": "createGateQueueEvent",
        "tags": [
          "Queue Events"
        ],
        "x-doc-level": "Public"
      },
      "put": {
        "description": "Permissions: UPDATE on Gate",
        "operationId": "saveGateQueueEventList",
        "parameters": [
          {
            "description": "accountId",
            "in": "path",
            "name": "accountId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "gateGroupId",
            "in": "path",
            "name": "gateGroupId",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "gateId",
            "in": "path",
            "name": "gateId",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "items": {
                  "$ref": "#/components/schemas/GateQueueEvent"
                },
                "type": "array"
              }
            }
          },
          "description": "queueEvents",
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/GateQueueEvent"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "BearerAuth": []
          },
          {
            "BearerAuth": []
          }
        ],
        "summary": "Saves a list of gate queue events for a queue",
        "tags": [
          "Queue Events"
        ],
        "x-doc-level": "Public"
      }
    },
    "/voice/api/v1/admin/accounts/{accountId}/gateGroups/{gateGroupId}/gates/{gateId}/gateQueueEvents/{eventId}": {
      "delete": {
        "description": "Permissions: UPDATE on Gate (Override Permission Request)",
        "operationId": "deleteGateQueueEvent",
        "parameters": [
          {
            "description": "accountId",
            "in": "path",
            "name": "accountId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "gateGroupId",
            "in": "path",
            "name": "gateGroupId",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "gateId",
            "in": "path",
            "name": "gateId",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "eventId",
            "in": "path",
            "name": "eventId",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "BearerAuth": []
          },
          {
            "BearerAuth": []
          }
        ],
        "summary": "Deletes a gate queue event for a queue",
        "tags": [
          "Queue Events"
        ],
        "x-doc-level": "Public"
      },
      "get": {
        "description": "Permissions: READ on Gate",
        "operationId": "getGateQueueEvent",
        "parameters": [
          {
            "description": "accountId",
            "in": "path",
            "name": "accountId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "gateGroupId",
            "in": "path",
            "name": "gateGroupId",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "gateId",
            "in": "path",
            "name": "gateId",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "eventId",
            "in": "path",
            "name": "eventId",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GateQueueEvent"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "BearerAuth": []
          },
          {
            "BearerAuth": []
          }
        ],
        "summary": "Returns a single gate queue event for a queue",
        "tags": [
          "Queue Events"
        ],
        "x-doc-level": "Public"
      },
      "put": {
        "description": "Permissions: UPDATE on Gate",
        "operationId": "updateGateQueueEvent",
        "parameters": [
          {
            "description": "accountId",
            "in": "path",
            "name": "accountId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "gateGroupId",
            "in": "path",
            "name": "gateGroupId",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "gateId",
            "in": "path",
            "name": "gateId",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "eventId",
            "in": "path",
            "name": "eventId",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/GateQueueEvent"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GateQueueEvent"
                }
              }
            },
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "BearerAuth": []
          },
          {
            "BearerAuth": []
          }
        ],
        "summary": "Updates a single gate queue event for a queue",
        "tags": [
          "Queue Events"
        ],
        "x-doc-level": "Public"
      }
    },
    "/voice/api/v1/admin/accounts/{accountId}/gateGroups/{gateGroupId}/gates/{gateId}/gateQueueEvents/{eventId}/gateQueueDtmfEvents": {
      "get": {
        "description": "Permissions: READ on Gate",
        "operationId": "getGateQueueDtmfEventList",
        "parameters": [
          {
            "description": "accountId",
            "in": "path",
            "name": "accountId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "gateGroupId",
            "in": "path",
            "name": "gateGroupId",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "gateId",
            "in": "path",
            "name": "gateId",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "eventId",
            "in": "path",
            "name": "eventId",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/GateQueueDtmfEvent"
                  },
                  "type": "array"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "BearerAuth": []
          },
          {
            "BearerAuth": []
          }
        ],
        "summary": "Returns a listing of Gate Queue Dtmp Events for a Queue",
        "tags": [
          "Queue Events"
        ],
        "x-doc-level": "Public"
      },
      "post": {
        "description": "Permissions: UPDATE on Gate (Permission Override)",
        "operationId": "createGateQueueDtmfEvent",
        "parameters": [
          {
            "description": "accountId",
            "in": "path",
            "name": "accountId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "gateGroupId",
            "in": "path",
            "name": "gateGroupId",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "gateId",
            "in": "path",
            "name": "gateId",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "eventId",
            "in": "path",
            "name": "eventId",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/GateQueueDtmfEvent"
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GateQueueDtmfEvent"
                }
              }
            },
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "BearerAuth": []
          },
          {
            "BearerAuth": []
          }
        ],
        "summary": "Creates a new Gate Queue Dtmp Event",
        "tags": [
          "Queue Events"
        ],
        "x-doc-level": "Public"
      },
      "put": {
        "description": "Permissions: UPDATE on Gate",
        "operationId": "saveGateQueueDtmfEventList",
        "parameters": [
          {
            "description": "accountId",
            "in": "path",
            "name": "accountId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "gateGroupId",
            "in": "path",
            "name": "gateGroupId",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "gateId",
            "in": "path",
            "name": "gateId",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "eventId",
            "in": "path",
            "name": "eventId",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "items": {
                  "$ref": "#/components/schemas/GateQueueDtmfEvent"
                },
                "type": "array"
              }
            }
          },
          "description": "postPayload",
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/GateQueueDtmfEvent"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "BearerAuth": []
          },
          {
            "BearerAuth": []
          }
        ],
        "summary": "Updates a listing of Gate Queue Dtmp Events",
        "tags": [
          "Queue Events"
        ],
        "x-doc-level": "Public"
      }
    },
    "/voice/api/v1/admin/accounts/{accountId}/gateGroups/{gateGroupId}/gates/{gateId}/gateQueueEvents/{eventId}/gateQueueDtmfEvents/{dtmfEventId}": {
      "delete": {
        "description": "Permissions: UPDATE on Gate (Permission Override)",
        "operationId": "deleteGateQueueDtmfEvent",
        "parameters": [
          {
            "description": "dtmfEventId",
            "in": "path",
            "name": "dtmfEventId",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "BearerAuth": []
          },
          {
            "BearerAuth": []
          }
        ],
        "summary": "Deletes a Gate Queue Dtmp Event",
        "tags": [
          "Queue Events"
        ],
        "x-doc-level": "Public"
      },
      "get": {
        "description": "Permissions: READ on Gate",
        "operationId": "getGateQueueDtmfEvent",
        "parameters": [
          {
            "description": "accountId",
            "in": "path",
            "name": "accountId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "gateGroupId",
            "in": "path",
            "name": "gateGroupId",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "gateId",
            "in": "path",
            "name": "gateId",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "eventId",
            "in": "path",
            "name": "eventId",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "dtmfEventId",
            "in": "path",
            "name": "dtmfEventId",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GateQueueDtmfEvent"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "BearerAuth": []
          },
          {
            "BearerAuth": []
          }
        ],
        "summary": "Returns a single Gate Queue Dtmp Event",
        "tags": [
          "Queue Events"
        ],
        "x-doc-level": "Public"
      },
      "put": {
        "description": "Permissions: UPDATE on Gate",
        "operationId": "updateGateQueueDtmfEvent",
        "parameters": [
          {
            "description": "accountId",
            "in": "path",
            "name": "accountId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "gateGroupId",
            "in": "path",
            "name": "gateGroupId",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "gateId",
            "in": "path",
            "name": "gateId",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "eventId",
            "in": "path",
            "name": "eventId",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "dtmfEventId",
            "in": "path",
            "name": "dtmfEventId",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/GateQueueDtmfEvent"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GateQueueDtmfEvent"
                }
              }
            },
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "BearerAuth": []
          },
          {
            "BearerAuth": []
          }
        ],
        "summary": "Updates a single Gate Queue Dtmp Event",
        "tags": [
          "Queue Events"
        ],
        "x-doc-level": "Public"
      }
    },
    "/voice/api/v1/admin/accounts/{accountId}/gateGroups/{gateGroupId}/gates/{gateId}/moveToGroup": {
      "post": {
        "deprecated": true,
        "description": "Permissions: UPDATE on Gate and CREATE on new Gate Group (Permission Override)",
        "operationId": "moveGateToGroup",
        "parameters": [
          {
            "description": "accountId",
            "in": "path",
            "name": "accountId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "gateGroupId",
            "in": "path",
            "name": "gateGroupId",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "gateId",
            "in": "path",
            "name": "gateId",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "newGateGroupId",
            "in": "query",
            "name": "newGateGroupId",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "boolean"
                }
              }
            },
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "BearerAuth": []
          },
          {
            "BearerAuth": []
          }
        ],
        "summary": "Move an existing queue (AKA gate) to a new existing queue group",
        "tags": [
          "Queues"
        ],
        "x-doc-level": "Public"
      }
    },
    "/voice/api/v1/admin/accounts/{accountId}/gateGroups/{gateGroupId}/gates/{gateId}/phoneBookEntries": {
      "get": {
        "description": "Permissions: READ on Gate",
        "operationId": "getGatePhoneBookEntries",
        "parameters": [
          {
            "description": "accountId",
            "in": "path",
            "name": "accountId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "gateGroupId",
            "in": "path",
            "name": "gateGroupId",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "gateId",
            "in": "path",
            "name": "gateId",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "page",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "maxRows",
            "in": "query",
            "name": "maxRows",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/PhoneBookEntry"
                  },
                  "type": "array"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "BearerAuth": []
          },
          {
            "BearerAuth": []
          }
        ],
        "summary": "Returns all phone book entries for a queue (AKA gate)",
        "tags": [
          "Queue Phone Book"
        ],
        "x-doc-level": "Public"
      },
      "post": {
        "description": "Permissions: UPDATE on Gate (Permission Override)",
        "operationId": "create",
        "parameters": [
          {
            "description": "accountId",
            "in": "path",
            "name": "accountId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "gateGroupId",
            "in": "path",
            "name": "gateGroupId",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "gateId",
            "in": "path",
            "name": "gateId",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/PhoneBookEntry"
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PhoneBookEntry"
                }
              }
            },
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "BearerAuth": []
          },
          {
            "BearerAuth": []
          }
        ],
        "summary": "Creates a phone book entry for a queue (AKA gate)",
        "tags": [
          "Queue Phone Book"
        ],
        "x-doc-level": "Public"
      },
      "put": {
        "description": "Permissions: UPDATE on Gate",
        "operationId": "updateGatePhoneBookEntries",
        "parameters": [
          {
            "description": "accountId",
            "in": "path",
            "name": "accountId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "gateGroupId",
            "in": "path",
            "name": "gateGroupId",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "gateId",
            "in": "path",
            "name": "gateId",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "items": {
                  "$ref": "#/components/schemas/PhoneBookEntry"
                },
                "type": "array"
              }
            }
          },
          "description": "entries",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/PhoneBookEntry"
                  },
                  "type": "array"
                }
              }
            },
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "BearerAuth": []
          },
          {
            "BearerAuth": []
          }
        ],
        "summary": "Updates a listing of phone book entries for a queue (AKA gate)",
        "tags": [
          "Queue Phone Book"
        ],
        "x-doc-level": "Public"
      }
    },
    "/voice/api/v1/admin/accounts/{accountId}/gateGroups/{gateGroupId}/gates/{gateId}/phoneBookEntries/{entryId}": {
      "delete": {
        "description": "Permissions: UPDATE on Gate (Permission Override)",
        "operationId": "delete",
        "parameters": [
          {
            "description": "entryId",
            "in": "path",
            "name": "entryId",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "accountId",
            "in": "path",
            "name": "accountId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "gateGroupId",
            "in": "path",
            "name": "gateGroupId",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "gateId",
            "in": "path",
            "name": "gateId",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "BearerAuth": []
          },
          {
            "BearerAuth": []
          }
        ],
        "summary": "Deletes a single phone book entry for a queue (AKA gate)",
        "tags": [
          "Queue Phone Book"
        ],
        "x-doc-level": "Public"
      },
      "put": {
        "description": "Permissions: UPDATE on Gate",
        "operationId": "updatePhoneBookEntry",
        "parameters": [
          {
            "description": "accountId",
            "in": "path",
            "name": "accountId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "gateGroupId",
            "in": "path",
            "name": "gateGroupId",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "gateId",
            "in": "path",
            "name": "gateId",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "entryId",
            "in": "path",
            "name": "entryId",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/PhoneBookEntry"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PhoneBookEntry"
                }
              }
            },
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "BearerAuth": []
          },
          {
            "BearerAuth": []
          }
        ],
        "summary": "Updates a phone book entry for a queue (AKA gate)",
        "tags": [
          "Queue Phone Book"
        ],
        "x-doc-level": "Public"
      }
    },
    "/voice/api/v1/admin/accounts/{accountId}/gateGroups/{gateGroupId}/gates/{gateId}/requeueShortcuts": {
      "get": {
        "description": "Permissions: READ on Gate",
        "operationId": "getGateRequeueShortcutList",
        "parameters": [
          {
            "description": "accountId",
            "in": "path",
            "name": "accountId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "gateGroupId",
            "in": "path",
            "name": "gateGroupId",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "gateId",
            "in": "path",
            "name": "gateId",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/RequeueShortcut"
                  },
                  "type": "array"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "BearerAuth": []
          },
          {
            "BearerAuth": []
          }
        ],
        "summary": "Returns a listing of requeue shortcuts for a queue (AKA gate)",
        "tags": [
          "Requeue Shortcuts"
        ],
        "x-doc-level": "Public"
      },
      "post": {
        "description": "Permissions: UPDATE on Gate (Override Permission Request)",
        "operationId": "createGateRequeueShortcut",
        "parameters": [
          {
            "description": "accountId",
            "in": "path",
            "name": "accountId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "gateGroupId",
            "in": "path",
            "name": "gateGroupId",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "gateId",
            "in": "path",
            "name": "gateId",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequeueShortcut"
              }
            }
          },
          "description": "shortcut",
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequeueShortcut"
                }
              }
            },
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "BearerAuth": []
          },
          {
            "BearerAuth": []
          }
        ],
        "summary": "Updates a requeue shortcut for a queue (AKA gate)",
        "tags": [
          "Requeue Shortcuts"
        ],
        "x-doc-level": "Public"
      },
      "put": {
        "description": "Permissions: UPDATE on Gate",
        "operationId": "createGateRequeueShortcuts",
        "parameters": [
          {
            "description": "accountId",
            "in": "path",
            "name": "accountId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "gateGroupId",
            "in": "path",
            "name": "gateGroupId",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "gateId",
            "in": "path",
            "name": "gateId",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "items": {
                  "$ref": "#/components/schemas/RequeueShortcut"
                },
                "type": "array"
              }
            }
          },
          "description": "shortcuts",
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/RequeueShortcut"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "BearerAuth": []
          },
          {
            "BearerAuth": []
          }
        ],
        "summary": "Creates a list of requeue shortcuts for a queue (AKA gate)",
        "tags": [
          "Requeue Shortcuts"
        ],
        "x-doc-level": "Public"
      }
    },
    "/voice/api/v1/admin/accounts/{accountId}/gateGroups/{gateGroupId}/gates/{gateId}/requeueShortcuts/{requeueShortcutId}": {
      "delete": {
        "description": "Permissions: UPDATE on Gate (Permission Override)",
        "operationId": "deleteGateRequeueShortcut",
        "parameters": [
          {
            "description": "accountId",
            "in": "path",
            "name": "accountId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "gateGroupId",
            "in": "path",
            "name": "gateGroupId",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "gateId",
            "in": "path",
            "name": "gateId",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "requeueShortcutId",
            "in": "path",
            "name": "requeueShortcutId",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "boolean"
                }
              }
            },
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "BearerAuth": []
          },
          {
            "BearerAuth": []
          }
        ],
        "summary": "Returns a listing of requeue shortcuts for a queue (AKA gate)",
        "tags": [
          "Requeue Shortcuts"
        ],
        "x-doc-level": "Public"
      },
      "get": {
        "description": "Permissions: READ on Gate",
        "operationId": "getGateRequeueShortcut",
        "parameters": [
          {
            "description": "accountId",
            "in": "path",
            "name": "accountId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "gateGroupId",
            "in": "path",
            "name": "gateGroupId",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "gateId",
            "in": "path",
            "name": "gateId",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "requeueShortcutId",
            "in": "path",
            "name": "requeueShortcutId",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequeueShortcut"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "BearerAuth": []
          },
          {
            "BearerAuth": []
          }
        ],
        "summary": "Returns a requeue shortcut for a queue (AKA gate)",
        "tags": [
          "Requeue Shortcuts"
        ],
        "x-doc-level": "Public"
      },
      "put": {
        "description": "Permissions: UPDATE on Gate",
        "operationId": "updateGateRequeueShortcut",
        "parameters": [
          {
            "description": "accountId",
            "in": "path",
            "name": "accountId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "gateGroupId",
            "in": "path",
            "name": "gateGroupId",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "gateId",
            "in": "path",
            "name": "gateId",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "requeueShortcutId",
            "in": "path",
            "name": "requeueShortcutId",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequeueShortcut"
              }
            }
          },
          "description": "requeueShortcut",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequeueShortcut"
                }
              }
            },
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "BearerAuth": []
          },
          {
            "BearerAuth": []
          }
        ],
        "summary": "Updates a requeue shortcut for a queue (AKA gate)",
        "tags": [
          "Requeue Shortcuts"
        ],
        "x-doc-level": "Public"
      }
    },
    "/voice/api/v1/admin/accounts/{accountId}/gateGroups/{gateGroupId}/gates/{gateId}/scheduleOverrides": {
      "get": {
        "description": "Permissions: READ on Gate",
        "operationId": "getOverridesForGate",
        "parameters": [
          {
            "description": "accountId",
            "in": "path",
            "name": "accountId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "gateGroupId",
            "in": "path",
            "name": "gateGroupId",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "gateId",
            "in": "path",
            "name": "gateId",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/GateScheduleOverride"
                  },
                  "type": "array"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "BearerAuth": []
          },
          {
            "BearerAuth": []
          }
        ],
        "summary": "Returns a listing of schedule overrides for a queue (AKA gate)",
        "tags": [
          "Queue Schedule"
        ],
        "x-doc-level": "Public"
      },
      "post": {
        "description": "Permissions: UPDATE on Gate (Permission Override)",
        "operationId": "createGateScheduledOverride",
        "parameters": [
          {
            "description": "accountId",
            "in": "path",
            "name": "accountId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "gateGroupId",
            "in": "path",
            "name": "gateGroupId",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "gateId",
            "in": "path",
            "name": "gateId",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/GateScheduleOverride"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GateScheduleOverride"
                }
              }
            },
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "BearerAuth": []
          },
          {
            "BearerAuth": []
          }
        ],
        "summary": "Creates a schedule override for a queue (AKA gate)",
        "tags": [
          "Queue Schedule"
        ],
        "x-doc-level": "Public"
      },
      "put": {
        "description": "Permissions: UPDATE on Gate",
        "operationId": "saveList",
        "parameters": [
          {
            "description": "accountId",
            "in": "path",
            "name": "accountId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "gateGroupId",
            "in": "path",
            "name": "gateGroupId",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "gateId",
            "in": "path",
            "name": "gateId",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "items": {
                  "$ref": "#/components/schemas/GateScheduleOverride"
                },
                "type": "array"
              }
            }
          },
          "description": "scheduleOverrides",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/GateScheduleOverride"
                  },
                  "type": "array"
                }
              }
            },
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "BearerAuth": []
          },
          {
            "BearerAuth": []
          }
        ],
        "summary": "Saves a listing of schedule overrides for a queue (AKA gate)",
        "tags": [
          "Queue Schedule"
        ],
        "x-doc-level": "Public"
      }
    },
    "/voice/api/v1/admin/accounts/{accountId}/gateGroups/{gateGroupId}/gates/{gateId}/scheduleOverrides/{scheduleOverrideId}": {
      "delete": {
        "description": "Permissions: UPDATE on Gate (Permission Override)",
        "operationId": "deleteGateScheduledOverride",
        "parameters": [
          {
            "description": "accountId",
            "in": "path",
            "name": "accountId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "gateGroupId",
            "in": "path",
            "name": "gateGroupId",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "gateId",
            "in": "path",
            "name": "gateId",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "scheduleOverrideId",
            "in": "path",
            "name": "scheduleOverrideId",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "BearerAuth": []
          },
          {
            "BearerAuth": []
          }
        ],
        "summary": "Deletes a schedule override for a queue (AKA gate)",
        "tags": [
          "Queue Schedule"
        ],
        "x-doc-level": "Public"
      },
      "put": {
        "description": "Permissions: UPDATE on Gate",
        "operationId": "updateGateScheduledOverride",
        "parameters": [
          {
            "description": "accountId",
            "in": "path",
            "name": "accountId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "gateGroupId",
            "in": "path",
            "name": "gateGroupId",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "gateId",
            "in": "path",
            "name": "gateId",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "scheduleOverrideId",
            "in": "path",
            "name": "scheduleOverrideId",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/GateScheduleOverride"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GateScheduleOverride"
                }
              }
            },
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "BearerAuth": []
          },
          {
            "BearerAuth": []
          }
        ],
        "summary": "Updates a schedule override for a queue (AKA gate)",
        "tags": [
          "Queue Schedule"
        ],
        "x-doc-level": "Public"
      }
    },
    "/voice/api/v1/admin/accounts/{accountId}/gateGroups/{gateGroupId}/gates/{gateId}/setIsActive": {
      "put": {
        "description": "Permissions: UPDATE on Gate",
        "operationId": "setGateIsActive",
        "parameters": [
          {
            "description": "accountId",
            "in": "path",
            "name": "accountId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "gateGroupId",
            "in": "path",
            "name": "gateGroupId",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "gateId",
            "in": "path",
            "name": "gateId",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ActiveState_boolean_"
              }
            }
          },
          "description": "state",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "boolean"
                }
              }
            },
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "BearerAuth": []
          },
          {
            "BearerAuth": []
          }
        ],
        "summary": "Set queue (AKA gate) active state",
        "tags": [
          "Queues"
        ],
        "x-doc-level": "Public"
      }
    },
    "/voice/api/v1/admin/accounts/{accountId}/gateGroups/{gateGroupId}/gates/{gateId}/specialAnis": {
      "delete": {
        "description": "Permissions: UPDATE on Gate (Permission Override)",
        "operationId": "deleteSpecialAni",
        "parameters": [
          {
            "description": "accountId",
            "in": "path",
            "name": "accountId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "gateGroupId",
            "in": "path",
            "name": "gateGroupId",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "gateId",
            "in": "path",
            "name": "gateId",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "type",
            "in": "query",
            "name": "type",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "ani",
            "in": "query",
            "name": "ani",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "format": "int32",
                  "type": "integer"
                }
              }
            },
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "BearerAuth": []
          },
          {
            "BearerAuth": []
          }
        ],
        "summary": "Deletes a special ani for a queue (AKA gate)",
        "tags": [
          "Queue Special ANI"
        ],
        "x-doc-level": "Public"
      },
      "get": {
        "description": "Permissions: READ on Gate",
        "operationId": "getGateSpecialAniList",
        "parameters": [
          {
            "description": "accountId",
            "in": "path",
            "name": "accountId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "gateGroupId",
            "in": "path",
            "name": "gateGroupId",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "gateId",
            "in": "path",
            "name": "gateId",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "type",
            "in": "query",
            "name": "type",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "filter",
            "in": "query",
            "name": "filter",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "page",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "maxRows",
            "in": "query",
            "name": "maxRows",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/GateSpecialAni"
                  },
                  "type": "array"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "BearerAuth": []
          },
          {
            "BearerAuth": []
          }
        ],
        "summary": "Returns a listing of special anis for a queue (AKA gate)",
        "tags": [
          "Queue Special ANI"
        ],
        "x-doc-level": "Public"
      },
      "post": {
        "description": "Permissions: UPDATE on Gate (Permission Override)",
        "operationId": "createGateSpecialAni",
        "parameters": [
          {
            "description": "accountId",
            "in": "path",
            "name": "accountId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "gateGroupId",
            "in": "path",
            "name": "gateGroupId",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "gateId",
            "in": "path",
            "name": "gateId",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GateSpecialAni"
              }
            }
          },
          "description": "gateSpecialAni",
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GateSpecialAni"
                }
              }
            },
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "BearerAuth": []
          },
          {
            "BearerAuth": []
          }
        ],
        "summary": "Creates a special ani for a queue (AKA gate)",
        "tags": [
          "Queue Special ANI"
        ],
        "x-doc-level": "Public"
      }
    },
    "/voice/api/v1/admin/accounts/{accountId}/gateGroups/{gateGroupId}/gates/{gateId}/specialAnis/upload": {
      "post": {
        "description": "Permissions: UPDATE on Gate (Permission Override)",
        "operationId": "uploadSpecialAniList",
        "parameters": [
          {
            "description": "accountId",
            "in": "path",
            "name": "accountId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "gateGroupId",
            "in": "path",
            "name": "gateGroupId",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "gateId",
            "in": "path",
            "name": "gateId",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "operation",
            "in": "query",
            "name": "operation",
            "required": false,
            "schema": {
              "default": "APPEND",
              "type": "string"
            }
          },
          {
            "description": "type",
            "in": "query",
            "name": "type",
            "required": true,
            "schema": {
              "enum": [
                "S-ANI",
                "THROTTLE"
              ],
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "properties": {
                  "file": {
                    "description": "file",
                    "format": "binary",
                    "type": "string"
                  }
                },
                "required": [
                  "file"
                ],
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "format": "int32",
                  "type": "integer"
                }
              }
            },
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "BearerAuth": []
          },
          {
            "BearerAuth": []
          }
        ],
        "summary": "Uploads a special ani for a queue (AKA gate)",
        "tags": [
          "Queue Special ANI"
        ],
        "x-doc-level": "Public"
      }
    },
    "/voice/api/v1/admin/accounts/{accountId}/gateGroups/{gateGroupId}/gates/{gateId}/unassignAgent/{agentId}": {
      "delete": {
        "description": "Permissions: UPDATE on Gate (Permission Override), READ on agent",
        "operationId": "unassignAgentFromGate",
        "parameters": [
          {
            "description": "accountId",
            "in": "path",
            "name": "accountId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "gateGroupId",
            "in": "path",
            "name": "gateGroupId",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "gateId",
            "in": "path",
            "name": "gateId",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "agentId",
            "in": "path",
            "name": "agentId",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "format": "int32",
                  "type": "integer"
                }
              }
            },
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "BearerAuth": []
          },
          {
            "BearerAuth": []
          }
        ],
        "summary": "Unassigns a single agent from a queue (AKA gate)",
        "tags": [
          "Agents"
        ],
        "x-doc-level": "Public"
      }
    },
    "/voice/api/v1/admin/accounts/{accountId}/gateGroups/{gateGroupId}/skills": {
      "get": {
        "description": "Permissions: READ on Gate Group",
        "operationId": "getList",
        "parameters": [
          {
            "description": "accountId",
            "in": "path",
            "name": "accountId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "gateGroupId",
            "in": "path",
            "name": "gateGroupId",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/GateGroupSkill"
                  },
                  "type": "array"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "BearerAuth": []
          },
          {
            "BearerAuth": []
          }
        ],
        "summary": "Returns a listing of skills for a queue group (AKA gate group)",
        "tags": [
          "Queue Skills"
        ],
        "x-doc-level": "Public"
      },
      "post": {
        "description": "Permissions: UPDATE on Gate Group (Permission Override)",
        "operationId": "createGateGroupSkill",
        "parameters": [
          {
            "description": "accountId",
            "in": "path",
            "name": "accountId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "gateGroupId",
            "in": "path",
            "name": "gateGroupId",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/GateGroupSkill"
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GateGroupSkill"
                }
              }
            },
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "BearerAuth": []
          },
          {
            "BearerAuth": []
          }
        ],
        "summary": "Creates a skill for a queue group (AKA gate group)",
        "tags": [
          "Queue Skills"
        ],
        "x-doc-level": "Public"
      },
      "put": {
        "description": "Permissions: UPDATE on Gate Group",
        "operationId": "saveGateGroupSkillList",
        "parameters": [
          {
            "description": "accountId",
            "in": "path",
            "name": "accountId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "gateGroupId",
            "in": "path",
            "name": "gateGroupId",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "items": {
                  "$ref": "#/components/schemas/GateGroupSkill"
                },
                "type": "array"
              }
            }
          },
          "description": "skills",
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/GateGroupSkill"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "BearerAuth": []
          },
          {
            "BearerAuth": []
          }
        ],
        "summary": "Updates an existing list of skills for a queue group (AKA gate group)",
        "tags": [
          "Queue Skills"
        ],
        "x-doc-level": "Public"
      }
    },
    "/voice/api/v1/admin/accounts/{accountId}/gateGroups/{gateGroupId}/skills/{skillId}": {
      "delete": {
        "description": "Permissions: UPDATE on Gate Group (Permission Override)",
        "operationId": "deleteGateGroupSkill",
        "parameters": [
          {
            "description": "accountId",
            "in": "path",
            "name": "accountId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "gateGroupId",
            "in": "path",
            "name": "gateGroupId",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "skillId",
            "in": "path",
            "name": "skillId",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "boolean"
                }
              }
            },
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "BearerAuth": []
          },
          {
            "BearerAuth": []
          }
        ],
        "summary": "Deletes a skill for a queue group (AKA gate group)",
        "tags": [
          "Queue Skills"
        ],
        "x-doc-level": "Public"
      },
      "get": {
        "description": "Permissions: READ on Gate Group",
        "operationId": "getDetail",
        "parameters": [
          {
            "description": "accountId",
            "in": "path",
            "name": "accountId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "gateGroupId",
            "in": "path",
            "name": "gateGroupId",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "skillId",
            "in": "path",
            "name": "skillId",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GateGroupSkill"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "BearerAuth": []
          },
          {
            "BearerAuth": []
          }
        ],
        "summary": "Returns a skill for a queue group (AKA gate group)",
        "tags": [
          "Queue Skills"
        ],
        "x-doc-level": "Public"
      },
      "put": {
        "description": "Permissions: UPDATE on Gate Group",
        "operationId": "updateGateGroupSkill",
        "parameters": [
          {
            "description": "accountId",
            "in": "path",
            "name": "accountId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "gateGroupId",
            "in": "path",
            "name": "gateGroupId",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "skillId",
            "in": "path",
            "name": "skillId",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/GateGroupSkill"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GateGroupSkill"
                }
              }
            },
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "BearerAuth": []
          },
          {
            "BearerAuth": []
          }
        ],
        "summary": "Updates a skill for a queue group (AKA gate group)",
        "tags": [
          "Queue Skills"
        ],
        "x-doc-level": "Public"
      }
    },
    "/voice/api/v1/admin/token": {
      "get": {
        "description": "Permissions: Authenticated User",
        "operationId": "getApiTokensForLoggedInUser",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "BearerAuth": []
          },
          {
            "BearerAuth": []
          }
        ],
        "summary": "Retrieves all Api Tokens for AuthenticatedUser",
        "tags": [
          "Legacy Auth"
        ],
        "x-doc-level": "Public"
      },
      "post": {
        "description": "Permissions: Authenticated User",
        "operationId": "createApiTokenForLoggedInUser",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "BearerAuth": []
          },
          {
            "BearerAuth": []
          }
        ],
        "summary": "Creates a new 'Api Token' based AuthenticatedUser that does not expire",
        "tags": [
          "Legacy Auth"
        ],
        "x-doc-level": "Public"
      }
    },
    "/voice/api/v1/admin/token/{token}": {
      "delete": {
        "description": "Permissions: Anonymous User",
        "operationId": "removeApiToken",
        "parameters": [
          {
            "description": "token",
            "in": "path",
            "name": "token",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "BearerAuth": []
          },
          {
            "BearerAuth": []
          }
        ],
        "summary": "Removes an api token",
        "tags": [
          "Legacy Auth"
        ],
        "x-doc-level": "Public"
      }
    },
    "/voice/api/v1/admin/users": {
      "get": {
        "description": "Returns a listing of all users that a user has access to",
        "operationId": "getUsers",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/User"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Success"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Get Users",
        "tags": [
          "Users"
        ],
        "x-doc-level": "Public"
      }
    },
    "/voice/api/v1/auth/login": {
      "post": {
        "description": "Permissions: Anonymous User",
        "operationId": "doLogin",
        "parameters": [
          {
            "description": "username",
            "in": "query",
            "name": "username",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "password",
            "in": "query",
            "name": "password",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stayLoggedIn",
            "in": "query",
            "name": "stayLoggedIn",
            "required": false,
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/UserLoginView"
                  },
                  "type": "array"
                }
              }
            },
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "BearerAuth": []
          },
          {
            "BearerAuth": []
          }
        ],
        "summary": "Application login to authenticate and receive an X-Auth-Token",
        "tags": [
          "Legacy Auth"
        ],
        "x-doc-level": "Public"
      }
    }
  },
  "security": [
    {
      "ApiKeyAuth": []
    }
  ],
  "servers": [
    {
      "url": "https://engage.ringcentral.com"
    }
  ],
  "tags": [
    {
      "name": "Authentication"
    },
    {
      "name": "Password Reset"
    },
    {
      "name": "Token"
    },
    {
      "name": "OAuth"
    },
    {
      "name": "Active Calls"
    },
    {
      "name": "Agent Access"
    },
    {
      "name": "Agent Groups"
    },
    {
      "name": "Agents"
    },
    {
      "name": "Campaigns"
    },
    {
      "name": "Countries"
    },
    {
      "name": "Dial Groups"
    },
    {
      "name": "Leads"
    },
    {
      "name": "Legacy Auth"
    },
    {
      "name": "Outbound"
    },
    {
      "name": "Queue Dispositions"
    },
    {
      "name": "Queue Events"
    },
    {
      "name": "Queue Groups"
    },
    {
      "name": "Queue Phone Book"
    },
    {
      "name": "Queue Schedule"
    },
    {
      "name": "Queue Skills"
    },
    {
      "name": "Queue Special ANI"
    },
    {
      "name": "Queues"
    },
    {
      "name": "Requeue Shortcuts"
    },
    {
      "name": "RingCentral Auth"
    },
    {
      "name": "Users"
    }
  ],
  "x-tag-groups": [
    {
      "name": "Analytics",
      "popular": true,
      "tags": [
        "Reporting",
        "Real Time Reporting"
      ]
    },
    {
      "name": "Users",
      "popular": true,
      "tags": [
        "Agents",
        "Agent Groups",
        "Users"
      ]
    },
    {
      "name": "Routing",
      "popular": true,
      "tags": [
        "Queues",
        "Queue Groups",
        "Agent Access",
        "Queue Dispositions",
        "Queue Events",
        "Queue Phone Book",
        "Queue Skills",
        "Requeue Shortcuts",
        "Queue Schedule",
        "Queue Special ANI"
      ]
    },
    {
      "name": "Dialing",
      "popular": true,
      "tags": [
        "Active Calls",
        "Campaigns",
        "Campaign Groups",
        "Leads",
        "Dial Groups",
        "Outbound"
      ]
    },
    {
      "name": "Authentication",
      "popular": false,
      "tags": [
        "Authentication",
        "Password Reset",
        "Token",
        "OAuth",
        "RingCentral Auth",
        "Legacy Auth"
      ]
    },
    {
      "name": "Utilities",
      "popular": false,
      "tags": [
        "Countries"
      ]
    }
  ]
}