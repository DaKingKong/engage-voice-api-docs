{
  "components": {
    "schemas": {
      "AccessTokenUserDetails": {
        "properties": {
          "accessToken": {
            "type": "string"
          },
          "adminId": {
            "format": "int32",
            "type": "integer"
          },
          "adminUrl": {
            "type": "string"
          },
          "agentDetails": {
            "items": {
              "$ref": "#/components/schemas/AgentV2"
            },
            "type": "array"
          },
          "agentUrl": {
            "type": "string"
          },
          "iqUrl": {
            "type": "string"
          },
          "loginHashcode": {
            "type": "string"
          },
          "mainAccountId": {
            "type": "string"
          },
          "platformId": {
            "type": "string"
          },
          "port": {
            "format": "int32",
            "type": "integer"
          },
          "rcUser": {
            "$ref": "#/components/schemas/Contact"
          },
          "redirectUrl": {
            "type": "string"
          },
          "refreshToken": {
            "type": "string"
          },
          "ssoLogin": {
            "type": "boolean"
          },
          "tokenType": {
            "type": "string"
          }
        },
        "title": "AccessTokenUserDetails",
        "type": "object"
      },
      "Account": {
        "properties": {
          "accountId": {
            "type": "string"
          },
          "accountName": {
            "type": "string"
          },
          "archivedAccount": {
            "type": "boolean"
          },
          "audioRetentionDays": {
            "format": "int32",
            "type": "integer"
          },
          "concurrentLogins": {
            "format": "int32",
            "type": "integer"
          },
          "crmHost": {
            "type": "string"
          },
          "crmInstance": {
            "type": "string"
          },
          "crmPwd": {
            "type": "string"
          },
          "crmUid": {
            "type": "string"
          },
          "dataRetentionDays": {
            "format": "int32",
            "type": "integer"
          },
          "databaseShardId": {
            "type": "string"
          },
          "defaultCallerid": {
            "type": "string"
          },
          "defaultHold": {
            "type": "string"
          },
          "defaultIntellidialServerId": {
            "format": "int32",
            "type": "integer"
          },
          "defaultOutdialServerGroupId": {
            "format": "int32",
            "type": "integer"
          },
          "dncOrgId": {
            "type": "string"
          },
          "dncOrgIdConfirmed": {
            "type": "boolean"
          },
          "emailFromAddress": {
            "type": "string"
          },
          "enable247Dialing": {
            "type": "boolean"
          },
          "enableAgentRankRouting": {
            "type": "boolean"
          },
          "enableBlankCallerid": {
            "type": "boolean"
          },
          "enableCallEventTracking": {
            "type": "boolean"
          },
          "enableCellScrubbing": {
            "type": "boolean"
          },
          "enableCentralizedData": {
            "type": "boolean"
          },
          "enableChat": {
            "type": "boolean"
          },
          "enableCloudRouting": {
            "type": "boolean"
          },
          "enableCrmExport": {
            "type": "boolean"
          },
          "enableFifo": {
            "type": "boolean"
          },
          "enableGoodData": {
            "type": "boolean"
          },
          "enableHciDialer": {
            "type": "boolean"
          },
          "enableInbound": {
            "type": "boolean"
          },
          "enableIntlOutbound": {
            "type": "boolean"
          },
          "enableListLoading": {
            "type": "boolean"
          },
          "enableMultiuser": {
            "type": "boolean"
          },
          "enableOutbound": {
            "type": "boolean"
          },
          "enableOutboundPredictive": {
            "type": "boolean"
          },
          "enableScheduledTasks": {
            "type": "boolean"
          },
          "enableSoftphones": {
            "type": "boolean"
          },
          "enableTcpaSafeMachineDetect": {
            "type": "boolean"
          },
          "enableTracking": {
            "type": "boolean"
          },
          "enableVisualIvr": {
            "type": "boolean"
          },
          "enableVoiceBroadcast": {
            "type": "boolean"
          },
          "endDate": {
            "$ref": "#/components/schemas/DateTime"
          },
          "ftpHost": {
            "type": "string"
          },
          "ftpPwd": {
            "type": "string"
          },
          "ftpUid": {
            "type": "string"
          },
          "mainAccountId": {
            "type": "string"
          },
          "mainAccountName": {
            "type": "string"
          },
          "maxBreakTime": {
            "format": "int32",
            "type": "integer"
          },
          "maxLunchTime": {
            "format": "int32",
            "type": "integer"
          },
          "maxOutPortsPerAgent": {
            "format": "int32",
            "type": "integer"
          },
          "minimumSec": {
            "format": "int32",
            "type": "integer"
          },
          "notificationEmail": {
            "type": "string"
          },
          "offHookHold": {
            "type": "string"
          },
          "offHookWhisper": {
            "type": "string"
          },
          "offHookWhisperGhost": {
            "type": "string"
          },
          "offhookCallerid": {
            "type": "string"
          },
          "outboundManualDefaultRingtime": {
            "format": "int32",
            "type": "integer"
          },
          "outboundPrepay": {
            "type": "boolean"
          },
          "overrideDispositions": {
            "format": "int32",
            "type": "integer"
          },
          "pciCompliance": {
            "type": "boolean"
          },
          "pciComplianceRequest": {
            "type": "boolean"
          },
          "phoneRecordingPin": {
            "format": "int32",
            "type": "integer"
          },
          "primaryTimezone": {
            "format": "int32",
            "type": "integer"
          },
          "recordingAccessMode": {
            "enum": [
              "ANONYMOUS",
              "ACCOUNT",
              "RIGHTS_DOC",
              "DISABLED"
            ],
            "type": "string"
          },
          "recordingFilenameFormat": {
            "type": "string"
          },
          "recordingsDelivery": {
            "type": "string"
          },
          "rounding": {
            "format": "int32",
            "type": "integer"
          },
          "securityKey": {
            "type": "string"
          },
          "softphoneHost": {
            "type": "string"
          },
          "softphoneWsdl": {
            "type": "string"
          },
          "startDate": {
            "$ref": "#/components/schemas/DateTime"
          },
          "tcpaSafeMode": {
            "type": "boolean"
          },
          "usePowerBy": {
            "type": "boolean"
          },
          "weekOffset": {
            "format": "int32",
            "type": "integer"
          },
          "wfmType": {
            "enum": [
              "GENERIC",
              "GENERIC_UDP",
              "ASPECT",
              "AC2",
              "PIPKINS",
              "MONET",
              "NONE"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "AccountAuxState": {
        "properties": {
          "agentAuxState": {
            "type": "string"
          },
          "baseAgentState": {
            "$ref": "#/components/schemas/BaseAgentState"
          },
          "description": {
            "type": "string"
          },
          "isActive": {
            "type": "boolean"
          },
          "isAgentSelectable": {
            "type": "boolean"
          },
          "isRequired": {
            "type": "boolean"
          },
          "rank": {
            "format": "int32",
            "type": "integer"
          },
          "stateId": {
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "AccountView": {
        "properties": {
          "accountId": {
            "type": "string"
          },
          "accountName": {
            "type": "string"
          },
          "databaseShardId": {
            "type": "string"
          },
          "defaultIntellidialServerId": {
            "format": "int32",
            "type": "integer"
          },
          "defaultOutdialServerGroupId": {
            "format": "int32",
            "type": "integer"
          },
          "emailFromAddress": {
            "type": "string"
          },
          "enable247Dialing": {
            "type": "boolean"
          },
          "enableAgentRankRouting": {
            "type": "boolean"
          },
          "enableChat": {
            "type": "boolean"
          },
          "enableCloudRouting": {
            "type": "boolean"
          },
          "enableFifo": {
            "type": "boolean"
          },
          "enableGoodData": {
            "type": "boolean"
          },
          "enableHciDialer": {
            "type": "boolean"
          },
          "enableInbound": {
            "type": "boolean"
          },
          "enableMultiUser": {
            "type": "boolean"
          },
          "enableOutbound": {
            "type": "boolean"
          },
          "enableSoftphones": {
            "type": "boolean"
          },
          "enableTcpaSafeMachineDetect": {
            "type": "boolean"
          },
          "enableTracking": {
            "type": "boolean"
          },
          "enableVisualIvr": {
            "type": "boolean"
          },
          "enableVoiceBroadcast": {
            "type": "boolean"
          },
          "mainAccountId": {
            "type": "string"
          },
          "mainAccountName": {
            "type": "string"
          },
          "outboundPrepay": {
            "type": "boolean"
          },
          "tcpaSafeMode": {
            "type": "boolean"
          },
          "usePowerBy": {
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "AcdStats": {
        "properties": {
          "abandoned": {
            "format": "int32",
            "type": "integer"
          },
          "accepted": {
            "format": "int32",
            "type": "integer"
          },
          "accountId": {
            "type": "string"
          },
          "active": {
            "format": "int32",
            "type": "integer"
          },
          "available": {
            "format": "int32",
            "type": "integer"
          },
          "deflected": {
            "format": "int32",
            "type": "integer"
          },
          "gateGroupId": {
            "format": "int32",
            "type": "integer"
          },
          "gateId": {
            "format": "int32",
            "type": "integer"
          },
          "gateName": {
            "type": "string"
          },
          "groupName": {
            "type": "string"
          },
          "inQueue": {
            "format": "int32",
            "type": "integer"
          },
          "lastUpdate": {
            "$ref": "#/components/schemas/DateTime"
          },
          "longCall": {
            "format": "int32",
            "type": "integer"
          },
          "longestInQueue": {
            "format": "int32",
            "type": "integer"
          },
          "presented": {
            "format": "int32",
            "type": "integer"
          },
          "routing": {
            "format": "int32",
            "type": "integer"
          },
          "schedule": {
            "type": "string"
          },
          "scheduleOverride": {
            "type": "string"
          },
          "selectable": {
            "type": "boolean"
          },
          "shortAbandon": {
            "format": "int32",
            "type": "integer"
          },
          "shortCall": {
            "format": "int32",
            "type": "integer"
          },
          "slaFail": {
            "format": "int32",
            "type": "integer"
          },
          "slaPass": {
            "format": "int32",
            "type": "integer"
          },
          "staffed": {
            "format": "int32",
            "type": "integer"
          },
          "successDispositions": {
            "format": "int32",
            "type": "integer"
          },
          "totalAbandonTime": {
            "format": "int64",
            "type": "integer"
          },
          "totalAnswerTime": {
            "format": "int64",
            "type": "integer"
          },
          "totalQueueTime": {
            "format": "int64",
            "type": "integer"
          },
          "totalTalkTime": {
            "format": "int64",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "ActiveCall": {
        "properties": {
          "accountId": {
            "type": "string"
          },
          "agentFirstName": {
            "type": "string"
          },
          "agentLastName": {
            "type": "string"
          },
          "ani": {
            "type": "string"
          },
          "archive": {
            "type": "boolean"
          },
          "callState": {
            "type": "string"
          },
          "dequeueTime": {
            "type": "string"
          },
          "dnis": {
            "type": "string"
          },
          "enqueueTime": {
            "type": "string"
          },
          "uii": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "ActiveCallListResponse": {
        "properties": {
          "accountId": {
            "type": "string"
          },
          "agentFirstName": {
            "type": "string"
          },
          "agentLastName": {
            "type": "string"
          },
          "ani": {
            "type": "string"
          },
          "archive": {
            "type": "boolean"
          },
          "callState": {
            "type": "string"
          },
          "dequeueTime": {
            "type": "string"
          },
          "dnis": {
            "type": "string"
          },
          "enqueueTime": {
            "type": "string"
          },
          "uii": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "Agent": {
        "properties": {
          "accountAccess": {
            "$ref": "#/components/schemas/AgentAccountAccess"
          },
          "active": {
            "type": "boolean"
          },
          "agentAccountAccess": {
            "items": {
              "$ref": "#/components/schemas/AgentAccountAccess"
            },
            "type": "array"
          },
          "agentChatGroupAccess": {
            "items": {
              "$ref": "#/components/schemas/AgentChatGroupAccess"
            },
            "type": "array"
          },
          "agentChatQueueAccesses": {
            "$ref": "#/components/schemas/AgentChatQueueAccess"
          },
          "agentDialGroupMembers": {
            "$ref": "#/components/schemas/AgentDialGroupMember"
          },
          "agentGateAccess": {
            "$ref": "#/components/schemas/AgentGateAccess"
          },
          "agentGateGroupAccess": {
            "items": {
              "$ref": "#/components/schemas/AgentGateGroupAccess"
            },
            "type": "array"
          },
          "agentGroup": {
            "$ref": "#/components/schemas/AgentGroup"
          },
          "agentId": {
            "format": "int32",
            "type": "integer"
          },
          "agentLoadBalance": {
            "$ref": "#/components/schemas/AgentLoadBalanceMember"
          },
          "agentLoadBalanceMembers": {
            "$ref": "#/components/schemas/AgentLoadBalanceMember"
          },
          "agentRank": {
            "format": "int32",
            "type": "integer"
          },
          "agentSkillProfiles": {
            "$ref": "#/components/schemas/AgentSkillProfile"
          },
          "agentType": {
            "enum": [
              "AGENT",
              "SUPERVISOR",
              "MULTI_USER",
              "MULTI_SUPERVISOR"
            ],
            "type": "string"
          },
          "allowAgentReports": {
            "type": "boolean"
          },
          "allowAgentStats": {
            "type": "boolean"
          },
          "allowAutoAnswer": {
            "type": "boolean"
          },
          "allowBlended": {
            "type": "boolean"
          },
          "allowCallControl": {
            "type": "boolean"
          },
          "allowCampStats": {
            "type": "boolean"
          },
          "allowChat": {
            "type": "boolean"
          },
          "allowChatStats": {
            "type": "boolean"
          },
          "allowChatVoiceConcurrent": {
            "type": "boolean"
          },
          "allowCrossGateRequeue": {
            "type": "boolean"
          },
          "allowDirectAgentTransfer": {
            "enum": [
              "DIRECT_TRANSFER_DISABLED",
              "ALLOW_DIRECT_TRANSFER_TO_SAME_GROUP",
              "ALLOW_DIRECT_TRANSFER_TO_ANY_GROUP"
            ],
            "type": "string"
          },
          "allowEndcallforeveryone": {
            "type": "boolean"
          },
          "allowExternalChat": {
            "type": "boolean"
          },
          "allowFromIpAddresses": {
            "type": "string"
          },
          "allowGateStats": {
            "type": "boolean"
          },
          "allowHangup": {
            "type": "boolean"
          },
          "allowHistoricalDialing": {
            "type": "boolean"
          },
          "allowHold": {
            "type": "boolean"
          },
          "allowInbound": {
            "type": "boolean"
          },
          "allowInboundIntlTransfer": {
            "type": "boolean"
          },
          "allowLeadInserts": {
            "type": "boolean"
          },
          "allowLoginControl": {
            "type": "boolean"
          },
          "allowLoginUpdates": {
            "type": "boolean"
          },
          "allowManualCalls": {
            "type": "boolean"
          },
          "allowManualIntlCalls": {
            "type": "boolean"
          },
          "allowManualIntlTransfer": {
            "type": "boolean"
          },
          "allowManualOutboundGates": {
            "type": "boolean"
          },
          "allowManualPass": {
            "type": "boolean"
          },
          "allowOffHook": {
            "type": "boolean"
          },
          "allowOutbound": {
            "type": "boolean"
          },
          "allowRequeue": {
            "type": "boolean"
          },
          "allowTransfer": {
            "type": "boolean"
          },
          "altDefaultLoginDest": {
            "type": "string"
          },
          "createdOn": {
            "$ref": "#/components/schemas/DateTime"
          },
          "defaultAutoAnswerOn": {
            "type": "boolean"
          },
          "defaultLoginDest": {
            "type": "string"
          },
          "directAgentExtension": {
            "type": "string"
          },
          "disableSupervisorMonitoring": {
            "type": "boolean"
          },
          "email": {
            "type": "string"
          },
          "enableSoftphone": {
            "type": "boolean"
          },
          "externalAgentId": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "gatesControlAgentVisibility": {
            "type": "boolean"
          },
          "ghostRnaAction": {
            "type": "string"
          },
          "groupId": {
            "format": "int32",
            "type": "integer"
          },
          "initLoginBaseState": {
            "type": "string"
          },
          "initLoginBaseStateId": {
            "format": "int32",
            "type": "integer"
          },
          "isActive": {
            "type": "boolean"
          },
          "lastLoginDate": {
            "$ref": "#/components/schemas/DateTime"
          },
          "lastName": {
            "type": "string"
          },
          "loadBalanceEnabled": {
            "type": "boolean"
          },
          "location": {
            "type": "string"
          },
          "manualOutboundDefaultCallerId": {
            "type": "string"
          },
          "manualOutboundDefaultGate": {
            "$ref": "#/components/schemas/Gate"
          },
          "maxChats": {
            "format": "int32",
            "type": "integer"
          },
          "multiAccountAgent": {
            "type": "boolean"
          },
          "parentAgentId": {
            "format": "int32",
            "type": "integer"
          },
          "password": {
            "type": "string"
          },
          "permissions": {
            "items": {
              "enum": [
                "CREATE",
                "READ",
                "UPDATE",
                "DELETE",
                "REPORT"
              ],
              "type": "string"
            },
            "type": "array"
          },
          "phoneLoginDialGroup": {
            "$ref": "#/components/schemas/DialGroup"
          },
          "phoneLoginPin": {
            "type": "string"
          },
          "showLeadHistory": {
            "type": "boolean"
          },
          "sipSafeUsername": {
            "type": "string"
          },
          "softphoneId": {
            "format": "int32",
            "type": "integer"
          },
          "team": {
            "type": "string"
          },
          "transientAgent": {
            "type": "boolean"
          },
          "transientDelete": {
            "type": "boolean"
          },
          "transientDeleteDate": {
            "$ref": "#/components/schemas/DateTime"
          },
          "username": {
            "type": "string"
          },
          "whereSupervisee": {
            "items": {
              "$ref": "#/components/schemas/AgentSupervisor"
            },
            "type": "array"
          },
          "whereSupervisor": {
            "$ref": "#/components/schemas/AgentSupervisor"
          }
        },
        "type": "object"
      },
      "AgentAccountAccess": {
        "properties": {
          "account": {
            "$ref": "#/components/schemas/Account"
          },
          "accountId": {
            "type": "string"
          },
          "accountName": {
            "type": "string"
          },
          "agent": {
            "$ref": "#/components/schemas/Agent"
          },
          "agentId": {
            "format": "int32",
            "type": "integer"
          },
          "name": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "AgentChatGroupAccess": {
        "properties": {
          "agentId": {
            "format": "int32",
            "type": "integer"
          },
          "chatGroupId": {
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "AgentChatQueueAccess": {
        "properties": {
          "agentId": {
            "format": "int32",
            "type": "integer"
          },
          "chatQueue": {
            "$ref": "#/components/schemas/ChatQueue"
          },
          "chatQueueId": {
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "AgentDialGroupMember": {
        "properties": {
          "agentId": {
            "format": "int32",
            "type": "integer"
          },
          "dialGroupId": {
            "format": "int32",
            "type": "integer"
          },
          "hciClicker": {
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "AgentGateAccess": {
        "properties": {
          "agentId": {
            "format": "int32",
            "type": "integer"
          },
          "agentRank": {
            "format": "int32",
            "type": "integer"
          },
          "defaultDestOverride": {
            "type": "string"
          },
          "gateId": {
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "AgentGateGroupAccess": {
        "properties": {
          "agentId": {
            "format": "int32",
            "type": "integer"
          },
          "gateGroupId": {
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "AgentGroup": {
        "properties": {
          "agentGroupId": {
            "format": "int32",
            "type": "integer"
          },
          "agents": {
            "$ref": "#/components/schemas/CollectionAgent"
          },
          "groupName": {
            "type": "string"
          },
          "isDefault": {
            "type": "boolean"
          },
          "permissions": {
            "items": {
              "enum": [
                "CREATE",
                "READ",
                "UPDATE",
                "DELETE",
                "REPORT"
              ],
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "AgentLoadBalanceMember": {
        "properties": {
          "masterAgentId": {
            "format": "int32",
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "slaveAccountId": {
            "type": "string"
          },
          "slaveAgentId": {
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "AgentSkillProfile": {
        "properties": {
          "chatGroupSkills": {
            "items": {
              "$ref": "#/components/schemas/ChatGroupSkill"
            },
            "type": "array"
          },
          "createdOn": {
            "$ref": "#/components/schemas/DateTime"
          },
          "default": {
            "type": "boolean"
          },
          "gateGroupSkills": {
            "items": {
              "$ref": "#/components/schemas/GateGroupSkill"
            },
            "type": "array"
          },
          "groupSkills": {
            "items": {
              "$ref": "#/components/schemas/GateGroupSkill"
            },
            "type": "array"
          },
          "isDefault": {
            "type": "boolean"
          },
          "profileDesc": {
            "type": "string"
          },
          "profileId": {
            "format": "int32",
            "type": "integer"
          },
          "profileName": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "AgentStats": {
        "properties": {
          "accountId": {
            "type": "string"
          },
          "accountName": {
            "type": "string"
          },
          "agentChatState": {
            "type": "string"
          },
          "agentGroupId": {
            "format": "int32",
            "type": "integer"
          },
          "agentGroupName": {
            "type": "string"
          },
          "agentId": {
            "format": "int32",
            "type": "integer"
          },
          "agentLoginId": {
            "format": "int32",
            "type": "integer"
          },
          "agentLoginType": {
            "type": "string"
          },
          "agentPhone": {
            "type": "string"
          },
          "agentState": {
            "type": "string"
          },
          "agentType": {
            "type": "string"
          },
          "callAni": {
            "type": "string"
          },
          "callDnis": {
            "type": "string"
          },
          "callSource": {
            "type": "string"
          },
          "callSourceDesc": {
            "type": "string"
          },
          "callUii": {
            "type": "string"
          },
          "callsHandled": {
            "format": "int32",
            "type": "integer"
          },
          "campaignId": {
            "format": "int32",
            "type": "integer"
          },
          "chatsHandled": {
            "format": "int32",
            "type": "integer"
          },
          "currentChatCount": {
            "format": "int32",
            "type": "integer"
          },
          "email": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "gateId": {
            "format": "int32",
            "type": "integer"
          },
          "isDequeueAgent": {
            "format": "int32",
            "type": "integer"
          },
          "isGhostLogin": {
            "format": "int32",
            "type": "integer"
          },
          "isOffhook": {
            "format": "int32",
            "type": "integer"
          },
          "lastName": {
            "type": "string"
          },
          "lastUpdate": {
            "$ref": "#/components/schemas/DateTime"
          },
          "loginDialGroupId": {
            "format": "int32",
            "type": "integer"
          },
          "loginTime": {
            "format": "int32",
            "type": "integer"
          },
          "onHoldDts": {
            "$ref": "#/components/schemas/DateTime"
          },
          "pendingDisposition": {
            "format": "int32",
            "type": "integer"
          },
          "pendingDispositionTime": {
            "format": "int32",
            "type": "integer"
          },
          "profileName": {
            "type": "string"
          },
          "rna": {
            "format": "int32",
            "type": "integer"
          },
          "selectable": {
            "type": "boolean"
          },
          "stateTime": {
            "format": "int32",
            "type": "integer"
          },
          "successDispositions": {
            "format": "int32",
            "type": "integer"
          },
          "totalChatTime": {
            "format": "int32",
            "type": "integer"
          },
          "totalTalkTime": {
            "format": "int32",
            "type": "integer"
          },
          "username": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "AgentSupervisor": {
        "properties": {
          "agentId": {
            "format": "int32",
            "type": "integer"
          },
          "supervisorId": {
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "AgentV2": {
        "properties": {
          "accountId": {
            "type": "string"
          },
          "accountName": {
            "type": "string"
          },
          "agentGroupId": {
            "format": "int32",
            "type": "integer"
          },
          "agentId": {
            "format": "int32",
            "type": "integer"
          },
          "agentRank": {
            "format": "int32",
            "type": "integer"
          },
          "agentType": {
            "type": "string"
          },
          "allowLoginControl": {
            "type": "boolean"
          },
          "allowLoginUpdates": {
            "type": "boolean"
          },
          "altDefaultLoginDest": {
            "type": "string"
          },
          "directAgentExtension": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "enableSoftphone": {
            "type": "boolean"
          },
          "externalAgentId": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "ghostRnaAction": {
            "type": "string"
          },
          "initLoginBaseState": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "location": {
            "type": "string"
          },
          "manualOutboundDefaultCallerId": {
            "type": "string"
          },
          "maxChats": {
            "format": "int32",
            "type": "integer"
          },
          "password": {
            "type": "string"
          },
          "phoneLoginPin": {
            "type": "string"
          },
          "rcUserId": {
            "format": "int64",
            "type": "integer"
          },
          "team": {
            "type": "string"
          },
          "username": {
            "type": "string"
          }
        },
        "title": "AgentV2",
        "type": "object"
      },
      "ApplicationContext": {
        "properties": {
          "applicationName": {
            "type": "string"
          },
          "autowireCapableBeanFactory": {
            "$ref": "#/components/schemas/AutowireCapableBeanFactory"
          },
          "beanDefinitionCount": {
            "format": "int32",
            "type": "integer"
          },
          "beanDefinitionNames": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "classLoader": {
            "$ref": "#/components/schemas/ClassLoader"
          },
          "displayName": {
            "type": "string"
          },
          "environment": {
            "$ref": "#/components/schemas/Environment"
          },
          "id": {
            "type": "string"
          },
          "parent": {
            "$ref": "#/components/schemas/ApplicationContext"
          },
          "parentBeanFactory": {
            "$ref": "#/components/schemas/BeanFactory"
          },
          "startupDate": {
            "format": "int64",
            "type": "integer"
          }
        },
        "title": "ApplicationContext",
        "type": "object"
      },
      "AutowireCapableBeanFactory": {
        "title": "AutowireCapableBeanFactory",
        "type": "object"
      },
      "BaseAgentState": {
        "properties": {
          "colKey": {
            "type": "string"
          },
          "colLabel": {
            "type": "string"
          },
          "id": {
            "format": "int32",
            "type": "integer"
          },
          "isCore": {
            "type": "boolean"
          },
          "isRequired": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "BeanFactory": {
        "title": "BeanFactory",
        "type": "object"
      },
      "Blob": {
        "properties": {
          "binaryStream": {
            "$ref": "#/components/schemas/InputStream"
          }
        },
        "type": "object"
      },
      "CallerIdBucket": {
        "properties": {
          "accountId": {
            "type": "string"
          },
          "active": {
            "type": "boolean"
          },
          "bucketId": {
            "format": "int32",
            "type": "integer"
          },
          "bucketName": {
            "type": "string"
          },
          "bwOrderId": {
            "type": "string"
          },
          "callerIdBucketNumbers": {
            "items": {
              "$ref": "#/components/schemas/CallerIdBucketNumber"
            },
            "type": "array"
          },
          "callerIdName": {
            "type": "string"
          },
          "createDate": {
            "$ref": "#/components/schemas/DateTime"
          },
          "forwardingDid": {
            "type": "string"
          },
          "isActive": {
            "type": "boolean"
          },
          "orderStatus": {
            "enum": [
              "PENDING",
              "COMPLETE",
              "FAILED",
              "DISCONNECT"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "CallerIdBucketNumber": {
        "properties": {
          "city": {
            "type": "string"
          },
          "lat": {
            "format": "double",
            "type": "number"
          },
          "lon": {
            "format": "double",
            "type": "number"
          },
          "numberId": {
            "format": "int32",
            "type": "integer"
          },
          "state": {
            "type": "string"
          },
          "tnNumber": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "Campaign": {
        "properties": {
          "abandonMsg": {
            "type": "string"
          },
          "afterCallBaseState": {
            "type": "string"
          },
          "afterCallState": {
            "$ref": "#/components/schemas/AccountAuxState"
          },
          "agentConnectSoapService": {
            "$ref": "#/components/schemas/RemoteHttpService"
          },
          "agentPopMessage": {
            "type": "string"
          },
          "agentTermSoapService": {
            "$ref": "#/components/schemas/RemoteHttpService"
          },
          "allowLeadInserts": {
            "format": "byte",
            "type": "string"
          },
          "allowLeadUpdates": {
            "format": "byte",
            "type": "string"
          },
          "appUrl": {
            "type": "string"
          },
          "aux1Label": {
            "type": "string"
          },
          "aux2Label": {
            "type": "string"
          },
          "aux3Label": {
            "type": "string"
          },
          "aux4Label": {
            "type": "string"
          },
          "aux5Label": {
            "type": "string"
          },
          "billingCode": {
            "type": "string"
          },
          "callerId": {
            "type": "string"
          },
          "callerIdBucket": {
            "$ref": "#/components/schemas/CallerIdBucket"
          },
          "campaignDesc": {
            "type": "string"
          },
          "campaignDispositions": {
            "$ref": "#/components/schemas/CampaignDisposition"
          },
          "campaignFilterStates": {
            "$ref": "#/components/schemas/CampaignFilterStates"
          },
          "campaignFilterTimezones": {
            "$ref": "#/components/schemas/CampaignFilterTimezones"
          },
          "campaignId": {
            "format": "int32",
            "type": "integer"
          },
          "campaignName": {
            "type": "string"
          },
          "campaignPriority": {
            "format": "int32",
            "type": "integer"
          },
          "campaignRequeueShortcuts": {
            "$ref": "#/components/schemas/RequeueShortcut"
          },
          "campaignResultDest": {
            "$ref": "#/components/schemas/ResultFileDestination"
          },
          "campaignUnlimitedFieldGroup": {
            "$ref": "#/components/schemas/CampaignUnlimitedFieldGroup"
          },
          "campaignWhitelistTagMembers": {
            "$ref": "#/components/schemas/WhitelistTagMembers"
          },
          "countryId": {
            "type": "string"
          },
          "customDialZoneGroup": {
            "$ref": "#/components/schemas/CustomDialZoneGroups"
          },
          "dialGroup": {
            "$ref": "#/components/schemas/DialGroup"
          },
          "dialLoadedOrder": {
            "format": "int32",
            "type": "integer"
          },
          "dispositionTimeout": {
            "format": "int32",
            "type": "integer"
          },
          "dncScrubOption": {
            "enum": [
              "DO_NOT_SCRUB",
              "INTERNAL_AND_NATIONAL",
              "INTERNAL_ONLY",
              "CELLULAR_AND_INTERNAL",
              "CELLULAR_ONLY"
            ],
            "type": "string"
          },
          "enableGlobalPhoneBook": {
            "type": "boolean"
          },
          "endCallMsg": {
            "type": "string"
          },
          "endDate": {
            "$ref": "#/components/schemas/DateTime"
          },
          "exportFlag": {
            "type": "boolean"
          },
          "filterEnabled": {
            "format": "byte",
            "type": "string"
          },
          "filterType": {
            "type": "string"
          },
          "forceDialerRefresh": {
            "type": "boolean"
          },
          "friSched": {
            "type": "string"
          },
          "genericKeyValuePairs": {
            "type": "string"
          },
          "groupId": {
            "format": "int32",
            "type": "integer"
          },
          "hangupOnDisposition": {
            "format": "int32",
            "type": "integer"
          },
          "isActive": {
            "format": "int32",
            "type": "integer"
          },
          "lastPassDts": {
            "$ref": "#/components/schemas/Timestamp"
          },
          "liveAnswerMsg": {
            "type": "string"
          },
          "machAnswerMsg": {
            "type": "string"
          },
          "machineDetect": {
            "type": "boolean"
          },
          "maxDailyPasses": {
            "format": "int32",
            "type": "integer"
          },
          "maxDailyPassesInclude": {
            "type": "string"
          },
          "maxDialLimit": {
            "format": "int32",
            "type": "integer"
          },
          "maxPasses": {
            "format": "int32",
            "type": "integer"
          },
          "maxPassesExclude": {
            "type": "string"
          },
          "maxRingTime": {
            "format": "int32",
            "type": "integer"
          },
          "maxRingTimeTransfer": {
            "format": "int32",
            "type": "integer"
          },
          "minPredictiveCallsHistory": {
            "format": "int32",
            "type": "integer"
          },
          "monSched": {
            "type": "string"
          },
          "onHoldMsg": {
            "type": "string"
          },
          "passDelayMin": {
            "format": "int32",
            "type": "integer"
          },
          "pauseRecordingSec": {
            "format": "int32",
            "type": "integer"
          },
          "permissions": {
            "items": {
              "enum": [
                "CREATE",
                "READ",
                "UPDATE",
                "DELETE",
                "REPORT"
              ],
              "type": "string"
            },
            "type": "array"
          },
          "postCallSoapService": {
            "$ref": "#/components/schemas/RemoteHttpService"
          },
          "postDispSoapService": {
            "$ref": "#/components/schemas/RemoteHttpService"
          },
          "quotaGroup": {
            "$ref": "#/components/schemas/QuotaGroup"
          },
          "recordCall": {
            "format": "int32",
            "type": "integer"
          },
          "recordingInConference": {
            "type": "boolean"
          },
          "requeueType": {
            "enum": [
              "ADVANCED",
              "RESTRICTED"
            ],
            "type": "string"
          },
          "rescrubInterval": {
            "format": "int32",
            "type": "integer"
          },
          "satSched": {
            "type": "string"
          },
          "script": {
            "$ref": "#/components/schemas/Script"
          },
          "scrubDisconnectNoanswer": {
            "format": "byte",
            "type": "string"
          },
          "seedAbandonRate": {
            "format": "double",
            "type": "number"
          },
          "seedSuccessRate": {
            "format": "double",
            "type": "number"
          },
          "showLeadInfo": {
            "format": "int32",
            "type": "integer"
          },
          "showLeadPasses": {
            "type": "boolean"
          },
          "showListName": {
            "type": "boolean"
          },
          "startDate": {
            "$ref": "#/components/schemas/DateTime"
          },
          "stopRecordingOnTransfer": {
            "type": "boolean"
          },
          "sunSched": {
            "type": "string"
          },
          "survey": {
            "$ref": "#/components/schemas/Survey"
          },
          "surveyPopType": {
            "type": "string"
          },
          "targetAbandonRate": {
            "format": "double",
            "type": "number"
          },
          "thuSched": {
            "type": "string"
          },
          "trackSpeedToLead": {
            "format": "byte",
            "type": "string"
          },
          "transferCallerId": {
            "type": "string"
          },
          "transferTermSoapService": {
            "$ref": "#/components/schemas/RemoteHttpService"
          },
          "tueSched": {
            "type": "string"
          },
          "useGlobalWhitelist": {
            "type": "boolean"
          },
          "wedSched": {
            "type": "string"
          },
          "whisperMsg": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "CampaignDisposition": {
        "properties": {
          "campaign": {
            "$ref": "#/components/schemas/Campaign"
          },
          "contactForwarding": {
            "format": "byte",
            "type": "string"
          },
          "createCopy": {
            "type": "boolean"
          },
          "destCampaign": {
            "$ref": "#/components/schemas/Campaign"
          },
          "dispSoapService": {
            "$ref": "#/components/schemas/RemoteHttpService"
          },
          "disposition": {
            "type": "string"
          },
          "dispositionId": {
            "format": "int32",
            "type": "integer"
          },
          "dncTagLabel": {
            "type": "string"
          },
          "doNotCall": {
            "type": "boolean"
          },
          "dtmfMapping": {
            "type": "string"
          },
          "emailDestinations": {
            "type": "string"
          },
          "emailTemplate": {
            "$ref": "#/components/schemas/EmailTemplate"
          },
          "excludeAbandon": {
            "type": "boolean"
          },
          "isComplete": {
            "type": "boolean"
          },
          "isContact": {
            "type": "boolean"
          },
          "isDefault": {
            "type": "boolean"
          },
          "isDisabled": {
            "type": "boolean"
          },
          "isRequeued": {
            "format": "int32",
            "type": "integer"
          },
          "isSuccess": {
            "type": "boolean"
          },
          "mergeOriginal": {
            "type": "boolean"
          },
          "rank": {
            "format": "int32",
            "type": "integer"
          },
          "requeueDelay": {
            "format": "int32",
            "type": "integer"
          },
          "requireNote": {
            "type": "boolean"
          },
          "saveSurvey": {
            "type": "boolean"
          },
          "setAgentFlag": {
            "type": "boolean"
          },
          "termMessage": {
            "type": "string"
          },
          "timeout": {
            "format": "int32",
            "type": "integer"
          },
          "xfer": {
            "format": "byte",
            "type": "string"
          },
          "xferDest": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "CampaignFilterStates": {
        "properties": {
          "campaign": {
            "$ref": "#/components/schemas/Campaign"
          },
          "campaignId": {
            "format": "int32",
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "state": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "CampaignFilterTimezones": {
        "properties": {
          "campaign": {
            "$ref": "#/components/schemas/Campaign"
          },
          "campaignId": {
            "format": "int32",
            "type": "integer"
          },
          "timezone": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "CampaignLead": {
        "properties": {
          "address1": {
            "type": "string"
          },
          "address2": {
            "type": "string"
          },
          "agentDispostion": {
            "type": "string"
          },
          "auxData1": {
            "type": "string"
          },
          "auxData2": {
            "type": "string"
          },
          "auxData3": {
            "type": "string"
          },
          "auxData4": {
            "type": "string"
          },
          "auxData5": {
            "type": "string"
          },
          "auxExternalUrl": {
            "type": "string"
          },
          "auxGreeting": {
            "type": "string"
          },
          "auxPhone": {
            "type": "string"
          },
          "callerId": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "dupeKeyOverride": {
            "format": "int64",
            "type": "integer"
          },
          "email": {
            "type": "string"
          },
          "externId": {
            "type": "string"
          },
          "extraData": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "gateKeeper": {
            "type": "string"
          },
          "id": {
            "format": "int64",
            "type": "integer"
          },
          "lastName": {
            "type": "string"
          },
          "lastPassDispo": {
            "type": "string"
          },
          "leadId": {
            "format": "int64",
            "type": "integer"
          },
          "leadPasses": {
            "type": "integer"
          },
          "leadPhone": {
            "type": "string"
          },
          "leadState": {
            "type": "string"
          },
          "leadTimezone": {
            "type": "string"
          },
          "liveAnswerMessage": {
            "type": "string"
          },
          "loadedDts": {
            "description": "Date-time in Java format. Example: `2019-01-01T01:01:01.000+0000`. Note this is not compatible with RFC-3339 which is used by OpenAPI 3.0 Spec because it doesn't have a `:` between hours and minutes.",
            "type": "string"
          },
          "machAnswerMessage": {
            "type": "string"
          },
          "maxPasses": {
            "type": "integer"
          },
          "midName": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "nextDialTime": {
            "description": "Date-time in Java format. Example: `2019-01-01T01:01:01.000+0000`. Note this is not compatible with RFC-3339 which is used by OpenAPI 3.0 Spec because it doesn't have a `:` between hours and minutes.",
            "type": "string"
          },
          "sortCol": {
            "type": "string"
          },
          "speedToLeadAgentConn": {
            "type": "integer"
          },
          "speedToLeadFirstPass": {
            "type": "integer"
          },
          "state": {
            "type": "string"
          },
          "suffix": {
            "type": "string"
          },
          "suppressed": {
            "type": "boolean"
          },
          "title": {
            "type": "string"
          },
          "zip": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "CampaignLeadSearchCriteria": {
        "properties": {
          "address1": {
            "type": "string"
          },
          "address2": {
            "type": "string"
          },
          "agentDispositions": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "agentId": {
            "type": "integer"
          },
          "auxData1": {
            "type": "string"
          },
          "auxData2": {
            "type": "string"
          },
          "auxData3": {
            "type": "string"
          },
          "auxData4": {
            "type": "string"
          },
          "auxData5": {
            "type": "string"
          },
          "callerId": {
            "type": "string"
          },
          "campaignIds": {
            "items": {
              "type": "integer"
            },
            "type": "array"
          },
          "city": {
            "type": "string"
          },
          "emailAddress": {
            "type": "string"
          },
          "externIds": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "lastPassTimeCriteria": {
            "$ref": "#/components/schemas/DateTimeComparableSearchField"
          },
          "leadIds": {
            "items": {
              "type": "integer"
            },
            "type": "array"
          },
          "leadPassesCriteria": {
            "$ref": "#/components/schemas/ComparableSearchField"
          },
          "leadPhoneNum": {
            "type": "string"
          },
          "leadPhoneNumbers": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "leadTimezones": {
            "$ref": "#/components/schemas/Timezone"
          },
          "listIds": {
            "items": {
              "type": "integer"
            },
            "type": "array"
          },
          "loadedDtsEnd": {
            "description": "Date-time in Java format. Example: `2019-01-01T01:01:01.000+0000`. Note this is not compatible with RFC-3339 which is used by OpenAPI 3.0 Spec because it doesn't have a `:` between hours and minutes.",
            "type": "string"
          },
          "loadedDtsStart": {
            "description": "Date-time in Java format. Example: `2019-01-01T01:01:01.000+0000`. Note this is not compatible with RFC-3339 which is used by OpenAPI 3.0 Spec because it doesn't have a `:` between hours and minutes.",
            "type": "string"
          },
          "nextDialTimeCriteria": {
            "$ref": "#/components/schemas/DateTimeComparableSearchField"
          },
          "orphanedLeadsOnly": {
            "type": "boolean"
          },
          "pendingAgentId": {
            "type": "integer"
          },
          "physicalStates": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "zip": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "CampaignLeadSearchResultsView": {
        "properties": {
          "address1": {
            "type": "string"
          },
          "address2": {
            "type": "string"
          },
          "agentDispostion": {
            "type": "string"
          },
          "auxData1": {
            "type": "string"
          },
          "auxData2": {
            "type": "string"
          },
          "auxData3": {
            "type": "string"
          },
          "auxData4": {
            "type": "string"
          },
          "auxData5": {
            "type": "string"
          },
          "auxExternalUrl": {
            "type": "string"
          },
          "auxGreeting": {
            "type": "string"
          },
          "auxPhone": {
            "type": "string"
          },
          "callerId": {
            "type": "string"
          },
          "campaignId": {
            "type": "integer"
          },
          "campaignLead": {
            "$ref": "#/components/schemas/CampaignLead"
          },
          "campaignName": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "dialGroupId": {
            "type": "integer"
          },
          "dupeKeyOverride": {
            "format": "int64",
            "type": "integer"
          },
          "email": {
            "type": "string"
          },
          "externId": {
            "type": "string"
          },
          "extraData": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "gateKeeper": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "lastPassAgentName": {
            "type": "string"
          },
          "lastPassDate": {
            "description": "Date-time in Java format. Example: `2019-01-01T01:01:01.000+0000`. Note this is not compatible with RFC-3339 which is used by OpenAPI 3.0 Spec because it doesn't have a `:` between hours and minutes.",
            "type": "string"
          },
          "lastPassDispo": {
            "type": "string"
          },
          "lastPassDisposition": {
            "type": "string"
          },
          "lastPassDts": {
            "description": "Date-time in Java format. Example: `2019-01-01T01:01:01.000+0000`. Note this is not compatible with RFC-3339 which is used by OpenAPI 3.0 Spec because it doesn't have a `:` between hours and minutes.",
            "type": "string"
          },
          "leadId": {
            "format": "int64",
            "type": "integer"
          },
          "leadPasses": {
            "type": "integer"
          },
          "leadPhone": {
            "type": "string"
          },
          "leadState": {
            "type": "string"
          },
          "leadTimezone": {
            "type": "string"
          },
          "listDesc": {
            "type": "string"
          },
          "listId": {
            "type": "integer"
          },
          "liveAnswerMessage": {
            "type": "string"
          },
          "loadedDts": {
            "description": "Date-time in Java format. Example: `2019-01-01T01:01:01.000+0000`. Note this is not compatible with RFC-3339 which is used by OpenAPI 3.0 Spec because it doesn't have a `:` between hours and minutes.",
            "type": "string"
          },
          "machAnswerMessage": {
            "type": "string"
          },
          "maxPasses": {
            "type": "integer"
          },
          "midName": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "nextDialTime": {
            "description": "Date-time in Java format. Example: `2019-01-01T01:01:01.000+0000`. Note this is not compatible with RFC-3339 which is used by OpenAPI 3.0 Spec because it doesn't have a `:` between hours and minutes.",
            "type": "string"
          },
          "pendingAgentName": {
            "type": "string"
          },
          "sortCol": {
            "type": "string"
          },
          "speedToLeadAgentConn": {
            "type": "integer"
          },
          "speedToLeadFirstPass": {
            "type": "integer"
          },
          "state": {
            "type": "string"
          },
          "stateDts": {
            "description": "Date-time in Java format. Example: `2019-01-01T01:01:01.000+0000`. Note this is not compatible with RFC-3339 which is used by OpenAPI 3.0 Spec because it doesn't have a `:` between hours and minutes.",
            "type": "string"
          },
          "suffix": {
            "type": "string"
          },
          "suppressed": {
            "type": "boolean"
          },
          "title": {
            "type": "string"
          },
          "uploadDate": {
            "description": "Date-time in Java format. Example: `2019-01-01T01:01:01.000+0000`. Note this is not compatible with RFC-3339 which is used by OpenAPI 3.0 Spec because it doesn't have a `:` between hours and minutes.",
            "type": "string"
          },
          "uploadedBy": {
            "type": "string"
          },
          "zip": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "CampaignUnlimitedFieldGroup": {
        "properties": {
          "campaigns": {
            "items": {
              "$ref": "#/components/schemas/Campaign"
            },
            "type": "array"
          },
          "extraDataMappings": {
            "type": "string"
          },
          "groupName": {
            "type": "string"
          },
          "unlimitedFieldGroupId": {
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "ChatGroup": {
        "properties": {
          "billingKey": {
            "type": "string"
          },
          "chatGroupId": {
            "format": "int32",
            "type": "integer"
          },
          "chatGroupSkills": {
            "items": {
              "$ref": "#/components/schemas/ChatGroupSkill"
            },
            "type": "array"
          },
          "chatGroups": {
            "items": {
              "$ref": "#/components/schemas/ChatQueue"
            },
            "type": "array"
          },
          "chatQueues": {
            "items": {
              "$ref": "#/components/schemas/ChatQueue"
            },
            "type": "array"
          },
          "createdOn": {
            "$ref": "#/components/schemas/DateTime"
          },
          "groupName": {
            "type": "string"
          },
          "permissions": {
            "items": {
              "enum": [
                "CREATE",
                "READ",
                "UPDATE",
                "DELETE",
                "REPORT"
              ],
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ChatGroupSkill": {
        "properties": {
          "active": {
            "type": "boolean"
          },
          "agentSkillProfiles": {
            "$ref": "#/components/schemas/AgentSkillProfile"
          },
          "chatRequeueShortcuts": {
            "items": {
              "$ref": "#/components/schemas/ChatRequeueShortcut"
            },
            "type": "array"
          },
          "createdOn": {
            "$ref": "#/components/schemas/DateTime"
          },
          "permissions": {
            "items": {
              "enum": [
                "CREATE",
                "READ",
                "UPDATE",
                "DELETE",
                "REPORT"
              ],
              "type": "string"
            },
            "type": "array"
          },
          "skillDesc": {
            "type": "string"
          },
          "skillId": {
            "format": "int32",
            "type": "integer"
          },
          "skillName": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "ChatPriorityGroup": {
        "properties": {
          "chatPriorityGroupId": {
            "format": "int32",
            "type": "integer"
          },
          "chatQueues": {
            "items": {
              "$ref": "#/components/schemas/ChatQueue"
            },
            "type": "array"
          },
          "priorityGroupName": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "ChatQueue": {
        "properties": {
          "account": {
            "$ref": "#/components/schemas/Account"
          },
          "accountId": {
            "type": "string"
          },
          "active": {
            "type": "boolean"
          },
          "agentConnectHttpService": {
            "$ref": "#/components/schemas/RemoteHttpService"
          },
          "agentConnectMsg": {
            "type": "string"
          },
          "agentFrom": {
            "type": "string"
          },
          "agentMaxAcceptTime": {
            "format": "int32",
            "type": "integer"
          },
          "agentTermHttpService": {
            "$ref": "#/components/schemas/RemoteHttpService"
          },
          "agentWrapTime": {
            "format": "int32",
            "type": "integer"
          },
          "appUrl": {
            "type": "string"
          },
          "callbackCampaign": {
            "$ref": "#/components/schemas/Campaign"
          },
          "chatGroup": {
            "$ref": "#/components/schemas/ChatGroup"
          },
          "chatPriorityGroup": {
            "$ref": "#/components/schemas/ChatPriorityGroup"
          },
          "chatQueueDescription": {
            "type": "string"
          },
          "chatQueueId": {
            "format": "int32",
            "type": "integer"
          },
          "chatQueueName": {
            "type": "string"
          },
          "chatQueueOpen": {
            "type": "boolean"
          },
          "clientFrom": {
            "type": "string"
          },
          "companyLogo": {
            "$ref": "#/components/schemas/Blob"
          },
          "createdOn": {
            "$ref": "#/components/schemas/DateTime"
          },
          "dequeueHttpService": {
            "$ref": "#/components/schemas/RemoteHttpService"
          },
          "dispTimeout": {
            "format": "int32",
            "type": "integer"
          },
          "friSched": {
            "type": "string"
          },
          "gateQueueAnips": {
            "items": {
              "$ref": "#/components/schemas/ChatQueueAnip"
            },
            "type": "array"
          },
          "groupId": {
            "format": "int32",
            "type": "integer"
          },
          "idleTimeout": {
            "format": "int32",
            "type": "integer"
          },
          "isActive": {
            "type": "boolean"
          },
          "longChatTime": {
            "format": "int32",
            "type": "integer"
          },
          "maxQueueEvent": {
            "type": "string"
          },
          "maxQueueLimit": {
            "format": "int32",
            "type": "integer"
          },
          "monSched": {
            "type": "string"
          },
          "newChatHttpService": {
            "$ref": "#/components/schemas/RemoteHttpService"
          },
          "noAgentEvent": {
            "type": "string"
          },
          "observeDst": {
            "type": "boolean"
          },
          "permissions": {
            "items": {
              "enum": [
                "CREATE",
                "READ",
                "UPDATE",
                "DELETE",
                "REPORT"
              ],
              "type": "string"
            },
            "type": "array"
          },
          "postChatHttpService": {
            "$ref": "#/components/schemas/RemoteHttpService"
          },
          "postDispHttpService": {
            "$ref": "#/components/schemas/RemoteHttpService"
          },
          "queuePriority": {
            "format": "int32",
            "type": "integer"
          },
          "requeueShortcutAccess": {
            "items": {
              "$ref": "#/components/schemas/ChatRequeueShortcutGroupChatQueueAccess"
            },
            "type": "array"
          },
          "requeueType": {
            "type": "string"
          },
          "requireCaptcha": {
            "type": "boolean"
          },
          "satSched": {
            "type": "string"
          },
          "script": {
            "$ref": "#/components/schemas/Script"
          },
          "shortChatTime": {
            "format": "int32",
            "type": "integer"
          },
          "slaTime": {
            "format": "int32",
            "type": "integer"
          },
          "smsQueueClosedEvent": {
            "type": "string"
          },
          "specialIpEvent": {
            "type": "string"
          },
          "sunSched": {
            "type": "string"
          },
          "surveyId": {
            "format": "int32",
            "type": "integer"
          },
          "surveyPopType": {
            "type": "string"
          },
          "throttleCalls": {
            "format": "int32",
            "type": "integer"
          },
          "throttleDays": {
            "format": "int32",
            "type": "integer"
          },
          "throttleIpEvent": {
            "type": "string"
          },
          "thuSched": {
            "type": "string"
          },
          "tueSched": {
            "type": "string"
          },
          "wedSched": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "ChatQueueAnip": {
        "properties": {
          "anip": {
            "type": "string"
          },
          "chatQueueId": {
            "format": "int32",
            "type": "integer"
          },
          "dateAdded": {
            "$ref": "#/components/schemas/DateTime"
          },
          "recordType": {
            "type": "string"
          },
          "type": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "ChatRequeueShortcut": {
        "properties": {
          "chatGroupSkill": {
            "$ref": "#/components/schemas/ChatGroupSkill"
          },
          "chatRequeueShortcutId": {
            "format": "int32",
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "rank": {
            "format": "int32",
            "type": "integer"
          },
          "requeueGroup": {
            "$ref": "#/components/schemas/ChatGroup"
          },
          "requeueQueue": {
            "$ref": "#/components/schemas/ChatQueue"
          }
        },
        "type": "object"
      },
      "ChatRequeueShortcutGroup": {
        "properties": {
          "chatRequeueShortcutGroupId": {
            "format": "int32",
            "type": "integer"
          },
          "name": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "ChatRequeueShortcutGroupChatQueueAccess": {
        "properties": {
          "chatQueue": {
            "$ref": "#/components/schemas/ChatQueue"
          },
          "chatQueueId": {
            "format": "int32",
            "type": "integer"
          },
          "chatRequeueShortcutGroup": {
            "$ref": "#/components/schemas/ChatRequeueShortcutGroup"
          },
          "chatRequeueShortcutGroupId": {
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "ChatStats": {
        "properties": {
          "abandoned": {
            "format": "int32",
            "type": "integer"
          },
          "accepted": {
            "format": "int32",
            "type": "integer"
          },
          "accountId": {
            "type": "string"
          },
          "active": {
            "format": "int32",
            "type": "integer"
          },
          "available": {
            "format": "int32",
            "type": "integer"
          },
          "chatQueueGroupId": {
            "format": "int32",
            "type": "integer"
          },
          "chatQueueGroupName": {
            "type": "string"
          },
          "chatQueueId": {
            "format": "int32",
            "type": "integer"
          },
          "chatQueueName": {
            "type": "string"
          },
          "deflected": {
            "format": "int32",
            "type": "integer"
          },
          "inQueue": {
            "format": "int32",
            "type": "integer"
          },
          "lastUpdate": {
            "$ref": "#/components/schemas/DateTime"
          },
          "longestInQueue": {
            "format": "int32",
            "type": "integer"
          },
          "presented": {
            "format": "int32",
            "type": "integer"
          },
          "routing": {
            "format": "int32",
            "type": "integer"
          },
          "schedule": {
            "type": "string"
          },
          "scheduleOverride": {
            "type": "string"
          },
          "selectable": {
            "type": "boolean"
          },
          "staffed": {
            "format": "int32",
            "type": "integer"
          },
          "totalAbandonTime": {
            "format": "int64",
            "type": "integer"
          },
          "totalAnswerTime": {
            "format": "int64",
            "type": "integer"
          },
          "totalChatTime": {
            "format": "int64",
            "type": "integer"
          },
          "totalQueueTime": {
            "format": "int64",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "Chronology": {
        "properties": {
          "zone": {
            "$ref": "#/components/schemas/DateTimeZone"
          }
        },
        "type": "object"
      },
      "ClassLoader": {
        "properties": {
          "parent": {
            "$ref": "#/components/schemas/ClassLoader"
          }
        },
        "title": "ClassLoader",
        "type": "object"
      },
      "CollectionAgent": {
        "type": "object"
      },
      "ComparableSearchField": {
        "properties": {
          "operator": {
            "description": "Values can be `\u003e`, `\u003c` and `=`",
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "Contact": {
        "properties": {
          "businessPhone": {
            "type": "string"
          },
          "company": {
            "type": "string"
          },
          "department": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "emailAsLoginName": {
            "type": "boolean"
          },
          "firstName": {
            "type": "string"
          },
          "jobTitle": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "mobilePhone": {
            "type": "string"
          }
        },
        "title": "Contact",
        "type": "object"
      },
      "Country": {
        "properties": {
          "countryCode": {
            "type": "string"
          },
          "countryId": {
            "description": "Country code i ISO 3166-1 alpha-3 format",
            "type": "string"
          },
          "countryName": {
            "type": "string"
          },
          "maxAniLength": {
            "format": "int32",
            "type": "integer"
          },
          "maxUtcOffset": {
            "format": "int32",
            "type": "integer"
          },
          "minAniLength": {
            "format": "int32",
            "type": "integer"
          },
          "minUtcOffset": {
            "format": "int32",
            "type": "integer"
          }
        },
        "required": [
          "countryCode"
        ],
        "type": "object"
      },
      "CustomDialZone": {
        "properties": {
          "fridaySchedule": {
            "type": "string"
          },
          "mondaySchedule": {
            "type": "string"
          },
          "saturdaySchedule": {
            "type": "string"
          },
          "sundaySchedule": {
            "type": "string"
          },
          "thursdaySchedule": {
            "type": "string"
          },
          "tuesdaySchedule": {
            "type": "string"
          },
          "wednesdaySchedule": {
            "type": "string"
          },
          "zoneDesc": {
            "type": "string"
          },
          "zoneGroup": {
            "$ref": "#/components/schemas/CustomDialZoneGroups"
          },
          "zoneGroups": {
            "$ref": "#/components/schemas/CustomDialZoneGroups"
          },
          "zoneId": {
            "format": "int32",
            "type": "integer"
          },
          "zoneKey": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "CustomDialZoneGroups": {
        "properties": {
          "accountId": {
            "type": "string"
          },
          "baseTimezone": {
            "type": "string"
          },
          "customDialZones": {
            "$ref": "#/components/schemas/CustomDialZone"
          },
          "zoneGroupId": {
            "format": "int32",
            "type": "integer"
          },
          "zoneGroupName": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "DateTime": {
        "properties": {
          "afterNow": {
            "type": "boolean"
          },
          "beforeNow": {
            "type": "boolean"
          },
          "centuryOfEra": {
            "format": "int32",
            "type": "integer"
          },
          "chronology": {
            "$ref": "#/components/schemas/Chronology"
          },
          "dayOfMonth": {
            "format": "int32",
            "type": "integer"
          },
          "dayOfWeek": {
            "format": "int32",
            "type": "integer"
          },
          "dayOfYear": {
            "format": "int32",
            "type": "integer"
          },
          "equalNow": {
            "type": "boolean"
          },
          "era": {
            "format": "int32",
            "type": "integer"
          },
          "hourOfDay": {
            "format": "int32",
            "type": "integer"
          },
          "millis": {
            "format": "int64",
            "type": "integer"
          },
          "millisOfDay": {
            "format": "int32",
            "type": "integer"
          },
          "millisOfSecond": {
            "format": "int32",
            "type": "integer"
          },
          "minuteOfDay": {
            "format": "int32",
            "type": "integer"
          },
          "minuteOfHour": {
            "format": "int32",
            "type": "integer"
          },
          "monthOfYear": {
            "format": "int32",
            "type": "integer"
          },
          "secondOfDay": {
            "format": "int32",
            "type": "integer"
          },
          "secondOfMinute": {
            "format": "int32",
            "type": "integer"
          },
          "weekOfWeekyear": {
            "format": "int32",
            "type": "integer"
          },
          "weekyear": {
            "format": "int32",
            "type": "integer"
          },
          "year": {
            "format": "int32",
            "type": "integer"
          },
          "yearOfCentury": {
            "format": "int32",
            "type": "integer"
          },
          "yearOfEra": {
            "format": "int32",
            "type": "integer"
          },
          "zone": {
            "$ref": "#/components/schemas/DateTimeZone"
          }
        },
        "type": "object"
      },
      "DateTimeComparableSearchField": {
        "properties": {
          "operator": {
            "description": "Values can be `\u003e`, `\u003c` and `=`",
            "type": "string"
          },
          "value": {
            "format": "date-time",
            "type": "string"
          }
        },
        "type": "object"
      },
      "DateTimeField": {
        "properties": {
          "durationField": {
            "$ref": "#/components/schemas/DurationField"
          },
          "leapDurationField": {
            "$ref": "#/components/schemas/DurationField"
          },
          "lenient": {
            "type": "boolean"
          },
          "maximumValue": {
            "format": "int32",
            "type": "integer"
          },
          "minimumValue": {
            "format": "int32",
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "rangeDurationField": {
            "$ref": "#/components/schemas/DurationField"
          },
          "supported": {
            "type": "boolean"
          },
          "type": {
            "$ref": "#/components/schemas/DateTimeFieldType"
          }
        },
        "type": "object"
      },
      "DateTimeFieldType": {
        "properties": {
          "durationType": {
            "$ref": "#/components/schemas/DurationFieldType"
          },
          "name": {
            "type": "string"
          },
          "rangeDurationType": {
            "$ref": "#/components/schemas/DurationFieldType"
          }
        },
        "type": "object"
      },
      "DateTimeZone": {
        "properties": {
          "fixed": {
            "type": "boolean"
          },
          "id": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "DestinationParams": {
        "properties": {
          "isCompress": {
            "type": "boolean"
          },
          "titleDateTimeFormat": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "DialGroup": {
        "properties": {
          "agentDialGroupMembers": {
            "$ref": "#/components/schemas/AgentDialGroupMember"
          },
          "agentsReady": {
            "format": "int32",
            "type": "integer"
          },
          "allowLeadSearch": {
            "type": "string"
          },
          "allowPreviewLeadFilters": {
            "type": "boolean"
          },
          "billingKey": {
            "type": "string"
          },
          "campaigns": {
            "$ref": "#/components/schemas/Campaign"
          },
          "dialGroupDesc": {
            "type": "string"
          },
          "dialGroupId": {
            "format": "int32",
            "type": "integer"
          },
          "dialGroupName": {
            "type": "string"
          },
          "dialMode": {
            "enum": [
              "PREVIEW",
              "CLICK_TO_TALK",
              "PREDICTIVE",
              "POWER",
              "TCPA_SAFE_MODE"
            ],
            "type": "string"
          },
          "enableAbsolutePriority": {
            "type": "boolean"
          },
          "enableAgentFilter": {
            "type": "boolean"
          },
          "enableCallbacksAfterMaxDailyPass": {
            "type": "boolean"
          },
          "enableCallbacksAfterMaxpass": {
            "type": "boolean"
          },
          "enableListPriority": {
            "type": "boolean"
          },
          "groupId": {
            "format": "int32",
            "type": "integer"
          },
          "hciEnabled": {
            "enum": [
              "DISABLED",
              "HCI_FETCH",
              "HCI_PACING"
            ],
            "type": "string"
          },
          "isActive": {
            "type": "boolean"
          },
          "maxLeadsReturned": {
            "format": "int32",
            "type": "integer"
          },
          "maxPorts": {
            "format": "int32",
            "type": "integer"
          },
          "minPredictiveAgents": {
            "format": "int32",
            "type": "integer"
          },
          "outdialServerGroupId": {
            "format": "int32",
            "type": "integer"
          },
          "permissions": {
            "items": {
              "enum": [
                "CREATE",
                "READ",
                "UPDATE",
                "DELETE",
                "REPORT"
              ],
              "type": "string"
            },
            "type": "array"
          },
          "progressiveCallDelay": {
            "format": "int32",
            "type": "integer"
          },
          "progressiveEnabled": {
            "type": "boolean"
          },
          "realTimeAgentData": {
            "type": "boolean"
          },
          "requireFetchedLeadsCalled": {
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "DurationField": {
        "properties": {
          "name": {
            "type": "string"
          },
          "precise": {
            "type": "boolean"
          },
          "supported": {
            "type": "boolean"
          },
          "type": {
            "$ref": "#/components/schemas/DurationFieldType"
          },
          "unitMillis": {
            "format": "int64",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "DurationFieldType": {
        "properties": {
          "name": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "EmailTemplate": {
        "properties": {
          "accountId": {
            "type": "string"
          },
          "allowBccChange": {
            "type": "boolean"
          },
          "allowBodyChange": {
            "type": "boolean"
          },
          "allowCcChange": {
            "type": "boolean"
          },
          "allowFromChange": {
            "type": "boolean"
          },
          "allowSubjectChange": {
            "type": "boolean"
          },
          "allowToChange": {
            "type": "boolean"
          },
          "emailBcc": {
            "type": "string"
          },
          "emailCc": {
            "type": "string"
          },
          "emailFrom": {
            "type": "string"
          },
          "emailRte": {
            "type": "string"
          },
          "emailSubject": {
            "type": "string"
          },
          "emailTemplateId": {
            "format": "int32",
            "type": "integer"
          },
          "emailTo": {
            "type": "string"
          },
          "sendFormat": {
            "type": "string"
          },
          "templateName": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "Environment": {
        "properties": {
          "activeProfiles": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "defaultProfiles": {
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "title": "Environment",
        "type": "object"
      },
      "Error": {
        "properties": {
          "details": {
            "type": "string"
          },
          "generalMessage": {
            "type": "string"
          },
          "requestUri": {
            "type": "string"
          },
          "timestamp": {
            "format": "int64",
            "type": "integer"
          }
        }
      },
      "ExtendedLeadData": {
        "properties": {
          "important": {
            "type": "string"
          },
          "interested": {
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "Gate": {
        "properties": {
          "abandonCampaign": {
            "$ref": "#/components/schemas/Campaign"
          },
          "acceptTime": {
            "format": "byte",
            "type": "string"
          },
          "afterCallBaseState": {
            "type": "string"
          },
          "afterCallState": {
            "$ref": "#/components/schemas/AccountAuxState"
          },
          "agentConnSoapService": {
            "$ref": "#/components/schemas/RemoteHttpService"
          },
          "agentGateAccess": {
            "items": {
              "$ref": "#/components/schemas/AgentGateAccess"
            },
            "type": "array"
          },
          "agentPopMessage": {
            "type": "string"
          },
          "agentTermSoapService": {
            "$ref": "#/components/schemas/RemoteHttpService"
          },
          "appUrl": {
            "type": "string"
          },
          "backupAppUrl": {
            "type": "string"
          },
          "billingCode": {
            "type": "string"
          },
          "blockedAniMessage": {
            "type": "string"
          },
          "callbackCampaign": {
            "$ref": "#/components/schemas/Campaign"
          },
          "createdOn": {
            "$ref": "#/components/schemas/DateTime"
          },
          "dequeueDelay": {
            "format": "int32",
            "type": "integer"
          },
          "dequeueSoapService": {
            "$ref": "#/components/schemas/RemoteHttpService"
          },
          "dispositionTimeout": {
            "format": "int32",
            "type": "integer"
          },
          "enableGlobalPhoneBook": {
            "type": "boolean"
          },
          "enableIvrTokens": {
            "type": "boolean"
          },
          "endCallMessage": {
            "type": "string"
          },
          "fifoDisabled": {
            "type": "boolean"
          },
          "friSched": {
            "type": "string"
          },
          "gateClosedEvent": {
            "type": "string"
          },
          "gateDesc": {
            "type": "string"
          },
          "gateGroup": {
            "$ref": "#/components/schemas/GateGroup"
          },
          "gateId": {
            "format": "int32",
            "type": "integer"
          },
          "gateName": {
            "type": "string"
          },
          "gateOpen": {
            "type": "boolean"
          },
          "gatePriority": {
            "format": "int32",
            "type": "integer"
          },
          "gatePriorityGroup": {
            "$ref": "#/components/schemas/GatePriorityGroup"
          },
          "gateQueueEvents": {
            "items": {
              "$ref": "#/components/schemas/GateQueueEvent"
            },
            "type": "array"
          },
          "hangupOnDisposition": {
            "type": "boolean"
          },
          "isActive": {
            "type": "boolean"
          },
          "longCallTime": {
            "format": "int32",
            "type": "integer"
          },
          "manualCallerId": {
            "type": "string"
          },
          "maxQueueEvent": {
            "type": "string"
          },
          "maxQueueLimit": {
            "format": "int32",
            "type": "integer"
          },
          "monSched": {
            "type": "string"
          },
          "noAgentEvent": {
            "type": "string"
          },
          "observeDst": {
            "type": "boolean"
          },
          "onHoldMessage": {
            "type": "string"
          },
          "outboundCallerId": {
            "type": "string"
          },
          "pauseRecordingSec": {
            "format": "int32",
            "type": "integer"
          },
          "permissions": {
            "items": {
              "enum": [
                "CREATE",
                "READ",
                "UPDATE",
                "DELETE",
                "REPORT"
              ],
              "type": "string"
            },
            "type": "array"
          },
          "postCallSoapService": {
            "$ref": "#/components/schemas/RemoteHttpService"
          },
          "postDispSoapService": {
            "$ref": "#/components/schemas/RemoteHttpService"
          },
          "recordCall": {
            "format": "int32",
            "type": "integer"
          },
          "recordingInConference": {
            "type": "boolean"
          },
          "requeueType": {
            "enum": [
              "ADVANCED",
              "RESTRICTED"
            ],
            "type": "string"
          },
          "resultFileDestination": {
            "$ref": "#/components/schemas/ResultFileDestination"
          },
          "revMatch": {
            "type": "boolean"
          },
          "satSched": {
            "type": "string"
          },
          "script": {
            "$ref": "#/components/schemas/Script"
          },
          "shortAbandonTime": {
            "format": "int32",
            "type": "integer"
          },
          "shortCallTime": {
            "format": "int32",
            "type": "integer"
          },
          "slaTime": {
            "format": "int32",
            "type": "integer"
          },
          "specialAniEvent": {
            "type": "string"
          },
          "stopRecordingOnTransfer": {
            "type": "boolean"
          },
          "sunSched": {
            "type": "string"
          },
          "survey": {
            "$ref": "#/components/schemas/Survey"
          },
          "surveyPopType": {
            "type": "string"
          },
          "syncQueueWait": {
            "format": "int32",
            "type": "integer"
          },
          "throttleCalls": {
            "format": "int32",
            "type": "integer"
          },
          "throttleDays": {
            "format": "int32",
            "type": "integer"
          },
          "throttlingAniEvent": {
            "type": "string"
          },
          "thuSched": {
            "type": "string"
          },
          "transferCallerId": {
            "type": "string"
          },
          "transferTermSoapService": {
            "$ref": "#/components/schemas/RemoteHttpService"
          },
          "ttAccept": {
            "type": "boolean"
          },
          "tueSched": {
            "type": "string"
          },
          "wedSched": {
            "type": "string"
          },
          "whisperMessage": {
            "type": "string"
          },
          "wrapTime": {
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "GateGroup": {
        "properties": {
          "billingKey": {
            "type": "string"
          },
          "createdOn": {
            "$ref": "#/components/schemas/DateTime"
          },
          "endDate": {
            "$ref": "#/components/schemas/DateTime"
          },
          "gateGroupId": {
            "format": "int32",
            "type": "integer"
          },
          "gates": {
            "items": {
              "$ref": "#/components/schemas/Gate"
            },
            "type": "array"
          },
          "groupName": {
            "type": "string"
          },
          "groupSkills": {
            "items": {
              "$ref": "#/components/schemas/GateGroupSkill"
            },
            "type": "array"
          },
          "permissions": {
            "items": {
              "enum": [
                "CREATE",
                "READ",
                "UPDATE",
                "DELETE",
                "REPORT"
              ],
              "type": "string"
            },
            "type": "array"
          },
          "startDate": {
            "$ref": "#/components/schemas/DateTime"
          }
        },
        "type": "object"
      },
      "GateGroupSkill": {
        "properties": {
          "active": {
            "type": "boolean"
          },
          "agentSkillProfiles": {
            "$ref": "#/components/schemas/AgentSkillProfile"
          },
          "createdOn": {
            "$ref": "#/components/schemas/DateTime"
          },
          "requeueShortcut": {
            "items": {
              "$ref": "#/components/schemas/RequeueShortcut"
            },
            "type": "array"
          },
          "skillDesc": {
            "type": "string"
          },
          "skillId": {
            "format": "int32",
            "type": "integer"
          },
          "skillName": {
            "type": "string"
          },
          "whisperAudio": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "GatePriorityGroup": {
        "properties": {
          "gatePriorityGroupId": {
            "format": "int32",
            "type": "integer"
          },
          "gatePriorityGroupName": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "GateQueueEvent": {
        "properties": {
          "enableDtmf": {
            "format": "byte",
            "type": "string"
          },
          "eventDuration": {
            "format": "int32",
            "type": "integer"
          },
          "eventId": {
            "format": "int32",
            "type": "integer"
          },
          "eventRank": {
            "format": "int32",
            "type": "integer"
          },
          "gate": {
            "$ref": "#/components/schemas/Gate"
          },
          "queueEvent": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "Generic": {
        "properties": {
          "description": {
            "type": "string"
          },
          "id": {
            "format": "int64",
            "type": "integer"
          }
        }
      },
      "InputStream": {
        "type": "object"
      },
      "IvrStats": {
        "properties": {
          "accountId": {
            "type": "string"
          },
          "active": {
            "format": "int32",
            "type": "integer"
          },
          "connected": {
            "format": "int32",
            "type": "integer"
          },
          "ivrGroupId": {
            "format": "int32",
            "type": "integer"
          },
          "ivrGroupName": {
            "type": "string"
          },
          "lastUpdate": {
            "$ref": "#/components/schemas/DateTime"
          },
          "presented": {
            "format": "int32",
            "type": "integer"
          },
          "selectable": {
            "type": "boolean"
          },
          "transferCloud": {
            "format": "int32",
            "type": "integer"
          },
          "transferGate": {
            "format": "int32",
            "type": "integer"
          },
          "transferTrac": {
            "format": "int32",
            "type": "integer"
          },
          "visualIvrId": {
            "format": "int32",
            "type": "integer"
          },
          "visualIvrName": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "Lead": {
        "properties": {
          "address1": {
            "type": "string"
          },
          "address2": {
            "type": "string"
          },
          "auxData1": {
            "type": "string"
          },
          "auxData2": {
            "type": "string"
          },
          "auxData3": {
            "type": "string"
          },
          "auxData4": {
            "type": "string"
          },
          "auxData5": {
            "type": "string"
          },
          "auxPhone": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "extendedLeadData": {
            "$ref": "#/components/schemas/ExtendedLeadData"
          },
          "externId": {
            "format": "int64",
            "type": "integer"
          },
          "firstName": {
            "type": "string"
          },
          "gateKeeper": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "leadPhone": {
            "description": "multiple values can be submitted with a pipe delimiter between phone numbers",
            "type": "string"
          },
          "midName": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "suffix": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "zip": {
            "type": "string"
          }
        },
        "required": [
          "externId"
        ],
        "type": "object"
      },
      "LocalTime": {
        "properties": {
          "chronology": {
            "$ref": "#/components/schemas/Chronology"
          },
          "fieldTypes": {
            "items": {
              "$ref": "#/components/schemas/DateTimeFieldType"
            },
            "type": "array"
          },
          "fields": {
            "items": {
              "$ref": "#/components/schemas/DateTimeField"
            },
            "type": "array"
          },
          "hourOfDay": {
            "format": "int32",
            "type": "integer"
          },
          "millisOfDay": {
            "format": "int32",
            "type": "integer"
          },
          "millisOfSecond": {
            "format": "int32",
            "type": "integer"
          },
          "minuteOfHour": {
            "format": "int32",
            "type": "integer"
          },
          "secondOfMinute": {
            "format": "int32",
            "type": "integer"
          },
          "values": {
            "items": {
              "format": "int32",
              "type": "integer"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "OutboundStats": {
        "properties": {
          "abandon": {
            "format": "int32",
            "type": "integer"
          },
          "accountId": {
            "type": "string"
          },
          "active": {
            "format": "int32",
            "type": "integer"
          },
          "answer": {
            "format": "int32",
            "type": "integer"
          },
          "available": {
            "format": "int32",
            "type": "integer"
          },
          "busy": {
            "format": "int32",
            "type": "integer"
          },
          "campaignId": {
            "format": "int32",
            "type": "integer"
          },
          "campaignName": {
            "type": "string"
          },
          "complete": {
            "format": "int32",
            "type": "integer"
          },
          "connects": {
            "format": "int32",
            "type": "integer"
          },
          "dialGroupId": {
            "format": "int32",
            "type": "integer"
          },
          "dialGroupName": {
            "type": "string"
          },
          "dnc": {
            "format": "int32",
            "type": "integer"
          },
          "fax": {
            "format": "int32",
            "type": "integer"
          },
          "intercept": {
            "format": "int32",
            "type": "integer"
          },
          "lastUpdate": {
            "$ref": "#/components/schemas/DateTime"
          },
          "machine": {
            "format": "int32",
            "type": "integer"
          },
          "noanswer": {
            "format": "int32",
            "type": "integer"
          },
          "notHumanAnswers": {
            "format": "int32",
            "type": "integer"
          },
          "other": {
            "format": "int32",
            "type": "integer"
          },
          "pending": {
            "format": "int32",
            "type": "integer"
          },
          "ready": {
            "format": "int32",
            "type": "integer"
          },
          "selectable": {
            "type": "boolean"
          },
          "staffed": {
            "format": "int32",
            "type": "integer"
          },
          "successDispositions": {
            "format": "int32",
            "type": "integer"
          },
          "totalTalkTime": {
            "format": "int64",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "QuotaGroup": {
        "properties": {
          "active": {
            "type": "boolean"
          },
          "campaigns": {
            "$ref": "#/components/schemas/Campaign"
          },
          "isActive": {
            "type": "boolean"
          },
          "quotaGroupId": {
            "format": "int32",
            "type": "integer"
          },
          "quotaGroupName": {
            "type": "string"
          },
          "quotaTargets": {
            "$ref": "#/components/schemas/QuotaTarget"
          }
        },
        "type": "object"
      },
      "QuotaTarget": {
        "properties": {
          "clientMetadata": {
            "type": "string"
          },
          "criteriaJs": {
            "type": "string"
          },
          "currentCount": {
            "format": "int32",
            "type": "integer"
          },
          "quotaGroup": {
            "$ref": "#/components/schemas/QuotaGroup"
          },
          "quotaMetOn": {
            "$ref": "#/components/schemas/DateTime"
          },
          "quotaTargetId": {
            "format": "int32",
            "type": "integer"
          },
          "targetCount": {
            "format": "int32",
            "type": "integer"
          },
          "targetName": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "RedirectView": {
        "properties": {
          "applicationContext": {
            "$ref": "#/components/schemas/ApplicationContext"
          },
          "attributesMap": {
            "type": "object"
          },
          "beanName": {
            "type": "string"
          },
          "contentType": {
            "type": "string"
          },
          "exposePathVariables": {
            "type": "boolean"
          },
          "hosts": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "propagateQueryProperties": {
            "type": "boolean"
          },
          "redirectView": {
            "type": "boolean"
          },
          "requestContextAttribute": {
            "type": "string"
          },
          "staticAttributes": {
            "type": "object"
          },
          "url": {
            "type": "string"
          }
        },
        "title": "RedirectView",
        "type": "object"
      },
      "RemoteHttpService": {
        "properties": {
          "accountId": {
            "type": "string"
          },
          "enableMappings": {
            "type": "boolean"
          },
          "httpPassword": {
            "type": "string"
          },
          "httpServiceConfig": {
            "type": "string"
          },
          "httpUsername": {
            "type": "string"
          },
          "isDebug": {
            "type": "boolean"
          },
          "isEnabled": {
            "type": "boolean"
          },
          "permissions": {
            "items": {
              "enum": [
                "CREATE",
                "READ",
                "UPDATE",
                "DELETE",
                "REPORT"
              ],
              "type": "string"
            },
            "type": "array"
          },
          "returntype": {
            "type": "string"
          },
          "sendAllSurveyData": {
            "type": "boolean"
          },
          "serviceDescription": {
            "type": "string"
          },
          "serviceId": {
            "format": "int32",
            "type": "integer"
          },
          "serviceType": {
            "enum": [
              "SOAP",
              "HTTP_POST",
              "HTTP_GET"
            ],
            "type": "string"
          },
          "soapAction": {
            "type": "string"
          },
          "soapEndpoint": {
            "type": "string"
          },
          "soapOperationname": {
            "type": "string"
          },
          "soapPortname": {
            "type": "string"
          },
          "soapServicename": {
            "type": "string"
          },
          "targetNamespace": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "ReportCriteria": {
        "properties": {
          "accountId": {
            "type": "string"
          },
          "criteriaType": {
            "enum": [
              "DIALER_RESULT_DOWNLOAD_CRITERIA",
              "GLOBAL_CALL_TYPE_CRITERIA",
              "IVR_DETAIL_CRITERIA",
              "TFN_DID_MANAGER_CRITERIA",
              "ALL_CALLS_CRITERIA",
              "CASPER_CRITERIA"
            ],
            "type": "string"
          },
          "databaseTimezone": {
            "type": "string"
          },
          "endDate": {
            "$ref": "#/components/schemas/DateTime"
          },
          "endDateRange": {
            "$ref": "#/components/schemas/TimeRange"
          },
          "scheduleTimezoneName": {
            "type": "string"
          },
          "startDate": {
            "$ref": "#/components/schemas/DateTime"
          },
          "startDateRange": {
            "$ref": "#/components/schemas/TimeRange"
          },
          "timezoneName": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "ReportParams": {
        "properties": {
          "accountId": {
            "type": "string"
          },
          "compressReport": {
            "type": "boolean"
          },
          "delimiter": {
            "enum": [
              "PIPE",
              "COMMA",
              "TAB",
              "EXCEL",
              "HTML"
            ],
            "type": "string"
          },
          "destination": {
            "$ref": "#/components/schemas/DestinationParams"
          },
          "maxRows": {
            "format": "int32",
            "type": "integer"
          },
          "reportCriteria": {
            "$ref": "#/components/schemas/ReportCriteria"
          },
          "reportName": {
            "type": "string"
          },
          "reportType": {
            "enum": [
              "DIALER_RESULT_DOWNLOAD",
              "GLOBAL_CALL_TYPE_EXCEL",
              "GLOBAL_CALL_TYPE_DELIMITED",
              "ALL_CALLS",
              "IVR_DETAIL",
              "TFN_DID_MANAGER_SUPERUSER_EXCEL",
              "TFN_DID_MANAGER_EXCEL",
              "TFN_DID_MANAGER_DELIMITED",
              "CASPER_REPORT"
            ],
            "type": "string"
          },
          "requestUser": {
            "$ref": "#/components/schemas/User"
          },
          "schedule": {
            "$ref": "#/components/schemas/Schedule"
          },
          "scheduledReport": {
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "RequeueShortcut": {
        "properties": {
          "campaign": {
            "$ref": "#/components/schemas/Campaign"
          },
          "gate": {
            "$ref": "#/components/schemas/Gate"
          },
          "groupSkill": {
            "$ref": "#/components/schemas/GateGroupSkill"
          },
          "name": {
            "type": "string"
          },
          "rank": {
            "format": "int32",
            "type": "integer"
          },
          "requeueGate": {
            "$ref": "#/components/schemas/Gate"
          },
          "requeueGateGroup": {
            "$ref": "#/components/schemas/GateGroup"
          },
          "requeueShortcutId": {
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "ResultFileDestination": {
        "properties": {
          "aggregateOutput": {
            "format": "byte",
            "type": "string"
          },
          "destType": {
            "type": "string"
          },
          "destinationId": {
            "format": "int32",
            "type": "integer"
          },
          "destinationName": {
            "type": "string"
          },
          "emailDest": {
            "type": "string"
          },
          "ftpDir": {
            "type": "string"
          },
          "ftpPwd": {
            "type": "string"
          },
          "ftpServer": {
            "type": "string"
          },
          "ftpUid": {
            "type": "string"
          },
          "passive": {
            "format": "byte",
            "type": "string"
          },
          "sendEmptyFiles": {
            "format": "byte",
            "type": "string"
          },
          "sftp": {
            "format": "byte",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Role": {
        "properties": {
          "description": {
            "type": "string"
          },
          "roleType": {
            "enum": [
              "SUPER_USER",
              "USER",
              "MANAGE_USERS",
              "MANAGE_RIGHTS",
              "ACCESS_SIBLINGS",
              "ACCESS_AUDIT_LOG",
              "ACCESS_GOODDATA_ADMIN",
              "ACCESS_GOODDATA_EDITOR",
              "ACCESS_GOODDATA_EXPLORER",
              "ACCESS_GOODDATA_VIEWER",
              "ACCESS_GOODDATA_EMBEDDED_EXPLORER",
              "ACCESS_GOODDATA_EMBEDDED_DASHBOARD",
              "ASSUME_USERS",
              "REPORT_ADMINISTRATIVE_USER",
              "NO_ACCESS"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "Schedule": {
        "properties": {
          "dayOfTheMonth": {
            "format": "int32",
            "type": "integer"
          },
          "daysOfWeek": {
            "items": {
              "enum": [
                "SUNDAY",
                "MONDAY",
                "TUESDAY",
                "WEDNESDAY",
                "THURSDAY",
                "FRIDAY",
                "SATURDAY"
              ],
              "type": "string"
            },
            "type": "array"
          },
          "endDate": {
            "$ref": "#/components/schemas/DateTime"
          },
          "endTime": {
            "$ref": "#/components/schemas/LocalTime"
          },
          "interval": {
            "format": "int32",
            "type": "integer"
          },
          "month": {
            "enum": [
              "JANUARY",
              "FEBRUARY",
              "MARCH",
              "APRIL",
              "MAY",
              "JUNE",
              "JULY",
              "AUGUST",
              "SEPTEMBER",
              "OCTOBER",
              "NOVEMBER",
              "DECEMBER"
            ],
            "type": "string"
          },
          "repeatOption": {
            "enum": [
              "SINGLE",
              "MINUTE",
              "HOURLY",
              "DAILY",
              "WEEKLY",
              "MONTHLY",
              "CALENDAR",
              "YEARLY"
            ],
            "type": "string"
          },
          "scheduleTimezoneName": {
            "type": "string"
          },
          "startDate": {
            "$ref": "#/components/schemas/DateTime"
          },
          "startTime": {
            "$ref": "#/components/schemas/LocalTime"
          },
          "versionNum": {
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "Script": {
        "properties": {
          "account": {
            "$ref": "#/components/schemas/Account"
          },
          "created": {
            "$ref": "#/components/schemas/DateTime"
          },
          "description": {
            "type": "string"
          },
          "groupId": {
            "format": "int32",
            "type": "integer"
          },
          "isActive": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "permissions": {
            "items": {
              "enum": [
                "CREATE",
                "READ",
                "UPDATE",
                "DELETE",
                "REPORT"
              ],
              "type": "string"
            },
            "type": "array"
          },
          "scriptGroup": {
            "$ref": "#/components/schemas/ScriptGroup"
          },
          "scriptId": {
            "format": "int32",
            "type": "integer"
          },
          "updated": {
            "$ref": "#/components/schemas/DateTime"
          }
        },
        "type": "object"
      },
      "ScriptGroup": {
        "properties": {
          "account": {
            "$ref": "#/components/schemas/Account"
          },
          "groupId": {
            "format": "int32",
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "permissions": {
            "items": {
              "enum": [
                "CREATE",
                "READ",
                "UPDATE",
                "DELETE",
                "REPORT"
              ],
              "type": "string"
            },
            "type": "array"
          },
          "scripts": {
            "items": {
              "$ref": "#/components/schemas/Script"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "SuppressedType": {
        "properties": {
          "name": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "Survey": {
        "properties": {
          "accountId": {
            "type": "string"
          },
          "active": {
            "format": "byte",
            "type": "string"
          },
          "enableTokens": {
            "format": "int32",
            "type": "integer"
          },
          "exportFlag": {
            "format": "byte",
            "type": "string"
          },
          "headingCss": {
            "type": "string"
          },
          "lastModified": {
            "$ref": "#/components/schemas/Timestamp"
          },
          "name": {
            "type": "string"
          },
          "submitText": {
            "type": "string"
          },
          "surveyDesc": {
            "type": "string"
          },
          "surveyId": {
            "format": "int32",
            "type": "integer"
          },
          "surveyName": {
            "type": "string"
          },
          "tableCss": {
            "type": "string"
          },
          "textCss": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "TimeRange": {
        "properties": {
          "rangeType": {
            "enum": [
              "MINUTE",
              "HOUR",
              "DAY",
              "WEEK",
              "MONTH",
              "YEAR",
              "NOW"
            ],
            "type": "string"
          },
          "rangeValue": {
            "format": "int32",
            "type": "integer"
          },
          "rangeValueValid": {
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "Timestamp": {
        "properties": {
          "date": {
            "format": "int32",
            "type": "integer"
          },
          "day": {
            "format": "int32",
            "type": "integer"
          },
          "hours": {
            "format": "int32",
            "type": "integer"
          },
          "minutes": {
            "format": "int32",
            "type": "integer"
          },
          "month": {
            "format": "int32",
            "type": "integer"
          },
          "nanos": {
            "format": "int32",
            "type": "integer"
          },
          "seconds": {
            "format": "int32",
            "type": "integer"
          },
          "time": {
            "format": "int64",
            "type": "integer"
          },
          "timezoneOffset": {
            "format": "int32",
            "type": "integer"
          },
          "year": {
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "Timezone": {
        "properties": {
          "description": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "UploadLeadsRequest": {
        "properties": {
          "description": {
            "type": "string"
          },
          "dialPriority": {
            "description": "Setting this to `IMMEDIATE` allows you to insert a lead to the top of the dialer cache for immediate dialing if you want a normal insert then do not add this parameter.",
            "enum": [
              "IMMEDIATE",
              "NORMAL"
            ],
            "type": "string"
          },
          "duplicateHandling": {
            "enum": [
              "RETAIN_ALL",
              "REMOVE_ALL_EXISTING",
              "REMOVE_FROM_LIST"
            ],
            "type": "string"
          },
          "listState": {
            "enum": [
              "ACTIVE"
            ],
            "type": "string"
          },
          "timeZoneOption": {
            "enum": [
              "NPA_NXX",
              "ZIPCODE",
              "EXPLICIT"
            ],
            "type": "string"
          },
          "uploadLeads": {
            "items": {
              "$ref": "#/components/schemas/CampaignLead"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "UploadLeadsResponse": {
        "properties": {
          "deletedCount": {
            "format": "int32",
            "type": "integer"
          },
          "dncReturnedCount": {
            "format": "int32",
            "type": "integer"
          },
          "dncUploadCount": {
            "format": "int32",
            "type": "integer"
          },
          "hasDeletedLeads": {
            "type": "boolean"
          },
          "internalDncCount": {
            "format": "int32",
            "type": "integer"
          },
          "leadsAccepted": {
            "format": "int32",
            "type": "integer"
          },
          "leadsConverted": {
            "format": "int32",
            "type": "integer"
          },
          "leadsInserted": {
            "format": "int32",
            "type": "integer"
          },
          "leadsSupplied": {
            "format": "int32",
            "type": "integer"
          },
          "listState": {
            "type": "string"
          },
          "message": {
            "description": "Values can be `Your uploaded lead list has successfully completed processing` or `Your uploaded lead list file processing has failed`",
            "type": "string"
          },
          "processingResult": {
            "description": "Values can be `OK` or `Failed`",
            "type": "string"
          },
          "processingStatus": {
            "description": "Values can be `DEFAULT_NOT_A_FAILURE` or `GENERAL_FAILURE`",
            "type": "string"
          },
          "quotaCount": {
            "format": "int32",
            "type": "integer"
          },
          "timeZoneOption": {
            "type": "string"
          },
          "uploadFileName": {
            "type": "string"
          },
          "whitelistCount": {
            "format": "int32",
            "type": "integer"
          }
        },
        "required": [
          "message",
          "leadsSupplied",
          "leadsConverted",
          "leadsAccepted",
          "leadsInserted",
          "internalDncCount",
          "dncUploadCount",
          "dncReturnedCount",
          "whitelistCount",
          "uploadFileName",
          "deletedCount",
          "quotaCount",
          "listState",
          "timeZoneOption",
          "hasDeletedLeads",
          "processingResult",
          "processingStatus"
        ],
        "type": "object"
      },
      "User": {
        "properties": {
          "children": {
            "items": {
              "$ref": "#/components/schemas/User"
            },
            "type": "array"
          },
          "creationDate": {
            "$ref": "#/components/schemas/DateTime"
          },
          "enabled": {
            "type": "boolean"
          },
          "firstName": {
            "type": "string"
          },
          "fullName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "parentPath": {
            "type": "string"
          },
          "phoneNumber": {
            "type": "string"
          },
          "roles": {
            "items": {
              "$ref": "#/components/schemas/Role"
            },
            "type": "array"
          },
          "rootUser": {
            "type": "boolean"
          },
          "userId": {
            "format": "int32",
            "type": "integer"
          },
          "userName": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "UserLoginView": {
        "properties": {
          "accounts": {
            "items": {
              "$ref": "#/components/schemas/AccountView"
            },
            "type": "array"
          },
          "authToken": {
            "type": "string"
          },
          "user": {
            "$ref": "#/components/schemas/User"
          }
        },
        "type": "object"
      },
      "WhitelistTag": {
        "properties": {
          "accountId": {
            "type": "string"
          },
          "addedBy": {
            "type": "string"
          },
          "addedDts": {
            "$ref": "#/components/schemas/DateTime"
          },
          "tag": {
            "type": "string"
          },
          "whitelistTagId": {
            "format": "int32",
            "type": "integer"
          },
          "wlTagId": {
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "WhitelistTagMembers": {
        "properties": {
          "campaign": {
            "$ref": "#/components/schemas/Campaign"
          },
          "campaignId": {
            "format": "int32",
            "type": "integer"
          },
          "whitelistTag": {
            "$ref": "#/components/schemas/WhitelistTag"
          },
          "wlTagId": {
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      }
    },
    "securitySchemes": {
      "ApiKeyAuth": {
        "in": "header",
        "name": "X-Auth-Token",
        "type": "apiKey"
      }
    }
  },
  "info": {
    "description": "",
    "termsOfService": "https://developers.ringcentral.com",
    "title": "RingCentral Engage Voice API",
    "version": "1.0"
  },
  "openapi": "3.0.0",
  "paths": {
    "/api/auth/login": {
      "get": {
        "deprecated": false,
        "operationId": "getAccessTokenUserDetails",
        "parameters": [
          {
            "description": "Authorization",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessTokenUserDetails"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [],
        "summary": "Retrieves User Information based on a pre-defined Engage Access Token",
        "tags": [
          "Authentication"
        ]
      }
    },
    "/api/auth/login/admin": {
      "post": {
        "deprecated": false,
        "operationId": "loginAdmin",
        "parameters": [
          {
            "description": "password",
            "in": "query",
            "name": "password",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "platformId",
            "in": "query",
            "name": "platformId",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "username",
            "in": "query",
            "name": "username",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessTokenUserDetails"
                }
              }
            },
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [],
        "summary": "Logs in an Admin user",
        "tags": [
          "Authentication"
        ]
      }
    },
    "/api/auth/login/agent": {
      "post": {
        "deprecated": false,
        "operationId": "loginAgent",
        "parameters": [
          {
            "description": "password",
            "in": "query",
            "name": "password",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "platformId",
            "in": "query",
            "name": "platformId",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "username",
            "in": "query",
            "name": "username",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessTokenUserDetails"
                }
              }
            },
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [],
        "summary": "Logs in an Agent user",
        "tags": [
          "Authentication"
        ]
      }
    },
    "/api/auth/login/agent/hashcode": {
      "post": {
        "deprecated": false,
        "operationId": "authenticateAgentLoginByHashcodeAndAgentId",
        "parameters": [
          {
            "description": "agentId",
            "in": "query",
            "name": "agentId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "loginHashcode",
            "in": "query",
            "name": "loginHashcode",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "platformId",
            "in": "query",
            "name": "platformId",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "rcAccountId",
            "in": "query",
            "name": "rcAccountId",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessTokenUserDetails"
                }
              }
            },
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [],
        "summary": "Validate agent login and get new refresh token based on the agent loginHashcode",
        "tags": [
          "Authentication"
        ]
      }
    },
    "/api/auth/login/code": {
      "post": {
        "deprecated": false,
        "operationId": "loginWithEngageAuthCode",
        "parameters": [
          {
            "description": "code",
            "in": "query",
            "name": "code",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessTokenUserDetails"
                }
              }
            },
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [],
        "summary": "Log in a user via a one-time use Engage AuthCode",
        "tags": [
          "Authentication"
        ]
      }
    },
    "/api/auth/login/rc/accesstoken": {
      "post": {
        "deprecated": false,
        "operationId": "loginWithRcAccessToken",
        "parameters": [
          {
            "description": "rcAccessToken",
            "in": "query",
            "name": "rcAccessToken",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "allowEmptyValue": false,
            "description": "'Bearer' for OAuth 2.0 bearer token",
            "in": "query",
            "name": "rcTokenType",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessTokenUserDetails"
                }
              }
            },
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [],
        "summary": "Logs in an RC user via their access token issued by the RC API server",
        "tags": [
          "Authentication"
        ]
      }
    },
    "/api/auth/login/tenfold/accesstoken": {
      "post": {
        "deprecated": false,
        "operationId": "loginWithTenfoldAccessToken",
        "parameters": [
          {
            "description": "token",
            "in": "query",
            "name": "token",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessTokenUserDetails"
                }
              }
            },
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [],
        "summary": "Logs in an RC Tenfold user via their access token issued by the RC API server",
        "tags": [
          "Authentication"
        ]
      }
    },
    "/api/auth/logout/{refreshToken}": {
      "delete": {
        "deprecated": false,
        "operationId": "logoutEngageAuthUser",
        "parameters": [
          {
            "description": "refreshToken",
            "in": "path",
            "name": "refreshToken",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [],
        "summary": "Logs out a user and deletes the platform cookie from the user's client",
        "tags": [
          "Authentication"
        ]
      }
    },
    "/api/auth/password/internal/requestreset": {
      "post": {
        "deprecated": false,
        "operationId": "internalRequestPasswordReset",
        "parameters": [
          {
            "description": "internalJwt",
            "in": "query",
            "name": "internalJwt",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [],
        "summary": "Get password reset url",
        "tags": [
          "Password Reset"
        ]
      }
    },
    "/api/auth/password/requestreset": {
      "post": {
        "deprecated": false,
        "operationId": "requestPasswordReset",
        "parameters": [
          {
            "description": "platformId",
            "in": "query",
            "name": "platformId",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "username",
            "in": "query",
            "name": "username",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [],
        "summary": "Get password reset url for a specified platform",
        "tags": [
          "Password Reset"
        ]
      }
    },
    "/api/auth/token/claims": {
      "get": {
        "deprecated": false,
        "operationId": "getClaimsForAccessToken",
        "parameters": [
          {
            "description": "Bearer Token",
            "in": "header",
            "name": "Authorization",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [],
        "summary": "Get Claims for Access Token",
        "tags": [
          "Token"
        ]
      }
    },
    "/api/auth/token/digitaljwt": {
      "get": {
        "deprecated": false,
        "operationId": "getDigitalJwt",
        "parameters": [
          {
            "description": "Bearer Token",
            "in": "header",
            "name": "Authorization",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [],
        "summary": "Get Digital SSO JWT based on the RC Account Id",
        "tags": [
          "Token"
        ]
      }
    },
    "/api/auth/token/refresh": {
      "post": {
        "deprecated": false,
        "operationId": "refreshAccessToken",
        "parameters": [
          {
            "description": "X-Auth-Token",
            "in": "query",
            "name": "X-Auth-Token",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "refresh_token",
            "in": "query",
            "name": "refresh_token",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessTokenUserDetails"
                }
              }
            },
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [],
        "summary": "Get Refresh Access Token",
        "tags": [
          "Token"
        ]
      }
    },
    "/api/auth/token/validate": {
      "get": {
        "deprecated": false,
        "operationId": "verifyAccessToken",
        "parameters": [
          {
            "description": "Bearer Token",
            "in": "header",
            "name": "Authorization",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [],
        "summary": "Validate Access Token",
        "tags": [
          "Token"
        ]
      }
    },
    "/oauthcallback": {
      "get": {
        "deprecated": false,
        "operationId": "defaultOAuthCallback",
        "parameters": [
          {
            "description": "code",
            "in": "query",
            "name": "code",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "state",
            "in": "query",
            "name": "state",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RedirectView"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [],
        "summary": "Get SSO Callback",
        "tags": [
          "OAuth"
        ]
      }
    },
    "/oauthredirect": {
      "get": {
        "deprecated": false,
        "operationId": "loadSsoLogin",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [],
        "summary": "Prepare page that will redirect user to SSO login",
        "tags": [
          "OAuth"
        ]
      }
    },
    "/password/reset/{platformId}/{passwordResetToken}": {
      "get": {
        "deprecated": false,
        "operationId": "resetPasswordCallback",
        "parameters": [
          {
            "description": "passwordResetToken",
            "in": "path",
            "name": "passwordResetToken",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "platformId",
            "in": "path",
            "name": "platformId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RedirectView"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [],
        "summary": "Get Redirect to Reset Password",
        "tags": [
          "Password Reset"
        ]
      }
    },
    "/voice/api/v1/admin/accounts/{accountId}/activeCalls/createManualAgentCall": {
      "post": {
        "description": "Permissions: READ on Account (Permission Override)",
        "operationId": "createManualAgentCall",
        "parameters": [
          {
            "description": "accountId",
            "in": "path",
            "name": "accountId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "username",
            "in": "query",
            "name": "username",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "destination",
            "in": "query",
            "name": "destination",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "ringDuration",
            "in": "query",
            "name": "ringDuration",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "callerId",
            "in": "query",
            "name": "callerId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [],
        "summary": "Creates a manual agent call",
        "tags": [
          "Active Call"
        ]
      }
    },
    "/voice/api/v1/admin/accounts/{accountId}/activeCalls/list": {
      "get": {
        "description": "Permissions: READ on Account",
        "operationId": "getProductActiveCallsListRequest",
        "parameters": [
          {
            "description": "accountId",
            "in": "path",
            "name": "accountId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "product",
            "in": "query",
            "name": "product",
            "required": true,
            "schema": {
              "enum": [
                "ACCOUNT",
                "ACD",
                "AGENT",
                "CHAT_QUEUE",
                "OUTBOUND",
                "VISUAL_IVR",
                "CLOUD_PROFILE",
                "CLOUD_DESTINATION",
                "TRAC_NUMBER",
                "HTTP_SERVICES",
                "SCRIPTING",
                "TN_MANAGER",
                "SURVEY",
                "DNIS",
                "TEAMS",
                "KNOWLEDGE_BASE",
                "UTILITIES"
              ],
              "type": "string"
            }
          },
          {
            "description": "productId",
            "in": "query",
            "name": "productId",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "page",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "maxRows",
            "in": "query",
            "name": "maxRows",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ActiveCallListResponse"
                  },
                  "type": "array"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [],
        "summary": "Returns a listing of current active calls for a given product on an account",
        "tags": [
          "Active Call"
        ]
      }
    },
    "/voice/api/v1/admin/accounts/{accountId}/activeCalls/{uii}/addSessionToCall": {
      "post": {
        "description": "Permissions: READ on Agent (Permission Override)",
        "operationId": "addSessionToCall",
        "parameters": [
          {
            "description": "accountId",
            "in": "path",
            "name": "accountId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "uii",
            "in": "path",
            "name": "uii",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "destination",
            "in": "query",
            "name": "destination",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "sessionType",
            "in": "query",
            "name": "sessionType",
            "required": true,
            "schema": {
              "enum": [
                "MONITOR",
                "BARGEIN",
                "COACHING"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [],
        "summary": "Provides support for adding sessions to an active call.",
        "tags": [
          "Active Call"
        ]
      }
    },
    "/voice/api/v1/admin/accounts/{accountId}/activeCalls/{uii}/dispositionCall": {
      "post": {
        "description": "Permissions: READ on Account (Permission Override)",
        "operationId": "dispositionCall",
        "parameters": [
          {
            "description": "accountId",
            "in": "path",
            "name": "accountId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "uii",
            "in": "path",
            "name": "uii",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "disposition",
            "in": "query",
            "name": "disposition",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "callback",
            "in": "query",
            "name": "callback",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "callBackDTS",
            "in": "query",
            "name": "callBackDTS",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "notes",
            "in": "query",
            "name": "notes",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [],
        "summary": "Sets the call disposition for either INBOUND or OUTBOUND calls and releases the agent from PD state",
        "tags": [
          "Active Call"
        ]
      }
    },
    "/voice/api/v1/admin/accounts/{accountId}/activeCalls/{uii}/hangupCall": {
      "post": {
        "description": "Permissions: READ on Account (Permission Override)",
        "operationId": "hangupCall",
        "parameters": [
          {
            "description": "accountId",
            "in": "path",
            "name": "accountId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "uii",
            "in": "path",
            "name": "uii",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [],
        "summary": "Terminates an active call",
        "tags": [
          "Active Call"
        ]
      }
    },
    "/voice/api/v1/admin/accounts/{accountId}/activeCalls/{uii}/hangupSession": {
      "post": {
        "description": "Permissions: READ on Account (Permission Override)",
        "operationId": "hangupSession",
        "parameters": [
          {
            "description": "accountId",
            "in": "path",
            "name": "accountId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "uii",
            "in": "path",
            "name": "uii",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "phone",
            "in": "query",
            "name": "phone",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [],
        "summary": "Terminates an active session",
        "tags": [
          "Active Call"
        ]
      }
    },
    "/voice/api/v1/admin/accounts/{accountId}/activeCalls/{uii}/toggleCallRecording": {
      "post": {
        "description": "Permissions: READ on Account (Permission Override)",
        "operationId": "toggleCallRecording",
        "parameters": [
          {
            "description": "accountId",
            "in": "path",
            "name": "accountId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "uii",
            "in": "path",
            "name": "uii",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "record",
            "in": "query",
            "name": "record",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [],
        "summary": "Provides support for toggling call recording on/off for an active call",
        "tags": [
          "Active Call"
        ]
      }
    },
    "/voice/api/v1/admin/accounts/{accountId}/agentGroups": {
      "get": {
        "description": "Permissions: READ on Account, Post Filtered Results",
        "operationId": "getAgentGroupList",
        "parameters": [
          {
            "description": "accountId",
            "in": "path",
            "name": "accountId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "page",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "maxRows",
            "in": "query",
            "name": "maxRows",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "includePermissions",
            "in": "query",
            "name": "includePermissions",
            "required": false,
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/AgentGroup"
                  },
                  "type": "array"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [],
        "summary": "Returns a listing of agent groups for an account",
        "tags": [
          "Agent"
        ]
      },
      "post": {
        "description": "Permissions: CREATE on Account",
        "operationId": "createAgentGroup",
        "parameters": [
          {
            "description": "accountId",
            "in": "path",
            "name": "accountId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AgentGroup"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgentGroup"
                }
              }
            },
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [],
        "summary": "Creates a single new agent group for an account",
        "tags": [
          "Agent"
        ]
      }
    },
    "/voice/api/v1/admin/accounts/{accountId}/agentGroups/{agentGroupId}": {
      "delete": {
        "description": "Permissions: DELETE on Agent Group",
        "operationId": "deleteAgentGroup",
        "parameters": [
          {
            "description": "accountId",
            "in": "path",
            "name": "accountId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "agentGroupId",
            "in": "path",
            "name": "agentGroupId",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [],
        "summary": "Deletes an agent group for an account",
        "tags": [
          "Agent"
        ]
      },
      "get": {
        "description": "Permissions: READ on Gate Group",
        "operationId": "getAgentGroup",
        "parameters": [
          {
            "description": "accountId",
            "in": "path",
            "name": "accountId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "agentGroupId",
            "in": "path",
            "name": "agentGroupId",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "includePermissions",
            "in": "query",
            "name": "includePermissions",
            "required": false,
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgentGroup"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [],
        "summary": "Returns a listing of agent groups for an account",
        "tags": [
          "Agent"
        ]
      },
      "put": {
        "description": "Permissions: UPDATE on Agent Group",
        "operationId": "updateAgentGroup",
        "parameters": [
          {
            "description": "accountId",
            "in": "path",
            "name": "accountId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "agentGroupId",
            "in": "path",
            "name": "agentGroupId",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AgentGroup"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgentGroup"
                }
              }
            },
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [],
        "summary": "Updates an agent group for an account",
        "tags": [
          "Agent"
        ]
      }
    },
    "/voice/api/v1/admin/accounts/{accountId}/agentGroups/{agentGroupId}/agents": {
      "get": {
        "description": "Permissions: READ on Agent Group, Post Filtered Results",
        "operationId": "getList",
        "parameters": [
          {
            "description": "accountId",
            "in": "path",
            "name": "accountId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "agentGroupId",
            "in": "path",
            "name": "agentGroupId",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/AgentGroup"
                  },
                  "type": "array"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [],
        "summary": "Returns a listing of agents for an agent group",
        "tags": [
          "Agent"
        ]
      },
      "post": {
        "description": "Permissions: CREATE on Agent Group",
        "operationId": "createAgent",
        "parameters": [
          {
            "description": "accountId",
            "in": "path",
            "name": "accountId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "agentGroupId",
            "in": "path",
            "name": "agentGroupId",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Agent"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/Agent"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [],
        "summary": "Creates a single agent for an agent group",
        "tags": [
          "Agent"
        ]
      },
      "put": {
        "description": "Permissions: UPDATE on Agent Group",
        "operationId": "updateAgents",
        "parameters": [
          {
            "description": "accountId",
            "in": "path",
            "name": "accountId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "agentGroupId",
            "in": "path",
            "name": "agentGroupId",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Agent"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/Agent"
                  },
                  "type": "array"
                }
              }
            },
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [],
        "summary": "Updates a listing of agents for an agent group",
        "tags": [
          "Agent"
        ]
      }
    },
    "/voice/api/v1/admin/accounts/{accountId}/agentGroups/{agentGroupId}/agents/{agentId}": {
      "delete": {
        "description": "Permissions: DELETE on Agent",
        "operationId": "deleteAgent",
        "parameters": [
          {
            "description": "accountId",
            "in": "path",
            "name": "accountId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "agentGroupId",
            "in": "path",
            "name": "agentGroupId",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "agentId",
            "in": "path",
            "name": "agentId",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [],
        "summary": "Deletes an agent for an agent group",
        "tags": [
          "Agent"
        ]
      },
      "get": {
        "description": "Permissions: READ on Agent",
        "operationId": "getDetail",
        "parameters": [
          {
            "description": "accountId",
            "in": "path",
            "name": "accountId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "agentGroupId",
            "in": "path",
            "name": "agentGroupId",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "agentId",
            "in": "path",
            "name": "agentId",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/Agent"
                  },
                  "type": "array"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [],
        "summary": "Returns a single agent for an agent group",
        "tags": [
          "Agent"
        ]
      },
      "put": {
        "description": "Permissions: UPDATE on Agent",
        "operationId": "updateAgent",
        "parameters": [
          {
            "description": "accountId",
            "in": "path",
            "name": "accountId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "agentGroupId",
            "in": "path",
            "name": "agentGroupId",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "agentId",
            "in": "path",
            "name": "agentId",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Agent"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/Agent"
                  },
                  "type": "array"
                }
              }
            },
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [],
        "summary": "Updates a single agent for an agent group",
        "tags": [
          "Agent"
        ]
      }
    },
    "/voice/api/v1/admin/accounts/{accountId}/campaignLeads/leadSearch": {
      "post": {
        "description": "Allows searching of campaign leads for a single campaign\n\nPermissions: READ on Account (Permission Override)",
        "operationId": "searchLeads",
        "parameters": [
          {
            "in": "path",
            "name": "accountId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "count",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "maxRows",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CampaignLeadSearchCriteria"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/CampaignLeadSearchResultsView"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Success"
          }
        },
        "summary": "Search Leads",
        "tags": [
          "Campaign Lead"
        ]
      }
    },
    "/voice/api/v1/admin/accounts/{accountId}/campaignLeads/leadStates": {
      "get": {
        "description": "Returns a listing of all lead states for an account\n\nPermissions: READ on Account",
        "operationId": "getLeadStates",
        "parameters": [
          {
            "in": "path",
            "name": "accountId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Success"
          }
        },
        "summary": "Get Lead States",
        "tags": [
          "Campaign Lead"
        ]
      }
    },
    "/voice/api/v1/admin/accounts/{accountId}/campaignLeads/systemDispositions": {
      "get": {
        "description": "Returns a listing of all system dispositions for an account\n\nPermissions: READ on Account",
        "operationId": "getSystemDispositions",
        "parameters": [
          {
            "in": "path",
            "name": "accountId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Success"
          }
        },
        "summary": "Get Systems Dispositions",
        "tags": [
          "Campaign Lead"
        ]
      }
    },
    "/voice/api/v1/admin/accounts/{accountId}/campaignLeads/{leadId}": {
      "patch": {
        "description": "Allows updating of a campaign lead, only updating those fields passed in\n\nPermissions: READ on Account (Permission Override), UPDATE on Campaign",
        "operationId": "patchCampaignLead",
        "parameters": [
          {
            "in": "path",
            "name": "accountId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "leadId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "campaignId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "listId",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "timezoneOption",
            "required": false,
            "schema": {
              "enum": [
                "NPA_NXX",
                "ZIPCODE",
                "EXPLICIT",
                "NOT_APPLICABLE"
              ],
              "type": "string"
            }
          },
          {
            "description": "`RETAIN_ALL`: Retain all records, `REMOVE_ALL_EXISTING`: Remove duplicates from all existing lists, `REMOVE_FROM_LIST`: Remove duplicates from this list",
            "in": "query",
            "name": "duplicateHandling",
            "required": false,
            "schema": {
              "default": "RETAIN_ALL",
              "enum": [
                "RETAIN_ALL",
                "REMOVE_ALL_EXISTING",
                "REMOVE_FROM_LIST"
              ],
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CampaignLead"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CampaignLead"
                }
              }
            },
            "description": "Success"
          }
        },
        "summary": "Patch Campaign Lead",
        "tags": [
          "Campaign"
        ]
      },
      "put": {
        "description": "Allows updating of a campaign lead, updating entire lead including fields not passed in.\n\nPermissions: READ on Account (Permission Override), UPDATE on Campaign",
        "operationId": "updateCampaignLead",
        "parameters": [
          {
            "in": "path",
            "name": "accountId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "leadId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "campaignId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "listId",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "timezoneOption",
            "required": false,
            "schema": {
              "enum": [
                "NPA_NXX",
                "ZIPCODE",
                "EXPLICIT",
                "NOT_APPLICABLE"
              ],
              "type": "string"
            }
          },
          {
            "description": "`RETAIN_ALL`: Retain all records, `REMOVE_ALL_EXISTING`: Remove duplicates from all existing lists, `REMOVE_FROM_LIST`: Remove duplicates from this list",
            "in": "query",
            "name": "duplicateHandling",
            "required": false,
            "schema": {
              "default": "RETAIN_ALL",
              "enum": [
                "RETAIN_ALL",
                "REMOVE_ALL_EXISTING",
                "REMOVE_FROM_LIST"
              ],
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CampaignLead"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CampaignLead"
                }
              }
            },
            "description": "Success"
          }
        },
        "summary": "Update Campaign Lead",
        "tags": [
          "Campaign"
        ]
      }
    },
    "/voice/api/v1/admin/accounts/{accountId}/campaigns/{campaignId}/leadLoader/direct": {
      "post": {
        "description": "Uploads a single lead or list of leads to a new or existing list",
        "operationId": "uploadLeads",
        "parameters": [
          {
            "in": "path",
            "name": "accountId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "campaignId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UploadLeadsRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UploadLeadsResponse"
                }
              }
            },
            "description": "Success"
          }
        },
        "summary": "Upload Leads",
        "tags": [
          "Campaign"
        ]
      }
    },
    "/voice/api/v1/admin/accounts/{accountId}/countries/available": {
      "get": {
        "description": "Get a list of available countries",
        "operationId": "getAvailableCountries",
        "parameters": [
          {
            "in": "path",
            "name": "accountId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/Country"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Success"
          }
        },
        "summary": "Get Available Countries",
        "tags": [
          "Country"
        ]
      }
    },
    "/voice/api/v1/admin/accounts/{accountId}/dialGroups": {
      "get": {
        "description": "Permissions: READ on Account, Post Filtered Results",
        "operationId": "getDialGroupListByAccount",
        "parameters": [
          {
            "description": "accountId",
            "in": "path",
            "name": "accountId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "page",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "maxRows",
            "in": "query",
            "name": "maxRows",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/DialGroup"
                  },
                  "type": "array"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [],
        "summary": "Returns a listing of dial groups for an account",
        "tags": [
          "Outbound"
        ]
      },
      "post": {
        "description": "Permissions: CREATE on Account",
        "operationId": "createDialGroup",
        "parameters": [
          {
            "description": "accountId",
            "in": "path",
            "name": "accountId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DialGroup"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DialGroup"
                }
              }
            },
            "description": "CREATED"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [],
        "summary": "Creates a dial group for an account",
        "tags": [
          "Outbound"
        ]
      }
    },
    "/voice/api/v1/admin/accounts/{accountId}/dialGroups/withChildren": {
      "get": {
        "description": "Permissions: READ on Account, Post Filtered Results for Dial Groups and Campaigns",
        "operationId": "getDialGroupListWithChildren",
        "parameters": [
          {
            "description": "accountId",
            "in": "path",
            "name": "accountId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "includePermissions",
            "in": "query",
            "name": "includePermissions",
            "required": false,
            "schema": {
              "default": "false",
              "type": "boolean"
            }
          },
          {
            "description": "page",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "maxRows",
            "in": "query",
            "name": "maxRows",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/DialGroup"
                  },
                  "type": "array"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [],
        "summary": "Returns a listing of dial groups with associated campaigns for an account",
        "tags": [
          "Outbound"
        ]
      }
    },
    "/voice/api/v1/admin/accounts/{accountId}/dialGroups/{dialGroupId}": {
      "delete": {
        "description": "Permissions: DELETE on Account",
        "operationId": "deleteDialGroup",
        "parameters": [
          {
            "description": "accountId",
            "in": "path",
            "name": "accountId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "dialGroupId",
            "in": "path",
            "name": "dialGroupId",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [],
        "summary": "Deletes a dial group for an account",
        "tags": [
          "Outbound"
        ]
      },
      "get": {
        "description": "Permissions: READ on Dial Group",
        "operationId": "getDialGroup",
        "parameters": [
          {
            "description": "dialGroupId",
            "in": "path",
            "name": "dialGroupId",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "accountId",
            "in": "path",
            "name": "accountId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DialGroup"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [],
        "summary": "Returns a dial group for an account",
        "tags": [
          "Outbound"
        ]
      },
      "put": {
        "description": "Permissions: UPDATE on Dial Group",
        "operationId": "updateDialGroup",
        "parameters": [
          {
            "description": "accountId",
            "in": "path",
            "name": "accountId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "dialGroupId",
            "in": "path",
            "name": "dialGroupId",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DialGroup"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DialGroup"
                }
              }
            },
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [],
        "summary": "Updates a dial group for an account",
        "tags": [
          "Outbound"
        ]
      }
    },
    "/voice/api/v1/admin/accounts/{accountId}/dialGroups/{dialGroupId}/assignAgents": {
      "put": {
        "description": "Permissions: UPDATE on Dial Group and READ on Agent",
        "operationId": "assignAgentsToDialGroups",
        "parameters": [
          {
            "description": "accountId",
            "in": "path",
            "name": "accountId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "dialGroupId",
            "in": "path",
            "name": "dialGroupId",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DialGroup"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Agent"
                }
              }
            },
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [],
        "summary": "Assigns a listing of agents to a dial group",
        "tags": [
          "Outbound"
        ]
      }
    },
    "/voice/api/v1/admin/accounts/{accountId}/dialGroups/{dialGroupId}/assignedAgents": {
      "get": {
        "description": "Permissions: READ on Dial Group",
        "operationId": "getAgentsFromDialGroup",
        "parameters": [
          {
            "description": "accountId",
            "in": "path",
            "name": "accountId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "dialGroupId",
            "in": "path",
            "name": "dialGroupId",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "page",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "maxRows",
            "in": "query",
            "name": "maxRows",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/Agent"
                  },
                  "type": "array"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [],
        "summary": "Returns a listing of all agents assigned to a dial group",
        "tags": [
          "Outbound"
        ]
      }
    },
    "/voice/api/v1/admin/accounts/{accountId}/dialGroups/{dialGroupId}/campaigns": {
      "get": {
        "description": "Permissions: READ on Dial Group, Post Filtered Results",
        "operationId": "getCampaignList",
        "parameters": [
          {
            "description": "accountId",
            "in": "path",
            "name": "accountId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "dialGroupId",
            "in": "path",
            "name": "dialGroupId",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "page",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "maxRows",
            "in": "query",
            "name": "maxRows",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/Campaign"
                  },
                  "type": "array"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [],
        "summary": "Returns a listing of campaigns for a dial group",
        "tags": [
          "Outbound"
        ]
      },
      "post": {
        "description": "Permissions: UPDATE on Dial Group (Permission Override)",
        "operationId": "createCampaign",
        "parameters": [
          {
            "description": "accountId",
            "in": "path",
            "name": "accountId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "dialGroupId",
            "in": "path",
            "name": "dialGroupId",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Campaign"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Campaign"
                }
              }
            },
            "description": "CREATED"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [],
        "summary": "Returns a campaign for a dial group",
        "tags": [
          "Outbound"
        ]
      }
    },
    "/voice/api/v1/admin/accounts/{accountId}/dialGroups/{dialGroupId}/campaigns/{campaignId}": {
      "delete": {
        "description": "Permissions: DELETE on Campaign",
        "operationId": "deleteCampaign",
        "parameters": [
          {
            "description": "accountId",
            "in": "path",
            "name": "accountId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "dialGroupId",
            "in": "path",
            "name": "dialGroupId",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "campaignId",
            "in": "path",
            "name": "campaignId",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [],
        "summary": "Deletes a campaign for a dial group",
        "tags": [
          "Outbound"
        ]
      },
      "get": {
        "description": "Permissions: READ on Campaign",
        "operationId": "getCampaign",
        "parameters": [
          {
            "description": "accountId",
            "in": "path",
            "name": "accountId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "dialGroupId",
            "in": "path",
            "name": "dialGroupId",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "campaignId",
            "in": "path",
            "name": "campaignId",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Campaign"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [],
        "summary": "Returns a campaign for a dial group",
        "tags": [
          "Outbound"
        ]
      },
      "put": {
        "description": "Permissions: UPDATE on Campaign",
        "operationId": "updateCampaign",
        "parameters": [
          {
            "description": "accountId",
            "in": "path",
            "name": "accountId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "dialGroupId",
            "in": "path",
            "name": "dialGroupId",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "campaignId",
            "in": "path",
            "name": "campaignId",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Campaign"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Campaign"
                }
              }
            },
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [],
        "summary": "Updates a campaign for a dial group",
        "tags": [
          "Outbound"
        ]
      }
    },
    "/voice/api/v1/admin/accounts/{accountId}/dialGroups/{dialGroupId}/campaigns/{campaignId}/clearCache": {
      "post": {
        "description": "lears the cache for a campaign\n\nPermissions: READ on Campaign (Permission Override)",
        "operationId": "clearCampaignCache",
        "parameters": [
          {
            "in": "path",
            "name": "accountId",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "dialGroupId",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "campaignId",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          },
          "description": "An `application/json` Content-Type header is required. Submit an empty body to trigger the header.",
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created"
          }
        },
        "summary": "Clear Campaign Cache",
        "tags": [
          "Dial Group"
        ]
      }
    },
    "/voice/api/v1/admin/accounts/{accountId}/realTimeData/agent": {
      "get": {
        "operationId": "getAgentStates",
        "parameters": [
          {
            "description": "accountId",
            "in": "path",
            "name": "accountId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/AgentStats"
                  },
                  "type": "array"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [],
        "summary": "getAgentStates",
        "tags": [
          "Real Time Reporting"
        ]
      }
    },
    "/voice/api/v1/admin/accounts/{accountId}/realTimeData/chat": {
      "get": {
        "operationId": "getChatStats",
        "parameters": [
          {
            "description": "accountId",
            "in": "path",
            "name": "accountId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ChatStats"
                  },
                  "type": "array"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [],
        "summary": "getChatStats",
        "tags": [
          "Real Time Reporting"
        ]
      }
    },
    "/voice/api/v1/admin/accounts/{accountId}/realTimeData/inbound": {
      "get": {
        "operationId": "getAcdStats",
        "parameters": [
          {
            "description": "accountId",
            "in": "path",
            "name": "accountId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/AcdStats"
                  },
                  "type": "array"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [],
        "summary": "getAcdStats",
        "tags": [
          "Real Time Reporting"
        ]
      }
    },
    "/voice/api/v1/admin/accounts/{accountId}/realTimeData/ivr": {
      "get": {
        "operationId": "getIvrStats",
        "parameters": [
          {
            "description": "accountId",
            "in": "path",
            "name": "accountId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/IvrStats"
                  },
                  "type": "array"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [],
        "summary": "getIvrStats",
        "tags": [
          "Real Time Reporting"
        ]
      }
    },
    "/voice/api/v1/admin/accounts/{accountId}/realTimeData/outbound": {
      "get": {
        "operationId": "getOutboundStats",
        "parameters": [
          {
            "description": "accountId",
            "in": "path",
            "name": "accountId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/OutboundStats"
                  },
                  "type": "array"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [],
        "summary": "getOutboundStats",
        "tags": [
          "Real Time Reporting"
        ]
      }
    },
    "/voice/api/v1/admin/accounts/{accountId}/reportsStreaming": {
      "post": {
        "description": "Permissions: READ on Account",
        "operationId": "streamFile",
        "parameters": [
          {
            "description": "accountId",
            "in": "path",
            "name": "accountId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReportParams"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [],
        "summary": "Streams back an excel or csv file",
        "tags": [
          "Reporting"
        ]
      }
    },
    "/voice/api/v1/admin/reports/{reportType}": {
      "get": {
        "description": "Permissions: Authenticated User",
        "operationId": "getReportCriteriaTemplate",
        "parameters": [
          {
            "description": "reportType",
            "in": "path",
            "name": "reportType",
            "required": true,
            "schema": {
              "enum": [
                "DIALER_RESULT_DOWNLOAD",
                "GLOBAL_CALL_TYPE_EXCEL",
                "GLOBAL_CALL_TYPE_DELIMITED",
                "ALL_CALLS",
                "IVR_DETAIL",
                "TFN_DID_MANAGER_SUPERUSER_EXCEL",
                "TFN_DID_MANAGER_EXCEL",
                "TFN_DID_MANAGER_DELIMITED",
                "CASPER_REPORT"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportCriteria"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [],
        "summary": "Returns a report critera definition for a report type",
        "tags": [
          "Reporting"
        ]
      }
    },
    "/voice/api/v1/admin/token": {
      "get": {
        "description": "Permissions: Authenticated User",
        "operationId": "getApiTokensForLoggedInUser",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                }
              }
            },
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [],
        "summary": "Retrieves all Api Tokens for AuthenticatedUser",
        "tags": [
          "Token"
        ]
      },
      "post": {
        "description": "Permissions: Authenticated User",
        "operationId": "createApiTokenForLoggedInUser",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [],
        "summary": "Creates a new 'Api Token' based AuthenticatedUser that does not expire",
        "tags": [
          "Token"
        ]
      }
    },
    "/voice/api/v1/admin/token/{token}": {
      "delete": {
        "description": "Permissions: Anonymous User",
        "operationId": "removeApiToken",
        "parameters": [
          {
            "description": "token",
            "in": "path",
            "name": "token",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [],
        "summary": "Removes an api token",
        "tags": [
          "Token"
        ]
      }
    },
    "/voice/api/v1/admin/users": {
      "get": {
        "description": "Returns a listing of all users that a user has access to",
        "operationId": "getUsers",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/User"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Success"
          }
        },
        "summary": "Get Users",
        "tags": [
          "User"
        ]
      }
    },
    "/voice/api/v1/auth/login": {
      "post": {
        "description": "Permissions: Anonymous User",
        "operationId": "doLogin",
        "parameters": [
          {
            "description": "username",
            "in": "query",
            "name": "username",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "password",
            "in": "query",
            "name": "password",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stayLoggedIn",
            "in": "query",
            "name": "stayLoggedIn",
            "required": false,
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/UserLoginView"
                  },
                  "type": "array"
                }
              }
            },
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [],
        "summary": "Application login to authenticate and receive an X-Auth-Token",
        "tags": [
          "Token"
        ]
      }
    }
  },
  "security": [
    {
      "ApiKeyAuth": []
    }
  ],
  "servers": [
    {
      "url": "https://engage.ringcentral.com"
    }
  ],
  "tags": [
    {
      "name": "Authentication"
    },
    {
      "name": "Password Reset"
    },
    {
      "name": "Token"
    },
    {
      "name": "OAuth"
    },
    {
      "name": "Active Call"
    },
    {
      "name": "Agent"
    },
    {
      "name": "Campaign"
    },
    {
      "name": "Campaign Lead"
    },
    {
      "name": "Country"
    },
    {
      "name": "Dial Group"
    },
    {
      "name": "Outbound"
    },
    {
      "name": "Real Time Reporting"
    },
    {
      "name": "Reporting"
    },
    {
      "name": "User"
    }
  ]
}